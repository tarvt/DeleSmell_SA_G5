Location: GameServer.java

Content: 

public void addConnection(PlayerMP player,Packet00Login packet){

  boolean alreadyConnected=false;

  for (  PlayerMP p : this.connectedPlayers) {

    if (player.getUsername().equalsIgnoreCase(p.getUsername())) {

      if (p.ipAddess == null) {

        p.ipAddess=player.ipAddess;

      }

      if (p.port == -1) {

        p.port=player.port;

      }

      alreadyConnected=true;

    }

 else {

      sendData(packet.getData(),p.ipAddess,p.port);

      packet=new Packet00Login(p.getUsername(),(int)p.getX(),(int)p.getY());

      sendData(packet.getData(),player.ipAddess,player.port);

    }

  }

  if (!alreadyConnected) {

    this.connectedPlayers.add(player);

  }

}

Location: GameServer.java

Content: 

public GameServer(Game game){

  this.setGame(game);

  try {

    this.socket=new DatagramSocket(1331);

  }

 catch (  SocketException e) {

    e.printStackTrace();

  }

}

Location: GameServer.java

Content: 

public int getPlayerMPIndex(String username){

  int index=0;

  for (  PlayerMP player : this.connectedPlayers) {

    if (player.getUsername().equalsIgnoreCase(username)) {

      break;

    }

 else {

      index++;

    }

  }

  return index;

}

Location: GameServer.java

Content: 

public PlayerMP getPlayerMP(String username){

  for (  PlayerMP player : this.connectedPlayers) {

    if (player.getUsername().equalsIgnoreCase(username)) {

      return player;

    }

  }

  return null;

}

Location: GameServer.java

Content: 

public void removeConnection(Packet01Disconnect packet){

  this.connectedPlayers.remove(getPlayerMPIndex(packet.getUsername()));

  packet.writeData(this);

}

Location: GameServer.java

Content: 

public void sendDataToAllClients(byte[] data){

  for (  PlayerMP p : connectedPlayers) {

    sendData(data,p.ipAddess,p.port);

  }

}

Location: GameServer.java

Content: 

public void sendData(byte[] data,InetAddress ipAddress,int port){

  DatagramPacket packet=new DatagramPacket(data,data.length,ipAddress,port);

  try {

    this.socket.send(packet);

  }

 catch (  IOException e) {

    e.printStackTrace();

  }

}

