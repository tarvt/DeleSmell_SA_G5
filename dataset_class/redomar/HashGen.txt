Location: HashGen.java

Content: 

/** 

 * Retrieve hash

 * @return String containing hash

 */

public String getHash(){

  setHash(hexLength);

  return hexHash;

}

Location: HashGen.java

Content: 

public String getPreviousHash(){

  if (previousHash == null)   return null;

  return previousHash;

}

Location: HashGen.java

Content: 

/** 

 * Use for generating a hex Hash. Requires two parameters;

 * @param showPrefix to show 0x prefix.

 * @param length Length of hash.

 */

public HashGen(boolean showPrefix,int length){

  setPrefix(showPrefix);

  setHexLength(length);

  init();

}

Location: HashGen.java

Content: 

private void init(){

  if (prefix) {

    hexHash="0x";

  }

 else {

    hexHash="";

  }

}

Location: HashGen.java

Content: 

private int randNumGen(){

  int rand=(int)(Math.random() * 16);

  return rand;

}

Location: HashGen.java

Content: 

private void setHash(int hexLength){

  String hex;

  for (int i=0; i < hexLength; i++) {

    hex=Integer.toHexString(randNumGen());

    hex=StringUtils.capitalize(hex);

    hexHash=hexHash + hex;

  }

  previousHash=hexHash;

}

Location: HashGen.java

Content: 

public void setHexLength(int hexLength){

  this.hexLength=hexLength;

}

Location: HashGen.java

Content: 

public void setPrefix(boolean prefix){

  this.prefix=prefix;

}

