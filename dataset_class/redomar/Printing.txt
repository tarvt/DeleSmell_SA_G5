Location: Printing.java

Content: 

public String getMessage(){

  return message;

}

Location: Printing.java

Content: 

public Printing(){

}

Location: Printing.java

Content: 

private void printOut(){

  msgTime="[" + time.getTime() + "]";

  msgType="[" + type.toString() + "]";

  logFile=printToLogType(type);

  if (lineNumber == 0) {

    String dashes="";

    String title=("[" + time.getTimeDate() + "]");

    char dash='-';

    int number=title.length() / 3;

    char[] repeat=new char[number];

    Arrays.fill(repeat,dash);

    dashes+=new String(repeat);

    logFile.log(dashes + title + dashes+ "\n"+ msgTime+ msgType+ this.getMessage());

    lineNumber++;

  }

 else {

    logFile.log(msgTime + msgType + this.getMessage());

  }

  if (errorMode) {

    System.err.println(msgType + msgTime + message);

  }

 else {

    System.out.println(msgType + msgTime + message);

  }

}

Location: Printing.java

Content: 

private PrintToLog printToLogType(PrintTypes type){

  if (type == PrintTypes.TEST) {

    return new PrintToLog(".PrintType-TEST.txt");

  }

 else {

    return new PrintToLog(".log.txt");

  }

}

Location: Printing.java

Content: 

public void print(String message,PrintTypes type){

  this.type=type;

  setMessage(message);

  readMessageType(type);

  printOut();

}

Location: Printing.java

Content: 

private void readMessageType(PrintTypes type){

  this.errorMode=type == PrintTypes.ERROR;

}

Location: Printing.java

Content: 

public void removeLog(){

  new File(".log.txt").delete();

}

Location: Printing.java

Content: 

public void setMessage(String message){

  this.message=message;

}

