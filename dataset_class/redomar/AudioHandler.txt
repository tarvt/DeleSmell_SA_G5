Location: AudioHandler.java

Content: 

public AudioHandler(File file){

  check(file.toString());

}

Location: AudioHandler.java

Content: 

public AudioHandler(String path){

  check(path);

}

Location: AudioHandler.java

Content: 

private void check(String path){

  try {

    if (path != "") {

      initiate(path);

    }

 else {

      throw new NullPointerException();

    }

  }

 catch (  NullPointerException e) {

    p.print("Destination Cannot be empty",PrintTypes.ERROR);

    throw e;

  }

}

Location: AudioHandler.java

Content: 

public void close(){

  stop();

  clip.close();

}

Location: AudioHandler.java

Content: 

public boolean getActive(){

  return this.active;

}

Location: AudioHandler.java

Content: 

private void initiate(String path){

  try {

    AudioInputStream audioInputStream=AudioSystem.getAudioInputStream(getClass().getResourceAsStream(path));

    AudioFormat baseformat=audioInputStream.getFormat();

    AudioFormat decodeFormat=new AudioFormat(AudioFormat.Encoding.PCM_SIGNED,baseformat.getSampleRate(),16,baseformat.getChannels(),baseformat.getChannels() * 2,baseformat.getSampleRate(),false);

    AudioInputStream decodedAudioInputStream=AudioSystem.getAudioInputStream(decodeFormat,audioInputStream);

    clip=AudioSystem.getClip();

    clip.open(decodedAudioInputStream);

  }

 catch (  Exception e) {

    System.err.println(e.getStackTrace());

    p.print("Audio Failed to initiate",PrintTypes.ERROR);

  }

}

Location: AudioHandler.java

Content: 

public void setVolume(float velocity){

  FloatControl volume=(FloatControl)clip.getControl(FloatControl.Type.MASTER_GAIN);

  volume.setValue(velocity);

}

