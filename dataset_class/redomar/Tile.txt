Location: Tile.java

Content: 

public static Tile getCarpetRed(){

  return CARPET_red;

}

Location: Tile.java

Content: 

public static Tile getChestA(){

  return CHEST_a;

}

Location: Tile.java

Content: 

public static Tile getChestB(){

  return CHEST_b;

}

Location: Tile.java

Content: 

public static Tile getChiseledStone(){

  return CHISELED_stone;

}

Location: Tile.java

Content: 

public static Tile getDirt(){

  return DIRT;

}

Location: Tile.java

Content: 

public static Tile getDirtWet(){

  return DIRT_WET;

}

Location: Tile.java

Content: 

public static Tile getFlowerDandelion(){

  return FLOWER_dandelion;

}

Location: Tile.java

Content: 

public static Tile getFlowerRose(){

  return FLOWER_rose;

}

Location: Tile.java

Content: 

public static Tile getGrass(){

  return GRASS;

}

Location: Tile.java

Content: 

public byte getId(){

  return id;

}

Location: Tile.java

Content: 

public int getLevelColour(){

  return levelColour;

}

Location: Tile.java

Content: 

public static Tile getMagma(){

  return MAGMA;

}

Location: Tile.java

Content: 

public static Tile getPortal(){

  return PORTAL;

}

Location: Tile.java

Content: 

public static Tile getSand(){

  return SAND;

}

Location: Tile.java

Content: 

public static Tile getStone(){

  return STONE;

}

Location: Tile.java

Content: 

public static Tile[] getTiles(){

  return tiles;

}

Location: Tile.java

Content: 

public static Tile getVoid(){

  return VOID;

}

Location: Tile.java

Content: 

public static Tile getWater(){

  return WATER;

}

Location: Tile.java

Content: 

public boolean isEmitter(){

  return emitter;

}

Location: Tile.java

Content: 

public boolean isSolid(){

  return solid;

}

Location: Tile.java

Content: 

public Tile(int id,boolean isSolid,boolean isEmitter,int colour){

  this.id=(byte)id;

  if (getTiles()[id] != null) {

    throw new RuntimeException("Duplicate tile id on:" + id);

  }

  this.solid=isSolid;

  this.emitter=isEmitter;

  this.levelColour=colour;

  getTiles()[id]=this;

}

