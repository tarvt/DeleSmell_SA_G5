Location: Typeface.java

Content: 

/** 

 * Indicates whether this font had to do any character mapping operations. If that was not the case, it's an indication that the font has never actually been used.

 * @return true if the font had to do any character mapping operations

 */

public boolean hadMappingOperations(){

  return (this.charMapOps > 0);

}

Location: Typeface.java

Content: 

/** 

 * {@inheritDoc} 

 */

public boolean hasFeature(int tableType,String script,String language,String feature){

  return false;

}

Location: Typeface.java

Content: 

public boolean isCID(){

  return getFontType() == FontType.TYPE1C;

}

Location: Typeface.java

Content: 

/** 

 * Used for keeping track of character mapping operations in order to determine if a font was used at all or not.

 */

protected void notifyMapOperation(){

  this.charMapOps++;

}

Location: Typeface.java

Content: 

/** 

 * Provide proper warning if a glyph is not available.

 * @param c the character which is missing.

 */

protected void warnMissingGlyph(char c){

  Character ch=c;

  if (warnedChars == null) {

    warnedChars=new HashSet<Character>();

  }

  if (warnedChars.size() < 8 && !warnedChars.contains(ch)) {

    warnedChars.add(ch);

    if (this.eventListener != null) {

      this.eventListener.glyphNotAvailable(this,c,getFontName());

    }

 else {

      if (warnedChars.size() == 8) {

        log.warn("Many requested glyphs are not available in font " + getFontName());

      }

 else {

        log.warn("Glyph " + (int)c + " (0x"+ Integer.toHexString(c)+ ", "+ Glyphs.charToGlyphName(c)+ ") not available in font "+ getFontName());

      }

    }

  }

}

