Location: PDFNumber.java

Content: 

/** 

 * Output a double value to a string suitable for PDF (6 decimal digits).

 * @param doubleDown the double value

 * @return the value as a string

 */

public static String doubleOut(double doubleDown){

  return doubleOut(doubleDown,6);

}

Location: PDFNumber.java

Content: 

/** 

 * Output a double value to a string suitable for PDF. In this method it is possible to set the maximum number of decimal places to output.

 * @param doubleDown the Double value

 * @param dec the number of decimal places to output

 * @return the value as a string

 */

public static String doubleOut(double doubleDown,int dec){

  if (dec < 0 || dec > 16) {

    throw new IllegalArgumentException("Parameter dec must be between 1 and 16");

  }

  StringBuffer buf=new StringBuffer();

  DoubleFormatUtil.formatDouble(doubleDown,dec,dec,buf);

  return buf.toString();

}

Location: PDFNumber.java

Content: 

/** 

 * Append a double value to a string buffer suitable for PDF. In this method it is possible to set the maximum number of decimal places to output.

 * @param doubleDown the Double value

 * @param dec the number of decimal places to output

 * @param buf the string buffer to which double is formatted (appended)

 * @return the string buffer

 */

public static StringBuffer doubleOut(double doubleDown,int dec,StringBuffer buf){

  if (dec < 0 || dec > 16) {

    throw new IllegalArgumentException("Parameter dec must be between 1 and 16");

  }

  DoubleFormatUtil.formatDouble(doubleDown,dec,dec,buf);

  return buf;

}

Location: PDFNumber.java

Content: 

public PDFNumber(){

  this.number=0;

}

Location: PDFNumber.java

Content: 

public PDFNumber(Number number){

  this.number=number;

}

Location: PDFNumber.java

Content: 

/** 

 * Sets the number.

 * @param number the number

 */

public void setNumber(Number number){

  this.number=number;

}

