Location: PDFCollectionEntryElement.java

Content: 

private boolean capturePCData(PDFObjectType type){

  if (type == PDFObjectType.Array) {

    return false;

  }

 else   if (type == PDFObjectType.Dictionary) {

    return false;

  }

 else {

    return (type != PDFObjectType.Reference);

  }

}

Location: PDFCollectionEntryElement.java

Content: 

private static PDFCollectionEntryExtension createExtension(PDFObjectType type){

  if (type == PDFObjectType.Reference) {

    return new PDFReferenceExtension();

  }

 else {

    return new PDFCollectionEntryExtension(type);

  }

}

Location: PDFCollectionEntryElement.java

Content: 

public PDFCollectionEntryExtension getExtension(){

  return extension;

}

Location: PDFCollectionEntryElement.java

Content: 

PDFCollectionEntryElement(FONode parent,PDFObjectType type){

  this(parent,type,createExtension(type));

}

Location: PDFCollectionEntryElement.java

Content: 

PDFCollectionEntryElement(FONode parent,PDFObjectType type,PDFCollectionEntryExtension extension){

  super(parent);

  this.extension=extension;

}

