Location: CFFDataReaderTestCase.java

Content: 

/** 

 * Parses a test dictionary to verify whether the stored data is read correctly.

 * @throws IOException

 */

@Test public void parseDictData() throws IOException {

  byte[] testDictData=prepareDictData();

  Map<String,DICTEntry> testTopDict=cffReader.parseDictData(testDictData);

  validateDictData(testTopDict);

}

Location: CFFDataReaderTestCase.java

Content: 

private byte[] prepareDictData(){

  byte[] testDictData=new byte[0];

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(392,new int[]{0},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(393,new int[]{1},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(394,new int[]{12,0},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(395,new int[]{2},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(396,new int[]{3},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(397,new int[]{4},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(0,new int[]{12,1},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(-50,new int[0],-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(-40,new int[0],-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(100,new int[0],-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(120,new int[]{5},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(1234,new int[]{15},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(3654,new int[]{17},-1,true));

  testDictData=OTFSubSetFile.concatArray(testDictData,OTFSubSetFile.createNewRef(11454,new int[]{18},-1,true));

  return testDictData;

}

Location: CFFDataReaderTestCase.java

Content: 

/** 

 * Tests the parsing of an example byte data index structure

 * @throws IOException

 */

@Test public void testIndexParsing() throws IOException {

  byte[] testIndex={0,5,1,1,5,12,24,27,32};

  Random randGen=new Random();

  byte[] data=new byte[31];

  for (int i=0; i < data.length; i++) {

    data[i]=(byte)randGen.nextInt(255);

  }

  testIndex=OTFSubSetFile.concatArray(testIndex,data);

  CFFIndexData indexData=cffReader.readIndex(new CFFDataInput(testIndex));

  assertEquals(indexData.getNumObjects(),5);

  assertEquals(indexData.getOffSize(),1);

  assertEquals(indexData.getOffsets().length,6);

  assertEquals(indexData.getOffsets()[5],32);

}

Location: CFFDataReaderTestCase.java

Content: 

private void validateDictData(Map<String,DICTEntry> dictMap){

  assertEquals(dictMap.get("version").getOperands().get(0).intValue(),392);

  assertEquals(dictMap.get("Notice").getOperands().get(0).intValue(),393);

  assertEquals(dictMap.get("Copyright").getOperands().get(0).intValue(),394);

  assertEquals(dictMap.get("FullName").getOperands().get(0).intValue(),395);

  assertEquals(dictMap.get("FamilyName").getOperands().get(0).intValue(),396);

  assertEquals(dictMap.get("Weight").getOperands().get(0).intValue(),397);

  assertEquals(dictMap.get("isFixedPitch").getOperands().get(0).intValue(),0);

  int[] fontBBox={-50,-40,100,120};

  DICTEntry fontBBoxEntry=dictMap.get("FontBBox");

  for (int i=0; i < fontBBoxEntry.getOperands().size(); i++) {

    assertEquals(fontBBoxEntry.getOperands().get(i).intValue(),fontBBox[i]);

  }

  assertEquals(dictMap.get("charset").getOperands().get(0).intValue(),1234);

  assertEquals(dictMap.get("CharStrings").getOperands().get(0).intValue(),3654);

  assertEquals(dictMap.get("Private").getOperands().get(0).intValue(),11454);

}

