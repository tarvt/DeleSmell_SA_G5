Location: ObjectStreamManagerTestCase.java

Content: 

@Test public void add(){

  final int expectedCapacity=100;

  final int numCompressedObjects=expectedCapacity * 2 + 1;

  createCompressObjectReferences(numCompressedObjects);

  assertEquals(numCompressedObjects,compressedObjectReferences.size());

  int objectStreamNumber1=assertSameObjectStream(0,expectedCapacity);

  int objectStreamNumber2=assertSameObjectStream(expectedCapacity,expectedCapacity * 2);

  int objectStreamNumber3=assertSameObjectStream(expectedCapacity * 2,numCompressedObjects);

  assertDifferent(objectStreamNumber1,objectStreamNumber2,objectStreamNumber3);

  assertEquals(objectStreamNumber3,pdfDocument.previous.getObjectNumber().getNumber());

}

Location: ObjectStreamManagerTestCase.java

Content: 

private void assertDifferent(int objectStreamNumber1,int objectStreamNumber2,int objectStreamNumber3){

  assertTrue(objectStreamNumber1 != objectStreamNumber2);

  assertTrue(objectStreamNumber1 != objectStreamNumber3);

  assertTrue(objectStreamNumber2 != objectStreamNumber3);

}

Location: ObjectStreamManagerTestCase.java

Content: 

private int assertSameObjectStream(int from,int to){

  int objectStreamNumber=getObjectStreamNumber(from);

  for (int i=from + 1; i < to; i++) {

    assertEquals(objectStreamNumber,getObjectStreamNumber(i));

  }

  return objectStreamNumber;

}

Location: ObjectStreamManagerTestCase.java

Content: 

private CompressedObject createCompressedObject(final int objectNumber){

  return new CompressedObject(){

    public PDFObjectNumber getObjectNumber(){

      return new PDFObjectNumber(objectNumber);

    }

    public int output(    OutputStream outputStream) throws IOException {

      throw new UnsupportedOperationException();

    }

  }

;

}

Location: ObjectStreamManagerTestCase.java

Content: 

private void createCompressObjectReferences(int numObjects){

  pdfDocument=new MockPdfDocument();

  ObjectStreamManager sut=new ObjectStreamManager(pdfDocument);

  for (int obNum=1; obNum <= numObjects; obNum++) {

    sut.add(createCompressedObject(obNum));

  }

  compressedObjectReferences=sut.getCompressedObjectReferences();

}

Location: ObjectStreamManagerTestCase.java

Content: 

private int getObjectStreamNumber(int index){

  return compressedObjectReferences.get(index).getObjectStreamNumber().getNumber();

}

