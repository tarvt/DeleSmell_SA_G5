Location: PCLRenderingContext.java

Content: 

/** 

 * Returns the current  {@link GraphicContext} instance.

 * @return the graphic context

 */

public abstract GraphicContext getGraphicContext();

Location: PCLRenderingContext.java

Content: 

/** 

 * Indicates whether source transparency should be enabled when painting bitmaps.

 * @return true when source transparency is enabled

 */

public boolean isSourceTransparencyEnabled(){

  return this.sourceTransparency;

}

Location: PCLRenderingContext.java

Content: 

/** 

 * Main constructor.

 * @param userAgent the user agent

 * @param generator the PCL generator

 * @param pclUtil rendering utility

 */

public PCLRenderingContext(FOUserAgent userAgent,PCLGenerator generator,PCLRenderingUtil pclUtil){

  super(userAgent);

  this.generator=generator;

  this.pclUtil=pclUtil;

}

Location: PCLRenderingContext.java

Content: 

/** 

 * Enables or disables source transparency when painting bitmaps.

 * @param value true to enable source transparency, false to disable

 */

public void setSourceTransparencyEnabled(boolean value){

  this.sourceTransparency=value;

}

Location: PCLRenderingContext.java

Content: 

/** 

 * Transforms a point into the PCL coordinate system.

 * @param x the X coordinate

 * @param y the Y coordinate

 * @return the transformed point in PCL coordinates

 */

public abstract Point2D transformedPoint(int x,int y);

