Location: PDFName.java

Content: 

/** 

 * Escapes a PDF name. It adds the leading slash and escapes characters as necessary.

 * @param name the name

 * @return the escaped name

 */

static String escapeName(String name){

  StringBuilder sb=new StringBuilder(Math.min(16,name.length() + 4));

  boolean skipFirst=false;

  sb.append('/');

  if (name.startsWith("/")) {

    skipFirst=true;

  }

  for (int i=(skipFirst ? 1 : 0), c=name.length(); i < c; i++) {

    char ch=name.charAt(i);

    if (ch < 33 || ch > 126 || ESCAPED_NAME_CHARS.indexOf(ch) >= 0) {

      sb.append('#');

      toHex(ch,sb);

    }

 else {

      sb.append(ch);

    }

  }

  return sb.toString();

}

Location: PDFName.java

Content: 

/** 

 * Creates a new PDF name object.

 * @param name the name value

 */

public PDFName(String name){

  super();

  this.name=escapeName(name);

}

Location: PDFName.java

Content: 

private static void toHex(char ch,StringBuilder sb){

  if (ch >= 256) {

    throw new IllegalArgumentException("Only 8-bit characters allowed by this implementation");

  }

  sb.append(DIGITS[ch >>> 4 & 0x0F]);

  sb.append(DIGITS[ch & 0x0F]);

}

