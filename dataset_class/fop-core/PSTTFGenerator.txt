Location: PSTTFGenerator.java

Content: 

/** 

 * Finishes writing a string by appending '00' and '&gt;' to the end.

 */

public void endString() throws IOException {

  gen.write("00\n> ");

}

Location: PSTTFGenerator.java

Content: 

/** 

 * Creates a new instance wrapping the given generator.

 * @param gen the PSGenerator to wrap

 */

public PSTTFGenerator(PSGenerator gen){

  this.gen=gen;

  hexOut=new ASCIIHexOutputStream(gen.getOutputStream());

}

Location: PSTTFGenerator.java

Content: 

/** 

 * Writes the '&lt;' character that starts a string.

 */

public void startString() throws IOException {

  hexOut=new ASCIIHexOutputStream(gen.getOutputStream());

  gen.writeln("<");

}

Location: PSTTFGenerator.java

Content: 

/** 

 * Writes bytes from the given byte array to the output.

 * @param byteArray byte[] a byte array

 * @param offset the position in the byte array where the streaming must start

 * @param length the number of bytes to stream. This MUST be less thanMAX_BUFFER_SIZE - 1 since strings are suffixed by '00' (see Section 4.2 of Adobe Technical Note #5012, <em>The Type 42 Font Format Specification</em>.).

 */

public void streamBytes(byte[] byteArray,int offset,int length) throws IOException {

  if (length > MAX_BUFFER_SIZE) {

    throw new UnsupportedOperationException("Attempting to write a string to a PostScript" + " file that is greater than the buffer size.");

  }

  hexOut.write(byteArray,offset,length);

}

Location: PSTTFGenerator.java

Content: 

/** 

 * Writes the given string to the output, followed by a newline.

 * @param cmd a string

 */

public void writeln(String cmd) throws IOException {

  gen.writeln(cmd);

}

