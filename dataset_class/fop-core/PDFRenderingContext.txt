Location: PDFRenderingContext.java

Content: 

public PDFStructElem getCurrentSessionStructElem(){

  return currentSessionStructElem;

}

Location: PDFRenderingContext.java

Content: 

MarkedContentInfo getMarkedContentInfo(){

  return mci;

}

Location: PDFRenderingContext.java

Content: 

/** 

 * Returns the current PDF page.

 * @return the PDF page

 */

public PDFPage getPage(){

  return this.page;

}

Location: PDFRenderingContext.java

Content: 

public Map<Integer,PDFArray> getPageNumbers(){

  return pageNumbers;

}

Location: PDFRenderingContext.java

Content: 

public PDFLogicalStructureHandler getPdfLogicalStructureHandler(){

  return pdfLogicalStructureHandler;

}

Location: PDFRenderingContext.java

Content: 

/** 

 * Main constructor.

 * @param userAgent the user agent

 * @param generator the PDF content generator

 * @param page the current PDF page

 * @param fontInfo the font list

 */

public PDFRenderingContext(FOUserAgent userAgent,PDFContentGenerator generator,PDFPage page,FontInfo fontInfo){

  super(userAgent);

  this.generator=generator;

  this.page=page;

  this.fontInfo=fontInfo;

}

Location: PDFRenderingContext.java

Content: 

public void setCurrentSessionStructElem(PDFStructElem currentSessionStructElem){

  this.currentSessionStructElem=currentSessionStructElem;

}

Location: PDFRenderingContext.java

Content: 

void setMarkedContentInfo(MarkedContentInfo mci){

  this.mci=mci;

}

Location: PDFRenderingContext.java

Content: 

public void setPageNumbers(Map<Integer,PDFArray> pageNumbers){

  this.pageNumbers=pageNumbers;

}

Location: PDFRenderingContext.java

Content: 

public void setPdfLogicalStructureHandler(PDFLogicalStructureHandler pdfLogicalStructureHandler){

  this.pdfLogicalStructureHandler=pdfLogicalStructureHandler;

}

