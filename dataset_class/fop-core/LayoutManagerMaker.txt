Location: LayoutManagerMaker.java

Content: 

/** 

 * Make a ContentLayoutManager object.

 * @param pslm the parent PageSequenceLayoutManager object

 * @param title the fo:title object this CLM will process

 * @return The created ContentLayoutManager object

 */

ContentLayoutManager makeContentLayoutManager(PageSequenceLayoutManager pslm,Title title);

Location: LayoutManagerMaker.java

Content: 

/** 

 * Make a ExternalDocumentLayoutManager object for the fox:external-document extension.

 * @param ath the AreaTreeHandler object the external-document interacts with

 * @param ed the fox:external-document object to be processed

 * @return The created ExternalDocumentLayoutManager object

 */

ExternalDocumentLayoutManager makeExternalDocumentLayoutManager(AreaTreeHandler ath,ExternalDocument ed);

Location: LayoutManagerMaker.java

Content: 

/** 

 * Make a FlowLayoutManager object.

 * @param pslm the parent PageSequenceLayoutManager object

 * @param flow the fo:flow object this FLM will process

 * @return The created FlowLayoutManager object

 */

FlowLayoutManager makeFlowLayoutManager(PageSequenceLayoutManager pslm,Flow flow);

Location: LayoutManagerMaker.java

Content: 

/** 

 * Make LayoutManagers for the node and add them to the list lms.

 * @param node the FO node for which the LayoutManagers are made

 * @param lms the list to which the LayoutManagers are added

 */

void makeLayoutManagers(FONode node,List lms);

Location: LayoutManagerMaker.java

Content: 

/** 

 * Make a specific LayoutManager for the node. If not exactly one LayoutManagers is available, an IllegalStateException is thrown.

 * @param node the FO node for which the LayoutManagers are made

 * @return The created LayoutManager

 */

LayoutManager makeLayoutManager(FONode node);

Location: LayoutManagerMaker.java

Content: 

/** 

 * Make a PageSequenceLayoutManager object.

 * @param ath the AreaTreeHandler object the PSLM interacts with

 * @param ps the fo:page-sequence object this PSLM will process

 * @return The created PageSequenceLayoutManager object

 */

PageSequenceLayoutManager makePageSequenceLayoutManager(AreaTreeHandler ath,PageSequence ps);

Location: LayoutManagerMaker.java

Content: 

/** 

 * Make a StaticContentLayoutManager object for a footnote-separator.

 * @param pslm the parent PageSequenceLayoutManager object

 * @param sc the fo:static-content object this SCLM will process

 * @param block the Block area this SCLM must add its areas to

 * @return The created StaticContentLayoutManager object

 */

StaticContentLayoutManager makeStaticContentLayoutManager(PageSequenceLayoutManager pslm,StaticContent sc,Block block);

Location: LayoutManagerMaker.java

Content: 

/** 

 * Make a StaticContentLayoutManager object.

 * @param pslm the parent PageSequenceLayoutManager object

 * @param sc the fo:static-content object this SCLM will process

 * @param reg the side region indicating where the static contentneeds to be processed.

 * @return The created StaticContentLayoutManager object

 */

StaticContentLayoutManager makeStaticContentLayoutManager(PageSequenceLayoutManager pslm,StaticContent sc,SideRegion reg);

