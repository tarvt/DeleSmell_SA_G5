Location: AFPInfo.java

Content: 

/** 

 * Creates an AFPGraphics2D implementation

 * @param textAsShapes true when text is painted as shapes

 * @return a newly created AFPGraphics2D

 */

public AFPGraphics2D createGraphics2D(boolean textAsShapes){

  AFPGraphics2D g2d=new AFPGraphics2D(textAsShapes,paintingState,resourceManager,resourceInfo,fontInfo);

  g2d.setGraphicContext(new org.apache.xmlgraphics.java2d.GraphicContext());

  return g2d;

}

Location: AFPInfo.java

Content: 

/** 

 * Returns the handler configuration

 * @return the handler configuration

 */

public Configuration getHandlerConfiguration(){

  return this.handlerConfiguration;

}

Location: AFPInfo.java

Content: 

/** 

 * Returns the resource information

 * @return the resource information

 */

public AFPResourceInfo getResourceInfo(){

  return resourceInfo;

}

Location: AFPInfo.java

Content: 

/** 

 * Returns true if supports color

 * @return true if supports color

 */

public boolean isColorSupported(){

  return getPaintingState().isColorImages();

}

Location: AFPInfo.java

Content: 

/** 

 * Sets the handler configuration

 * @param cfg the handler configuration

 */

public void setHandlerConfiguration(Configuration cfg){

  this.handlerConfiguration=cfg;

}

Location: AFPInfo.java

Content: 

/** 

 * Sets true if SVG should be rendered as a bitmap instead of natively

 * @param b boolean value

 */

public void setPaintAsBitmap(boolean b){

  this.paintAsBitmap=b;

}

Location: AFPInfo.java

Content: 

/** 

 * Sets the AFP state

 * @param paintingState the AFP state

 */

public void setPaintingState(AFPPaintingState paintingState){

  this.paintingState=paintingState;

}

Location: AFPInfo.java

Content: 

/** 

 * Sets the resource information

 * @param resourceInfo the resource information

 */

public void setResourceInfo(AFPResourceInfo resourceInfo){

  this.resourceInfo=resourceInfo;

}

Location: AFPInfo.java

Content: 

/** 

 * Sets the AFPResourceManager

 * @param resourceManager the AFPResourceManager

 */

public void setResourceManager(AFPResourceManager resourceManager){

  this.resourceManager=resourceManager;

}

Location: AFPInfo.java

Content: 

/** 

 * Returns true if text should be stroked when painted

 * @return true if text should be stroked when painted

 */

public boolean strokeText(){

  boolean strokeText=false;

  if (handlerConfiguration != null) {

    strokeText=handlerConfiguration.getChild("stroke-text",true).getValueAsBoolean(strokeText);

  }

  return strokeText;

}

