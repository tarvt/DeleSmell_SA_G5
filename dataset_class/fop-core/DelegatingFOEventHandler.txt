Location: DelegatingFOEventHandler.java

Content: 

@Override public void characters(FOText foText){

  delegate.characters(foText);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void character(Character c){

  delegate.character(c);

}

Location: DelegatingFOEventHandler.java

Content: 

/** 

 * Creates a new instance that delegates events to the given object.

 * @param delegate the object to which all FO events will be forwarded

 */

public DelegatingFOEventHandler(FOEventHandler delegate){

  super(delegate.getUserAgent());

  this.delegate=delegate;

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void endExternalDocument(ExternalDocument document){

  delegate.endExternalDocument(document);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void endLeader(Leader l){

  delegate.endLeader(l);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void endPageNumberCitationLast(PageNumberCitationLast pageLast){

  delegate.endPageNumberCitationLast(pageLast);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void endPageNumberCitation(PageNumberCitation pageCite){

  delegate.endPageNumberCitation(pageCite);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void endRetrieveMarker(RetrieveMarker retrieveMarker){

  delegate.endRetrieveMarker(retrieveMarker);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void endRetrieveTableMarker(RetrieveTableMarker retrieveTableMarker){

  delegate.endRetrieveTableMarker(retrieveTableMarker);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void endRoot(Root root){

  delegate.endRoot(root);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void endWrapper(Wrapper wrapper){

  delegate.endWrapper(wrapper);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void restoreState(RetrieveMarker retrieveMarker){

  delegate.restoreState(retrieveMarker);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void restoreState(RetrieveTableMarker retrieveTableMarker){

  delegate.restoreState(retrieveTableMarker);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void startExternalDocument(ExternalDocument document){

  delegate.startExternalDocument(document);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void startInstreamForeignObject(InstreamForeignObject ifo){

  delegate.startInstreamForeignObject(ifo);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void startRetrieveMarker(RetrieveMarker retrieveMarker){

  delegate.startRetrieveMarker(retrieveMarker);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void startRetrieveTableMarker(RetrieveTableMarker retrieveTableMarker){

  delegate.startRetrieveTableMarker(retrieveTableMarker);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void startRoot(Root root){

  delegate.startRoot(root);

}

Location: DelegatingFOEventHandler.java

Content: 

@Override public void startWrapper(Wrapper wrapper){

  delegate.startWrapper(wrapper);

}

