Location: PDFNameTestCase.java

Content: 

private void charactersNotEscapedBetween(char c1,char c2){

  for (char i=c1; i <= c2; i++) {

    String str=String.valueOf(i);

    String expected=!str.equals("/") ? "/" + str : str;

    assertEquals(expected,PDFName.escapeName(str));

  }

}

Location: PDFNameTestCase.java

Content: 

private void checkCharacterIsEscaped(char c){

  String str=Integer.toHexString(c >>> 4 & 0x0f).toUpperCase();

  str+=Integer.toHexString(c & 0x0f).toUpperCase();

  assertEquals("/#" + str,PDFName.escapeName(String.valueOf(c)));

}

Location: PDFNameTestCase.java

Content: 

private void escapedCharactersTests(){

  for (char i=0; i < '!'; i++) {

    String str=Integer.toHexString(i >>> 4 & 0x0f).toUpperCase();

    str+=Integer.toHexString(i & 0x0f).toUpperCase();

    assertEquals("/#" + str,PDFName.escapeName(String.valueOf(i)));

  }

  for (char i='~' + 1; i < 256; i++) {

    String str=Integer.toHexString(i >>> 4 & 0x0f).toUpperCase();

    str+=Integer.toHexString(i & 0x0f).toUpperCase();

    assertEquals("/#" + str,PDFName.escapeName(String.valueOf(i)));

  }

  checkCharacterIsEscaped('#');

  checkCharacterIsEscaped('%');

  checkCharacterIsEscaped('(');

  checkCharacterIsEscaped(')');

  checkCharacterIsEscaped('<');

  checkCharacterIsEscaped('>');

  checkCharacterIsEscaped('[');

  checkCharacterIsEscaped(']');

  checkCharacterIsEscaped('>');

}

Location: PDFNameTestCase.java

Content: 

private void nonEscapedCharactersTests(){

  charactersNotEscapedBetween('!','"');

  charactersNotEscapedBetween('*',';');

  charactersNotEscapedBetween('?','Z');

  charactersNotEscapedBetween('^','~');

}

Location: PDFNameTestCase.java

Content: 

/** 

 * Tests escapeName() - tests that this method escapes the necessary characters.

 */

@Test public void testEscapeName(){

  try {

    PDFName.escapeName(null);

    fail("NPE not thrown when null object given to escapeName()");

  }

 catch (  NullPointerException e) {

  }

  assertEquals("/Test",PDFName.escapeName("Test"));

  assertEquals("/Test",PDFName.escapeName("/Test"));

  assertEquals("/Test#20test",PDFName.escapeName("Test test"));

  nonEscapedCharactersTests();

  escapedCharactersTests();

}

Location: PDFNameTestCase.java

Content: 

/** 

 * Tests toString() - this has been overridden to return the String that PDFName wraps.

 */

@Test public void testToString(){

  PDFName test1=new PDFName("test1");

  assertEquals("/test1",test1.toString());

  PDFName test2=new PDFName("another test");

  assertEquals("/another#20test",test2.toString());

  try {

    new PDFName(null);

    fail("NPE not thrown when null passed to constructor");

  }

 catch (  NullPointerException e) {

  }

}

