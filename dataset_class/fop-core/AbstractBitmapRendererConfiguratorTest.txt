Location: AbstractBitmapRendererConfiguratorTest.java

Content: 

public AbstractBitmapRendererConfiguratorTest(String mimeType,Class<? extends IFDocumentHandler> docHandlerClass){

  super(mimeType,BitmapRendererConfBuilder.class,docHandlerClass);

}

Location: AbstractBitmapRendererConfiguratorTest.java

Content: 

@Test public void testAntiAliasing() throws Exception {

  parseConfig(createBuilder().setAntiAliasing(true));

  assertTrue(settings.isAntiAliasingEnabled());

  parseConfig(createBuilder().setAntiAliasing(false));

  assertFalse(settings.isAntiAliasingEnabled());

}

Location: AbstractBitmapRendererConfiguratorTest.java

Content: 

@Test public void testColorModes() throws Exception {

  parseConfig(createBuilder().setColorMode(COLOR_MODE_RGBA.getName()));

  assertEquals(BufferedImage.TYPE_INT_ARGB,settings.getBufferedImageType());

  parseConfig(createBuilder().setColorMode(COLOR_MODE_RGB.getName()));

  assertEquals(BufferedImage.TYPE_INT_RGB,settings.getBufferedImageType());

  parseConfig(createBuilder().setColorMode(COLOR_MODE_GRAY.getName()));

  assertEquals(BufferedImage.TYPE_BYTE_GRAY,settings.getBufferedImageType());

  parseConfig(createBuilder().setColorMode(COLOR_MODE_BINARY.getName()));

  assertEquals(BufferedImage.TYPE_BYTE_BINARY,settings.getBufferedImageType());

  parseConfig(createBuilder().setColorMode(COLOR_MODE_BILEVEL.getName()));

  assertEquals(BufferedImage.TYPE_BYTE_BINARY,settings.getBufferedImageType());

  parseConfig(createBuilder());

  assertEquals(BufferedImage.TYPE_INT_ARGB,settings.getBufferedImageType());

}

Location: AbstractBitmapRendererConfiguratorTest.java

Content: 

@Test public void testRendererQuality() throws Exception {

  parseConfig(createBuilder().setRenderingQuality(RENDERING_QUALITY.getName()));

  assertTrue(settings.isQualityRenderingEnabled());

  parseConfig(createBuilder().setRenderingQuality(RENDERING_SPEED.getName()));

  assertFalse(settings.isQualityRenderingEnabled());

  parseConfig(createBuilder());

  assertTrue(settings.isQualityRenderingEnabled());

}

Location: AbstractBitmapRendererConfiguratorTest.java

Content: 

@Test public void testSetPageBackgroundColor() throws Exception {

  parseConfig(createBuilder().setBackgroundColor("Blue"));

  assertEquals(ColorUtil.parseColorString(null,"Blue"),settings.getPageBackgroundColor());

  parseConfig(createBuilder().setBackgroundColor("Black"));

  assertEquals(ColorUtil.parseColorString(null,"Black"),settings.getPageBackgroundColor());

}

Location: AbstractBitmapRendererConfiguratorTest.java

Content: 

@Test public void testTransparentBackground() throws Exception {

  parseConfig(createBuilder().setPageBackgroundTransparency(true));

  assertTrue(settings.hasTransparentPageBackground());

  parseConfig(createBuilder().setPageBackgroundTransparency(false));

  assertFalse(settings.hasTransparentPageBackground());

}

