Location: BasicLink.java

Content: 

/** 

 * Default constructor.

 */

public BasicLink(){

}

Location: BasicLink.java

Content: 

/** 

 * Construct a BasicLink instance with the given  {@link FONode}as its parent.

 * @param parent {@link FONode} that is the parent of this object

 */

public BasicLink(FONode parent){

  super(parent);

}

Location: BasicLink.java

Content: 

/** 

 * @return the "alignment-adjust" property 

 */

public Length getAlignmentAdjust(){

  return alignmentAdjust;

}

Location: BasicLink.java

Content: 

/** 

 * @return the "alignment-baseline" property 

 */

public int getAlignmentBaseline(){

  return alignmentBaseline;

}

Location: BasicLink.java

Content: 

public String getAltText(){

  return altText;

}

Location: BasicLink.java

Content: 

/** 

 * @return the "baseline-shift" property 

 */

public Length getBaselineShift(){

  return baselineShift;

}

Location: BasicLink.java

Content: 

/** 

 * @return the "dominant-baseline" property 

 */

public int getDominantBaseline(){

  return dominantBaseline;

}

Location: BasicLink.java

Content: 

/** 

 * Get the value of the <code>show-destination</code> property.

 * @return the "show-destination" property

 */

public int getShowDestination(){

  return this.showDestination;

}

Location: BasicLink.java

Content: 

/** 

 * Convenience method to check if this instance has an external destination

 * @return <code>true</code> if this basic link has an external destination;<code>false</code> otherwise

 */

public boolean hasExternalDestination(){

  return externalDestination != null && externalDestination.length() > 0;

}

Location: BasicLink.java

Content: 

/** 

 * Convenience method to check if this instance has an internal destination.

 * @return <code>true</code> if this basic link has an internal destination;<code>false</code> otherwise

 */

public boolean hasInternalDestination(){

  return internalDestination != null && internalDestination.length() > 0;

}

