Location: ImageEncoderCCITTFax.java

Content: 

/** 

 * {@inheritDoc} 

 */

public String getImplicitFilter(){

  PSDictionary dict=new PSDictionary();

  dict.put("/Columns",ccitt.getSize().getWidthPx());

  int compression=ccitt.getCompression();

switch (compression) {

case TIFFImage.COMP_FAX_G3_1D:

    dict.put("/K",0);

  break;

case TIFFImage.COMP_FAX_G3_2D:

dict.put("/K",1);

break;

case TIFFImage.COMP_FAX_G4_2D:

dict.put("/K",-1);

break;

default :

throw new IllegalStateException("Invalid compression scheme: " + compression);

}

return dict.toString() + " /CCITTFaxDecode";

}

Location: ImageEncoderCCITTFax.java

Content: 

/** 

 * Main constructor.

 * @param ccitt the CCITT encoded image

 */

public ImageEncoderCCITTFax(ImageRawCCITTFax ccitt){

  this.ccitt=ccitt;

}

Location: ImageEncoderCCITTFax.java

Content: 

/** 

 * {@inheritDoc} 

 */

public void writeTo(OutputStream out) throws IOException {

  ccitt.writeTo(out);

}

