Location: RtfSpaceSplitter.java

Content: 

/** 

 * @return attributes, applicable to whole block. 

 */

public RtfAttributes getCommonAttributes(){

  return commonAttributes;

}

Location: RtfSpaceSplitter.java

Content: 

/** 

 * @return space-before value. 

 */

public int getSpaceBefore(){

  return spaceBefore;

}

Location: RtfSpaceSplitter.java

Content: 

/** 

 * @return true, if candidate for space-after is set. 

 */

public boolean isAfterCadidateSet(){

  return spaceAfterCandidate != null;

}

Location: RtfSpaceSplitter.java

Content: 

/** 

 * @return true, if candidate for space-before is set. 

 */

public boolean isBeforeCadidateSet(){

  return spaceBeforeCandidate != null;

}

Location: RtfSpaceSplitter.java

Content: 

/** 

 * Create RtfSpaceSplitter with given RtfAttributes.

 * @param attrs  RtfAttributes for splitting

 * @param previousSpace  integer, representing accumulated spacing

 */

public RtfSpaceSplitter(RtfAttributes attrs,int previousSpace){

  commonAttributes=attrs;

  updatingSpaceBefore=true;

  spaceBeforeCandidate=null;

  spaceAfterCandidate=null;

  spaceBefore=split(RtfText.SPACE_BEFORE) + previousSpace;

  spaceAfter=split(RtfText.SPACE_AFTER);

}

Location: RtfSpaceSplitter.java

Content: 

/** 

 * Sets a candidate for space-after property.

 * @param candidate  instance of <code>RtfAttributes</code>, considered asa candidate for space-after adding

 */

public void setSpaceAfterCandidate(RtfAttributes candidate){

  this.spaceAfterCandidate=candidate;

}

Location: RtfSpaceSplitter.java

Content: 

/** 

 * Sets a candidate for space-before property.

 * @param candidate  instance of <code>RtfAttributes</code>, considered asa candidate for space-before adding

 */

public void setSpaceBeforeCandidate(RtfAttributes candidate){

  if (updatingSpaceBefore) {

    this.spaceBeforeCandidate=candidate;

  }

}

Location: RtfSpaceSplitter.java

Content: 

/** 

 * Remove attributes with name <code>key</code> from <code>commonAttributes</code> and return it as int.

 * @param key  attributes name to extract

 * @return integer, representing value of extracted attributes

 */

public int split(String key){

  Integer i=(Integer)commonAttributes.getValue(key);

  if (i == null) {

    i=0;

  }

  commonAttributes.unset(key);

  return i;

}

Location: RtfSpaceSplitter.java

Content: 

/** 

 * Stops updating candidates for space-before attribute.

 */

public void stopUpdatingSpaceBefore(){

  updatingSpaceBefore=false;

}

