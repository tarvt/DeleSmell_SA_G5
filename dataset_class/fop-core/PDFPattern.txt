Location: PDFPattern.java

Content: 

/** 

 * Get the PDF command for setting to this pattern.

 * @param fillNotStroke if true fill otherwise stroke

 * @return the PDF string for setting the pattern

 */

public String getColorSpaceOut(boolean fillNotStroke){

  if (fillNotStroke) {

    return ("/Pattern cs /" + this.getName() + " scn \n");

  }

 else {

    return ("/Pattern CS /" + this.getName() + " SCN \n");

  }

}

Location: PDFPattern.java

Content: 

/** 

 * Create a type 2 pattern (smooth shading)

 * @param thePatternType the type of the pattern, which is 2, smooth shading

 * @param shading the Shading object that comprises this pattern

 * @param theXUID optional:the extended unique Identifier if used.

 * @param theExtGState optional: the extended graphics state, if used.

 * @param theMatrix Optional:List of Doubles that specify the matrix.

 */

public PDFPattern(int thePatternType,PDFShading shading,List theXUID,StringBuffer theExtGState,List theMatrix){

  super();

  this.patternType=2;

  this.shading=shading;

  this.xUID=theXUID;

  this.extGState=theExtGState;

  this.matrix=theMatrix;

}

Location: PDFPattern.java

Content: 

/** 

 * Create a tiling pattern (type 1).

 * @param theResources the resources associated with this pattern

 * @param thePatternType the type of pattern, which is 1 for tiling.

 * @param thePaintType 1 or 2, colored or uncolored.

 * @param theTilingType 1, 2, or 3, constant spacing, no distortion, or faster tiling

 * @param theBBox List of Doubles: The pattern cell bounding box

 * @param theXStep horizontal spacing

 * @param theYStep vertical spacing

 * @param theMatrix Optional List of Doubles transformation matrix

 * @param theXUID Optional vector of Integers that uniquely identify the pattern

 * @param thePatternDataStream The stream of pattern data to be tiled.

 */

public PDFPattern(PDFResources theResources,int thePatternType,int thePaintType,int theTilingType,List theBBox,double theXStep,double theYStep,List theMatrix,List theXUID,StringBuffer thePatternDataStream){

  super();

  this.resources=theResources;

  this.patternType=1;

  this.paintType=thePaintType;

  this.tilingType=theTilingType;

  this.bBox=theBBox;

  this.xStep=theXStep;

  this.yStep=theYStep;

  this.matrix=theMatrix;

  this.xUID=theXUID;

  this.patternDataStream=thePatternDataStream;

}

Location: PDFPattern.java

Content: 

/** 

 * Output PDF bytes, not used.

 * @return returns null

 */

public byte[] toPDF(){

  return null;

}

