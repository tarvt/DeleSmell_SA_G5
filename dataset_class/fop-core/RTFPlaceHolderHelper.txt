Location: RTFPlaceHolderHelper.java

Content: 

/** 

 * A method to create an object which is missing and required from the RTF structure.

 * @param containerClass The class which is missing

 */

public void createRTFPlaceholder(Class containerClass) throws RtfException {

  if (containerClass == RtfTableRow.class) {

    createRtfTableRow();

  }

}

Location: RTFPlaceHolderHelper.java

Content: 

private void createRtfTableRow() throws RtfException {

  try {

    RtfContainer element=builderContext.getContainer(RtfTable.class,true,null);

    if (element != null && element instanceof RtfTable) {

      RtfTable table=(RtfTable)element;

      RtfAttributes attribs=new RtfAttributes();

      RtfTableRow newRow=table.newTableRow(attribs);

      builderContext.pushContainer(newRow);

      builderContext.getTableContext().selectFirstColumn();

    }

  }

 catch (  org.apache.fop.apps.FOPException e) {

    throw new RtfException(e.getMessage());

  }

catch (  java.io.IOException e) {

    throw new RtfException(e.getMessage());

  }

}

Location: RTFPlaceHolderHelper.java

Content: 

/** 

 * Creates a new instance for the RTF place holder which attempts to resolve mismatches in structure between XSL:FO and RTF.

 * @param builderContext The builder context

 */

public RTFPlaceHolderHelper(BuilderContext builderContext){

  this.builderContext=builderContext;

}

