Location: PDFEncoding.java

Content: 

/** 

 * Creates and returns a new DifferencesBuilder instance for constructing the Differences array.

 * @return the DifferencesBuilder

 */

public DifferencesBuilder createDifferencesBuilder(){

  return new DifferencesBuilder();

}

Location: PDFEncoding.java

Content: 

/** 

 * Creates a PDFEncoding instance from a CodePointMapping instance.

 * @param encoding the code point mapping (encoding)

 * @param fontName ...

 * @return the PDF Encoding dictionary (or a String with the predefined encoding)

 */

static Object createPDFEncoding(SingleByteEncoding encoding,String fontName){

  if (encoding == null) {

    return null;

  }

  String encodingName=null;

  SingleByteEncoding baseEncoding;

  if (fontName.indexOf("Symbol") >= 0) {

    baseEncoding=CodePointMapping.getMapping(CodePointMapping.SYMBOL_ENCODING);

    encodingName=baseEncoding.getName();

  }

 else {

    baseEncoding=CodePointMapping.getMapping(CodePointMapping.STANDARD_ENCODING);

  }

  PDFEncoding pdfEncoding=new PDFEncoding(encodingName);

  PDFEncoding.DifferencesBuilder builder=pdfEncoding.createDifferencesBuilder();

  PDFArray differences=builder.buildDifferencesArray(baseEncoding,encoding);

  if (differences.length() > 0) {

    pdfEncoding.setDifferences(differences);

    return pdfEncoding;

  }

 else {

    return encodingName;

  }

}

Location: PDFEncoding.java

Content: 

/** 

 * Indicates whether the given encoding type is that of standard encoding

 * @param name The encoding name

 * @return Returns true if it is of type standard encoding

 */

static boolean hasStandardEncoding(String encodingName){

  return encodingName.equals(STANDARD_ENCODING);

}

Location: PDFEncoding.java

Content: 

/** 

 * Indicates whether a given encoding is one of the predefined encodings.

 * @param name the encoding name (ex. "StandardEncoding")

 * @return true if it is a predefined encoding

 */

public static boolean isPredefinedEncoding(String name){

  return PREDEFINED_ENCODINGS.contains(name);

}

Location: PDFEncoding.java

Content: 

/** 

 * Create a new /Encoding object.

 * @param basename the name of the character encoding schema

 */

public PDFEncoding(String basename){

  super();

  put("Type",new PDFName("Encoding"));

  if (basename != null) {

    put("BaseEncoding",new PDFName(basename));

  }

}

Location: PDFEncoding.java

Content: 

/** 

 * Sets the Differences value.

 * @param differences the differences.

 */

public void setDifferences(PDFArray differences){

  put("Differences",differences);

}

