Location: IFSerializerTestCase.java

Content: 

@Test public void drawImageShouldCloseResources() throws IFException {

  sut.setResult(new SAXResult(new DefaultHandler()));

  whenDrawImageIsCalled(true);

  thenImageResourcesMustBeClosed();

}

Location: IFSerializerTestCase.java

Content: 

@Test public void failingDrawImageShouldCloseResources() throws IFException {

  whenDrawImageIsCalled(false);

  thenImageResourcesMustBeClosed();

}

Location: IFSerializerTestCase.java

Content: 

private IFContext mockContext(){

  FOUserAgent userAgent=mock(FOUserAgent.class);

  when(userAgent.getImageManager()).thenReturn(imageManager);

  return new IFContext(userAgent);

}

Location: IFSerializerTestCase.java

Content: 

@Test public void testPageEvent() throws IFException {

  FOUserAgent userAgent=FopFactory.newInstance(new File(".").toURI()).newFOUserAgent();

  Map<String,Object> params=new HashMap<String,Object>();

  params.put("number",1);

  EventChecker eventChecker=new EventChecker("org.apache.fop.render.RendererEventProducer.endPage",params);

  userAgent.getEventBroadcaster().addEventListener(eventChecker);

  sut.mimicDocumentHandler(new AFPDocumentHandler(new IFContext(userAgent)));

  sut.setResult(new SAXResult(new DefaultHandler()));

  sut.endPage();

  eventChecker.end();

}

Location: IFSerializerTestCase.java

Content: 

private void thenImageResourcesMustBeClosed(){

  verify(imageManager).closeImage(eq(IMAGE),any(ImageSessionContext.class));

}

Location: IFSerializerTestCase.java

Content: 

private void whenDrawImageIsCalled(boolean terminatesNormally) throws IFException {

  boolean exceptionThrown=false;

  try {

    sut.drawImage(IMAGE,new Rectangle(10,10));

  }

 catch (  Exception e) {

    exceptionThrown=true;

  }

  if (!terminatesNormally) {

    assertTrue(exceptionThrown);

  }

}

