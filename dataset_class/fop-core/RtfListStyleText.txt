Location: RtfListStyleText.java

Content: 

/** 

 * Constructs a RtfListStyleText object.

 * @param s Text to be displayed

 */

public RtfListStyleText(String s){

  text=s;

}

Location: RtfListStyleText.java

Content: 

/** 

 * Gets called when the list table has to be written.

 * @param element RtfElement in whose context is to be written{@inheritDoc}

 * @throws IOException Thrown when an IO-problem occurs

 */

public void writeLevelGroup(RtfElement element) throws IOException {

  element.attrib.set(RtfListTable.LIST_NUMBER_TYPE,23);

  element.writeGroupMark(true);

  String sCount;

  if (text.length() < 10) {

    sCount="0" + String.valueOf(text.length());

  }

 else {

    sCount=String.valueOf(Integer.toHexString(text.length()));

    if (sCount.length() == 1) {

      sCount="0" + sCount;

    }

  }

  element.writeOneAttributeNS(RtfListTable.LIST_TEXT_FORM,"\\'" + sCount + RtfStringConverter.getInstance().escape(text));

  element.writeGroupMark(false);

  element.writeGroupMark(true);

  element.writeOneAttributeNS(RtfListTable.LIST_NUM_POSITION,null);

  element.writeGroupMark(false);

  element.attrib.set(RtfListTable.LIST_FONT_TYPE,2);

}

Location: RtfListStyleText.java

Content: 

/** 

 * Gets called before a RtfListItem has to be written.

 * @param item RtfListItem whose prefix has to be written{@inheritDoc}

 * @throws IOException Thrown when an IO-problem occurs

 */

public void writeListPrefix(RtfListItem item) throws IOException {

  item.writeControlWord("pnlvlblt");

  item.writeControlWord("ilvl0");

  item.writeOneAttribute(RtfListTable.LIST_NUMBER,item.getNumber());

  item.writeOneAttribute("pnindent",item.getParentList().attrib.getValue(RtfListTable.LIST_INDENT));

  item.writeControlWord("pnf1");

  item.writeGroupMark(true);

  item.writeOneAttribute(RtfListTable.LIST_FONT_TYPE,"2");

  item.writeControlWord("pntxtb");

  RtfStringConverter.getInstance().writeRtfString(item.writer,text);

  item.writeGroupMark(false);

}

Location: RtfListStyleText.java

Content: 

/** 

 * Gets called before a paragraph, which is contained by a RtfListItem has to be written.

 * @param element RtfElement in whose context is to be written{@inheritDoc}

 * @throws IOException Thrown when an IO-problem occurs

 */

public void writeParagraphPrefix(RtfElement element) throws IOException {

  element.writeGroupMark(true);

  element.writeControlWord("pntext");

  element.writeGroupMark(false);

}

