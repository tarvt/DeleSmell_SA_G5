Location: XMLObj.java

Content: 

/** 

 * Add an element to the DOM document

 * @param doc DOM document to which to add an element

 * @param parent the parent element of the element that is being added

 */

public void addElement(Document doc,Element parent){

  this.doc=doc;

  element=doc.createElementNS(getNamespaceURI(),name);

  setAttributes(element,attr);

  attr=null;

  parent.appendChild(element);

}

Location: XMLObj.java

Content: 

/** 

 * Add the top-level element to the DOM document

 * @param doc DOM document

 * @param svgRoot non-XSL-FO element to be added as the root of this document

 */

public void buildTopLevel(Document doc,Element svgRoot){

  setAttributes(element,attr);

}

Location: XMLObj.java

Content: 

/** 

 * Create an empty DOM document

 * @return DOM document

 */

public Document createBasicDocument(){

  doc=null;

  element=null;

  try {

    DocumentBuilderFactory fact=DocumentBuilderFactory.newInstance();

    fact.setNamespaceAware(true);

    doc=fact.newDocumentBuilder().newDocument();

    Element el=doc.createElementNS(getNamespaceURI(),name);

    doc.appendChild(el);

    element=doc.getDocumentElement();

    buildTopLevel(doc,element);

    if (!element.hasAttributeNS(XMLConstants.XMLNS_NAMESPACE_URI,XMLConstants.XMLNS_PREFIX)) {

      element.setAttributeNS(XMLConstants.XMLNS_NAMESPACE_URI,XMLConstants.XMLNS_PREFIX,getNamespaceURI());

    }

  }

 catch (  Exception e) {

    log.error("Error while trying to instantiate a DOM Document",e);

  }

  return doc;

}

Location: XMLObj.java

Content: 

/** 

 * @return DOM document representing this foreign XML

 */

public Document getDOMDocument(){

  return doc;

}

Location: XMLObj.java

Content: 

private static void setAttributes(Element element,Attributes attr){

  for (int count=0; count < attr.getLength(); count++) {

    String rf=attr.getValue(count);

    String qname=attr.getQName(count);

    int idx=qname.indexOf(":");

    if (idx == -1) {

      element.setAttribute(qname,rf);

    }

 else {

      String pref=qname.substring(0,idx);

      String tail=qname.substring(idx + 1);

      if (pref.equals(XMLConstants.XMLNS_PREFIX)) {

        ns.put(tail,rf);

      }

 else {

        element.setAttributeNS((String)ns.get(pref),tail,rf);

      }

    }

  }

}

Location: XMLObj.java

Content: 

/** 

 * Base constructor

 * @param parent {@link FONode} that is the parent of this object

 */

public XMLObj(FONode parent){

  super(parent);

}

