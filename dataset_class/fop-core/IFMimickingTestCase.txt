Location: IFMimickingTestCase.java

Content: 

private void doTestMimicking(String mime) throws FOPException, IFException, TransformerException {

  DOMResult domResult=new DOMResult();

  FOUserAgent userAgent=fopFactory.newFOUserAgent();

  userAgent.getEventBroadcaster().addEventListener(new EventListener(){

    public void processEvent(    Event event){

      if (event.getEventGroupID().equals(FontEventProducer.class.getName())) {

        fail("There must be no font-related event! Got: " + EventFormatter.format(event));

      }

    }

  }

);

  IFDocumentHandler targetHandler=userAgent.getRendererFactory().createDocumentHandler(userAgent,mime);

  IFSerializer serializer=new IFSerializer(new IFContext(userAgent));

  serializer.mimicDocumentHandler(targetHandler);

  serializer.setResult(domResult);

  userAgent.setDocumentHandlerOverride(serializer);

  Fop fop=fopFactory.newFop(userAgent);

  StreamSource src=new StreamSource(new File("test/xml/pdf-a/minimal-pdf-a.fo"));

  TransformerFactory tFactory=TransformerFactory.newInstance();

  Transformer transformer=tFactory.newTransformer();

  setErrorListener(transformer);

  transformer.transform(src,new SAXResult(fop.getDefaultHandler()));

}

Location: IFMimickingTestCase.java

Content: 

/** 

 * Sets an error listener which doesn't swallow errors like Xalan's default one.

 * @param transformer the transformer to set the error listener on

 */

protected void setErrorListener(Transformer transformer){

  transformer.setErrorListener(new ErrorListener(){

    public void error(    TransformerException exception) throws TransformerException {

      throw exception;

    }

    public void fatalError(    TransformerException exception) throws TransformerException {

      throw exception;

    }

    public void warning(    TransformerException exception) throws TransformerException {

    }

  }

);

}

Location: IFMimickingTestCase.java

Content: 

/** 

 * Tests IF document handler mimicking with PDF output.

 * @throws Exception if an error occurs

 */

@Test public void testMimickingPDF() throws Exception {

  doTestMimicking(MimeConstants.MIME_PDF);

}

Location: IFMimickingTestCase.java

Content: 

/** 

 * Tests IF document handler mimicking with PostScript output.

 * @throws Exception if an error occurs

 */

@Test public void testMimickingPS() throws Exception {

  doTestMimicking(MimeConstants.MIME_POSTSCRIPT);

}

Location: IFMimickingTestCase.java

Content: 

/** 

 * Tests IF document handler mimicking with TIFF output.

 * @throws Exception if an error occurs

 */

@Test public void testMimickingTIFF() throws Exception {

  doTestMimicking(MimeConstants.MIME_TIFF);

}

