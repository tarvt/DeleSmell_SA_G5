Location: AbstractBitmapRendererConfigParserTester.java

Content: 

public AbstractBitmapRendererConfigParserTester(BitmapRendererConfigParser parser){

  super(parser,BitmapRendererConfBuilder.class);

}

Location: AbstractBitmapRendererConfigParserTester.java

Content: 

@Test public void testBackgroundColor() throws Exception {

  parseConfig(createRenderer().setBackgroundColor("black"));

  assertEquals(Color.BLACK,conf.getBackgroundColor());

  parseConfig(createRenderer().setBackgroundColor("white"));

  assertEquals(Color.WHITE,conf.getBackgroundColor());

  parseConfig(createRenderer().setBackgroundColor("blue"));

  assertEquals(Color.BLUE,conf.getBackgroundColor());

  parseConfig(createRenderer().setBackgroundColor("blue").setPageBackgroundTransparency(true));

  assertTrue(conf.hasTransparentBackround());

  assertNull(conf.getBackgroundColor());

}

Location: AbstractBitmapRendererConfigParserTester.java

Content: 

@Test public void testTransparentPageBackground() throws Exception {

  parseConfig(createRenderer().setPageBackgroundTransparency(true));

  assertTrue(conf.hasTransparentBackround());

  assertNull(conf.getBackgroundColor());

  parseConfig(createRenderer().setPageBackgroundTransparency(false));

  assertFalse(conf.hasTransparentBackround());

  assertEquals(Color.WHITE,conf.getBackgroundColor());

  parseConfig(createRenderer());

  assertEquals(JAVA2D_TRANSPARENT_PAGE_BACKGROUND.getDefaultValue(),conf.hasTransparentBackround());

}

