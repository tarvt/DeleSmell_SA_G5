Location: AFPRendererConfigParserTestCase.java

Content: 

public AFPRendererConfigParserTestCase(){

  super(new AFPRendererConfigParser(),AFPRendererConfBuilder.class);

}

Location: AFPRendererConfigParserTestCase.java

Content: 

@Test public void tesPseg() throws Exception {

  parseConfig();

  assertEquals(false,conf.isWrapPseg());

  parseConfig(createRenderer().startImages().setWrapPseg(true).endImages());

  assertEquals(true,conf.isWrapPseg());

}

Location: AFPRendererConfigParserTestCase.java

Content: 

@Test public void testAllowJpegEmbedding() throws Exception {

  parseConfig();

  assertEquals(false,conf.allowJpegEmbedding());

  parseConfig(createRenderer().startImages().setAllowJpegEmbedding(true).endImages());

  assertEquals(true,conf.allowJpegEmbedding());

}

Location: AFPRendererConfigParserTestCase.java

Content: 

@Test public void testBitmapEncodingQuality() throws Exception {

  parseConfig();

  assertEquals(1.0f,conf.getBitmapEncodingQuality(),0.001f);

  parseConfig(createRenderer().startImages().setBitmapEncodingQuality(0.5f).endImages());

  assertEquals(0.5f,conf.getBitmapEncodingQuality(),0.001f);

}

Location: AFPRendererConfigParserTestCase.java

Content: 

@Test(expected=IllegalArgumentException.class) public void testForNameException() throws Exception {

  ImagesModeOptions.forName("_");

}

Location: AFPRendererConfigParserTestCase.java

Content: 

@Test public void testFS45() throws Exception {

  parseConfig();

  assertEquals(false,conf.isFs45());

  parseConfig(createRenderer().startImages().setFs45(true).endImages());

  assertEquals(true,conf.isFs45());

}

Location: AFPRendererConfigParserTestCase.java

Content: 

@Test(expected=IllegalStateException.class) public void testImagesException1() throws Exception {

  parseConfig(createRenderer().startImages().endImages());

  conf.isCmykImagesSupported();

}

Location: AFPRendererConfigParserTestCase.java

Content: 

@Test(expected=IllegalStateException.class) public void testImagesException2() throws Exception {

  parseConfig(createRenderer().startImages(MODE_COLOR).endImages());

  conf.getBitsPerPixel();

}

Location: AFPRendererConfigParserTestCase.java

Content: 

@Test public void testImagesNative() throws Exception {

  parseConfig(createRenderer());

  assertEquals(false,conf.isNativeImagesSupported());

  parseConfig(createRenderer().startImages().setNativeImageSupport(true).endImages());

  assertEquals(true,conf.isNativeImagesSupported());

}

Location: AFPRendererConfigParserTestCase.java

Content: 

@Test public void testResolution() throws Exception {

  parseConfig(createRenderer());

  assertEquals(Integer.valueOf(240),conf.getResolution());

  parseConfig(createRenderer().setRenderingResolution(300));

  assertEquals(Integer.valueOf(300),conf.getResolution());

}

