Location: PageNumberLayoutManager.java

Content: 

protected int getBidiLevel(){

  return fobj.getBidiLevel();

}

Location: PageNumberLayoutManager.java

Content: 

/** 

 * @param str string to be measured

 * @return width of the string

 */

private int getStringWidth(String str){

  int width=0;

  for (int count=0; count < str.length(); count++) {

    width+=font.getCharWidth(str.charAt(count));

  }

  return width;

}

Location: PageNumberLayoutManager.java

Content: 

/** 

 * {@inheritDoc} 

 */

public InlineArea get(LayoutContext context){

  ResolvedPageNumber pn=new ResolvedPageNumber();

  String str=getCurrentPV().getPageNumberString();

  int width=getStringWidth(str);

  int level=getBidiLevel();

  pn.addWord(str,0,level);

  pn.setBidiLevel(level);

  pn.setIPD(width);

  pn.setBPD(font.getAscender() - font.getDescender());

  pn.setBaselineOffset(font.getAscender());

  TraitSetter.addFontTraits(pn,font);

  pn.addTrait(Trait.COLOR,fobj.getColor());

  TraitSetter.addTextDecoration(pn,fobj.getTextDecoration());

  return pn;

}

Location: PageNumberLayoutManager.java

Content: 

/** 

 * {@inheritDoc} 

 */

protected AlignmentContext makeAlignmentContext(LayoutContext context){

  return new AlignmentContext(font,fobj.getLineHeight().getOptimum(this).getLength().getValue(this),fobj.getAlignmentAdjust(),fobj.getAlignmentBaseline(),fobj.getBaselineShift(),fobj.getDominantBaseline(),context.getAlignmentContext());

}

Location: PageNumberLayoutManager.java

Content: 

/** 

 * Constructor

 * @param node the fo:page-number formatting object that creates the areaTODO better null checking of node, font

 */

public PageNumberLayoutManager(PageNumber node){

  super(node);

  fobj=node;

}

Location: PageNumberLayoutManager.java

Content: 

private void updateContent(ResolvedPageNumber pn){

  pn.removeText();

  pn.addWord(getCurrentPV().getPageNumberString(),0,getBidiLevel());

  pn.handleIPDVariation(getStringWidth(pn.getText()) - pn.getIPD());

  areaInfo.ipdArea=MinOptMax.getInstance(pn.getIPD());

}

