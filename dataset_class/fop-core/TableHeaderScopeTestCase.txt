Location: TableHeaderScopeTestCase.java

Content: 

private void dynamicControllerAddsAttribute(){

  PDFDocument document=new PDFDocument("Test");

  controller=VersionController.getDynamicVersionController(Version.V1_4,document);

  scopeMustBeAdded();

  assertEquals(Version.V1_5,controller.getPDFVersion());

}

Location: TableHeaderScopeTestCase.java

Content: 

private void fixedController14doesNotAddAttribute(){

  controller=VersionController.getFixedVersionController(Version.V1_4);

  scopeMustNotBeAdded();

}

Location: TableHeaderScopeTestCase.java

Content: 

private void fixedController15addsAttribute(){

  controller=VersionController.getFixedVersionController(Version.V1_5);

  scopeMustBeAdded();

}

Location: TableHeaderScopeTestCase.java

Content: 

@Test public void pdfDocumentDelegatesToVersionController(){

  for (  Scope scope : Scope.values()) {

    testMakeStructureElementWithScope(scope);

  }

}

Location: TableHeaderScopeTestCase.java

Content: 

@Test public void scopeAddsTheAttribute(){

  for (  Scope scope : Scope.values()) {

    scopeAttributeMustBeAdded(scope);

  }

}

Location: TableHeaderScopeTestCase.java

Content: 

private void scopeAttributeMustBeAdded(Scope scope){

  PDFStructElem structElem=mock(PDFStructElem.class);

  Scope.addScopeAttribute(structElem,scope);

  verify(structElem).put(eq(ATTRIBUTE_ENTRY),scopeAttribute(scope));

}

Location: TableHeaderScopeTestCase.java

Content: 

private PDFDictionary scopeAttribute(Scope scope){

  return argThat(new IsScopeAttribute(scope));

}

Location: TableHeaderScopeTestCase.java

Content: 

private void scopeMustBeAdded(){

  scopeMustBeAdded(times(1));

}

Location: TableHeaderScopeTestCase.java

Content: 

private void scopeMustBeAdded(VerificationMode nTimes){

  PDFStructElem structElem=mock(PDFStructElem.class);

  controller.addTableHeaderScopeAttribute(structElem,Scope.COLUMN);

  verify(structElem,nTimes).put(eq(ATTRIBUTE_ENTRY),any());

}

Location: TableHeaderScopeTestCase.java

Content: 

private void scopeMustNotBeAdded(){

  scopeMustBeAdded(never());

}

Location: TableHeaderScopeTestCase.java

Content: 

private void testMakeStructureElementWithScope(Scope scope){

  VersionController controller=mock(VersionController.class);

  PDFDocument document=new PDFDocument("Test",controller);

  document.makeStructTreeRoot(null);

  PDFStructElem th=new PDFStructElem(null,Table.TH);

  document.registerStructureElement(th,scope);

  verify(controller).addTableHeaderScopeAttribute(any(PDFStructElem.class),eq(scope));

}

Location: TableHeaderScopeTestCase.java

Content: 

@Test public void versionControllerMayDelegateToScope(){

  fixedController14doesNotAddAttribute();

  fixedController15addsAttribute();

  dynamicControllerAddsAttribute();

}

