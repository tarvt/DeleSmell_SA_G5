Location: HeaderColumnTestCase.java

Content: 

private Attributes createScopeAttribute(String value){

  AttributesImpl atts=new AttributesImpl();

  atts.addAttribute(ExtensionElementMapping.URI,"header","fox:header",XMLUtil.CDATA,value);

  return atts;

}

Location: HeaderColumnTestCase.java

Content: 

private Table createTableParent(){

  Table parent=mock(Table.class);

  FOEventHandler mockFOEventHandler=FONodeMocks.mockGetFOEventHandler(parent);

  FOUserAgent mockUserAgent=mockFOEventHandler.getUserAgent();

  mockGetElementMappingRegistry(mockUserAgent);

  return parent;

}

Location: HeaderColumnTestCase.java

Content: 

private ElementMappingRegistry mockGetElementMappingRegistry(FOUserAgent mockUserAgent){

  ElementMappingRegistry mockRegistry=mock(ElementMappingRegistry.class);

  when(mockRegistry.getElementMapping(anyString())).thenReturn(new ExtensionElementMapping());

  when(mockUserAgent.getElementMappingRegistry()).thenReturn(mockRegistry);

  return mockRegistry;

}

Location: HeaderColumnTestCase.java

Content: 

private FOValidationEventProducer mockGetEventProducerFor(EventBroadcaster mockEventBroadcaster){

  FOValidationEventProducer mockEventProducer=mock(FOValidationEventProducer.class);

  when(mockEventBroadcaster.getEventProducerFor(eq(FOValidationEventProducer.class))).thenReturn(mockEventProducer);

  return mockEventProducer;

}

Location: HeaderColumnTestCase.java

Content: 

@Test public void testCorrectValue() throws Exception {

  testCorrectValue(true);

  testCorrectValue(false);

}

Location: HeaderColumnTestCase.java

Content: 

private void testCorrectValue(boolean expectedValue) throws Exception {

  Table parent=createTableParent();

  FONodeMocks.mockGetColumnNumberManager(parent);

  TableColumn column=new TableColumn(parent,true);

  PropertyList propertyList=new StaticPropertyList(column,null);

  Attributes atts=createScopeAttribute(String.valueOf(expectedValue));

  propertyList.addAttributesToList(atts);

  column.bind(propertyList);

  assertEquals(expectedValue,column.isHeader());

}

Location: HeaderColumnTestCase.java

Content: 

@Test public void testWrongValue() throws ValidationException {

  Table parent=createTableParent();

  EventBroadcaster mockEventBroadcaster=FONodeMocks.mockGetEventBroadcaster(parent.getFOEventHandler().getUserAgent());

  FOValidationEventProducer eventProducer=mockGetEventProducerFor(mockEventBroadcaster);

  TableColumn column=new TableColumn(parent);

  PropertyList propertyList=new StaticPropertyList(column,null);

  Attributes atts=createScopeAttribute("blah");

  propertyList.addAttributesToList(atts);

  verify(eventProducer).invalidPropertyValue(any(),eq("fo:table-column"),eq("fox:header"),eq("blah"),any(PropertyException.class),any(Locator.class));

}

