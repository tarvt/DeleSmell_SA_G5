Location: ChecksFactory.java

Content: 

/** 

 * Default constructor. 

 */

protected ChecksFactory(){

}

Location: ChecksFactory.java

Content: 

public final List<C> createCheckList(Element container){

  List<C> checks=new ArrayList<C>();

  NodeList nodes=container.getChildNodes();

  for (int i=0; i < nodes.getLength(); i++) {

    Node node=nodes.item(i);

    if (node instanceof Element) {

      checks.add(createCheck((Element)node));

    }

  }

  return checks;

}

Location: ChecksFactory.java

Content: 

/** 

 * Creates a new  {@link Check} instance corresponding to the given element.

 * @param element an element in the XML test case that identifies a particular check

 * @return the corresponding check

 * @throws IllegalArgumentException if not check corresponding to the given elementhas been found

 */

public final C createCheck(Element element){

  String name=element.getTagName();

  CheckFactory<C> factory=checkFactories.get(name);

  if (factory == null) {

    throw new IllegalArgumentException("No check class found for " + name);

  }

 else {

    return factory.createCheck(element);

  }

}

Location: ChecksFactory.java

Content: 

/** 

 * Registers a factory for a new kind of check.

 * @param elementName the name of the element under which the check is identified inthe XML test case

 * @param factory the corresponding factory

 */

protected void registerCheckFactory(String elementName,CheckFactory<C> factory){

  checkFactories.put(elementName,factory);

}

