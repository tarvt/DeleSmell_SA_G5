Location: CellPart.java

Content: 

/** 

 * Creates a new CellPart.

 * @param pgu Primary grid unit

 * @param start starting element

 * @param end ending element

 * @param last true if this cell part is the last one for the cell

 * @param condBeforeContentLength length of the additional content that will have tobe displayed if this part will be the first one on the page

 * @param length length of the content represented by this cell part

 * @param condAfterContentLength length of the additional content that will have to bedisplayed if this part will be the last one on the page

 * @param bpBeforeNormal width of border- and padding-before in the normal case

 * @param bpBeforeFirst width of (possibly optional) border- and padding-before ifthis part will be the first one on the page

 * @param bpAfterNormal width of border- and padding-after in the normal case

 * @param bpAfterLast width of (possibly optional) border- and padding-after if thispart will be the last one on the page

 */

protected CellPart(PrimaryGridUnit pgu,int start,int end,boolean last,int condBeforeContentLength,int length,int condAfterContentLength,int bpBeforeNormal,int bpBeforeFirst,int bpAfterNormal,int bpAfterLast){

  this.pgu=pgu;

  this.start=start;

  this.end=end;

  this.isLast=last;

  this.condBeforeContentLength=condBeforeContentLength;

  this.length=length;

  this.condAfterContentLength=condAfterContentLength;

  this.bpBeforeNormal=bpBeforeNormal;

  this.bpBeforeFirst=bpBeforeFirst;

  this.bpAfterNormal=bpAfterNormal;

  this.bpAfterLast=bpAfterLast;

}

Location: CellPart.java

Content: 

int getBorderPaddingAfter(boolean lastOnPage){

  if (lastOnPage) {

    return bpAfterLast;

  }

 else {

    return bpAfterNormal;

  }

}

Location: CellPart.java

Content: 

int getBorderPaddingBefore(boolean firstOnPage){

  if (firstOnPage) {

    return bpBeforeFirst;

  }

 else {

    return bpBeforeNormal;

  }

}

Location: CellPart.java

Content: 

int getConditionalAfterContentLength(){

  return condAfterContentLength;

}

Location: CellPart.java

Content: 

int getConditionalBeforeContentLength(){

  return condBeforeContentLength;

}

Location: CellPart.java

Content: 

int getLength(){

  return length;

}

Location: CellPart.java

Content: 

/** 

 * @return true if this part is the first part of a cell 

 */

public boolean isFirstPart(){

  return (start == 0);

}

Location: CellPart.java

Content: 

/** 

 * @return true if this part is the last part of a cell 

 */

boolean isLastPart(){

  return isLast;

}

