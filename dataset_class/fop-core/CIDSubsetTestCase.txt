Location: CIDSubsetTestCase.java

Content: 

@Test public void testGetChars(){

  char[] chars=cidSub.getChars();

  char[] expected=TEXT.toCharArray();

  Arrays.sort(chars);

  Arrays.sort(expected);

  for (  char c : expected) {

    assertTrue(Arrays.binarySearch(chars,c) >= 0);

  }

  for (  char c : chars) {

    if (c == CharUtilities.NOT_A_CHARACTER) {

      continue;

    }

    assertTrue(Arrays.binarySearch(expected,c) >= 0);

  }

}

Location: CIDSubsetTestCase.java

Content: 

@Test public void testGetGlyphIndices(){

  assertEquals(bs,cidSub.getGlyphIndices());

}

Location: CIDSubsetTestCase.java

Content: 

@Test public void testGetGlyphs(){

  Map<Integer,Integer> fontGlyphs=cidSub.getGlyphs();

  for (  Integer key : fontGlyphs.keySet()) {

    if (key == 0) {

      assertEquals(0,fontGlyphs.get(key).intValue());

      continue;

    }

    assertEquals(glyphToSelector.get(key),fontGlyphs.get(key));

  }

  assertEquals(glyphToSelector.size() + 1,fontGlyphs.size());

}

Location: CIDSubsetTestCase.java

Content: 

@Test public void testGetNumberOfGlyphs(){

  assertEquals(glyphToSelector.size() + 1,cidSub.getNumberOfGlyphs());

}

Location: CIDSubsetTestCase.java

Content: 

@Test public void testGetOriginalGlyphIndex(){

  int codepoint=(int)TEXT.charAt(0);

  int subsetCharSelector=charToSelector.get(codepoint);

  int originalIdx=charToGlyph.get(codepoint);

  assertEquals(originalIdx,cidSub.getOriginalGlyphIndex(subsetCharSelector));

}

Location: CIDSubsetTestCase.java

Content: 

@Test public void testGetUnicode(){

  int bmpCodepoint=codepoints[5];

  int nonBmpCodepoint=codepoints[codepoints.length - 1];

  assertEquals(bmpCodepoint,cidSub.getUnicode(charToSelector.get(bmpCodepoint)));

  assertEquals(nonBmpCodepoint,cidSub.getUnicode(charToSelector.get(nonBmpCodepoint)));

  assertEquals(CharUtilities.NOT_A_CHARACTER,cidSub.getUnicode(-1));

}

Location: CIDSubsetTestCase.java

Content: 

@Test public void testMapChar(){

  for (  Map.Entry<Integer,Integer> entry : glyphToSelector.entrySet()) {

    int glyphIndex=entry.getKey();

    int subsetCharSelector=entry.getValue();

    int codepoint='a';

    assertEquals(subsetCharSelector,cidSub.mapChar(glyphIndex,(char)codepoint));

  }

}

Location: CIDSubsetTestCase.java

Content: 

@Test public void testMapCodePoint(){

  for (  Map.Entry<Integer,Integer> entry : glyphToSelector.entrySet()) {

    int glyphIndex=entry.getKey();

    int subsetCharSelector=entry.getValue();

    int codepoint='a';

    assertEquals(subsetCharSelector,cidSub.mapCodePoint(glyphIndex,codepoint));

  }

}

