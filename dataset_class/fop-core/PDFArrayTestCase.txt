Location: PDFArrayTestCase.java

Content: 

private void collectionArrayContainsTests(){

  assertTrue(collectionArray.contains("one"));

  assertTrue(collectionArray.contains("two"));

  assertTrue(collectionArray.contains("three"));

  assertFalse(collectionArray.contains("zero"));

  assertFalse(collectionArray.contains("four"));

}

Location: PDFArrayTestCase.java

Content: 

private void doubleArrayContainsTests(){

  assertTrue(doubleArray.contains(1.1));

  assertTrue(doubleArray.contains(2.2));

  assertTrue(doubleArray.contains(3.3));

  assertTrue(doubleArray.contains(4.4));

  assertTrue(doubleArray.contains(5.5));

  assertFalse(doubleArray.contains(10.0));

  assertFalse(doubleArray.contains(0.0));

}

Location: PDFArrayTestCase.java

Content: 

private void objectArrayContainsTests(){

  assertTrue(objArray.contains("one"));

  assertTrue(objArray.contains(2));

  assertTrue(objArray.contains(3.0f));

  assertTrue(objArray.contains(num));

  assertFalse(objArray.contains("four"));

  assertFalse(objArray.contains(0.0));

}

Location: PDFArrayTestCase.java

Content: 

/** 

 * Tests add() - tests that objects are appended to the end of the array as expected.

 */

@Test public void testAdd(){

  intArray.add(Integer.valueOf(6));

  doubleArray.add(6.6);

  for (int i=1; i <= 6; i++) {

    assertEquals(i,intArray.get(i - 1));

  }

  assertEquals(1.1,doubleArray.get(0));

  assertEquals(2.2,doubleArray.get(1));

  assertEquals(3.3,doubleArray.get(2));

  assertEquals(4.4,doubleArray.get(3));

  assertEquals(5.5,doubleArray.get(4));

  assertEquals(6.6,doubleArray.get(5));

  collectionArray.add(1);

  assertEquals("one",collectionArray.get(0));

  assertEquals("two",collectionArray.get(1));

  assertEquals("three",collectionArray.get(2));

  assertEquals(1.0,collectionArray.get(3));

  objArray.add("four");

  assertEquals("one",objArray.get(0));

  assertEquals(2,objArray.get(1));

  assertEquals(0,Double.compare(3.0,(Float)objArray.get(2)));

  assertEquals("four",objArray.get(4));

}

Location: PDFArrayTestCase.java

Content: 

/** 

 * Test contains() - test whether this PDFArray contains an object.

 */

@Test public void testContains(){

  hongshuai();

  for (int i=1; i <= 5; i++) {

    assertTrue(intArray.contains(i));

  }

  assertFalse(intArray.contains(6));

  assertFalse(intArray.contains(0));

  doubleArrayContainsTests();

  collectionArrayContainsTests();

  objectArrayContainsTests();

}

Location: PDFArrayTestCase.java

Content: 

/** 

 * Test length() - tests the length of an array.

 */

@Test public void testLength(){

  assertEquals(5,intArray.length());

  assertEquals(5,doubleArray.length());

  assertEquals(3,collectionArray.length());

  assertEquals(4,objArray.length());

  intArray.add(6);

  assertEquals(6,intArray.length());

}

Location: PDFArrayTestCase.java

Content: 

/** 

 * Test set() - tests that a particular point has been properly set.

 */

@Test public void testSet(){

  PDFName name=new PDFName("zero test");

  objArray.set(0,name);

  assertEquals(name,objArray.get(0));

  objArray.set(1,"test");

  assertEquals("test",objArray.get(1));

  objArray.set(2,5);

  assertEquals(5.0,objArray.get(2));

  try {

    objArray.set(4,2);

    fail("out of bounds");

  }

 catch (  IndexOutOfBoundsException e) {

  }

}

