Location: AFMCharMetrics.java

Content: 

/** 

 * Returns the named character represented by this instance.

 * @return the named character (or null if no named character is associated)

 */

public NamedCharacter getCharacter(){

  return this.character;

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Returns the character code.

 * @return the charCode (-1 if not part of the encoding)

 */

public int getCharCode(){

  return charCode;

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Returns the PostScript character name.

 * @return the charName (or null if no character name is associated)

 */

public String getCharName(){

  return (getCharacter() != null ? getCharacter().getName() : null);

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Returns the Unicode sequence for this character.

 * @return the Unicode characters(or null if no such Unicode sequence exists for this character)

 */

public String getUnicodeSequence(){

  return (getCharacter() != null ? getCharacter().getUnicodeSequence() : null);

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Returns the progression dimension in x-direction.

 * @return the widthX

 */

public double getWidthX(){

  return widthX;

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Returns the progression dimension in y-direction.

 * @return the widthY

 */

public double getWidthY(){

  return widthY;

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Indicates whether the character has a character code, i.e. is part of the default encoding.

 * @return true if there is a character code.

 */

public boolean hasCharCode(){

  return charCode >= 0;

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Sets the named character represented by this instance.

 * @param ch the named character

 */

public void setCharacter(NamedCharacter ch){

  this.character=ch;

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Sets the named character represented by this instance.

 * @param charName the character name (as defined in the Adobe glyph list)

 * @param unicodeSequence the Unicode sequence

 */

public void setCharacter(String charName,String unicodeSequence){

  setCharacter(new NamedCharacter(charName,unicodeSequence));

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Sets the character code.

 * @param charCode the charCode to set

 */

public void setCharCode(int charCode){

  this.charCode=charCode;

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Sets the progression dimension in x-direction

 * @param widthX the widthX to set

 */

public void setWidthX(double widthX){

  this.widthX=widthX;

}

Location: AFMCharMetrics.java

Content: 

/** 

 * Sets the progression dimension in y-direction

 * @param widthY the widthY to set

 */

public void setWidthY(double widthY){

  this.widthY=widthY;

}

