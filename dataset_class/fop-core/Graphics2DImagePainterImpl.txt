Location: Graphics2DImagePainterImpl.java

Content: 

/** 

 * Main constructor

 * @param root the graphics node root

 * @param ctx the bridge context

 * @param imageSize the image size

 */

public Graphics2DImagePainterImpl(GraphicsNode root,BridgeContext ctx,Dimension imageSize){

  this.root=root;

  this.imageSize=imageSize;

  this.ctx=ctx;

}

Location: Graphics2DImagePainterImpl.java

Content: 

private void normaliseScale(Graphics2D g2d){

  if (!(g2d instanceof AbstractGraphics2D)) {

    AffineTransform old=g2d.getTransform();

    double scaleX=BigDecimal.valueOf(old.getScaleX()).setScale(2,RoundingMode.HALF_UP).doubleValue();

    double scaleY=BigDecimal.valueOf(old.getScaleY()).setScale(2,RoundingMode.HALF_UP).doubleValue();

    AffineTransform newat=new AffineTransform(scaleX,old.getShearY(),old.getShearX(),scaleY,old.getTranslateX(),old.getTranslateY());

    g2d.setTransform(newat);

  }

}

Location: Graphics2DImagePainterImpl.java

Content: 

/** 

 * {@inheritDoc} 

 */

public void paint(Graphics2D g2d,Rectangle2D area){

  prepare(g2d,area);

  root.paint(g2d);

}

Location: Graphics2DImagePainterImpl.java

Content: 

private void prepare(Graphics2D g2d,Rectangle2D area){

  double tx=area.getX();

  double ty=area.getY();

  if (tx != 0 || ty != 0) {

    g2d.translate(tx,ty);

  }

  float iw=(float)ctx.getDocumentSize().getWidth();

  float ih=(float)ctx.getDocumentSize().getHeight();

  float w=(float)area.getWidth();

  float h=(float)area.getHeight();

  float sx=w / iw;

  float sy=h / ih;

  if (sx != 1.0 || sy != 1.0) {

    g2d.scale(sx,sy);

  }

  normaliseScale(g2d);

}

