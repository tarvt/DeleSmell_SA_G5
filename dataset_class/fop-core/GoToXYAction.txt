Location: GoToXYAction.java

Content: 

/** 

 * Returns the absolute coordinates of the target location on the page. <p> This function will always return a valid value for safety. Use {@link #isComplete()} to check if the link is actually complete.

 * @return the target location (coordinates in millipoints)

 */

public Point getTargetLocation(){

  if (this.targetLocation == null) {

    return new Point(0,0);

  }

 else {

    return this.targetLocation;

  }

}

Location: GoToXYAction.java

Content: 

/** 

 * Creates a new instance with yet unknown location.

 * @param id the identifier for this action

 */

public GoToXYAction(String id){

  this(id,-1,null,null);

}

Location: GoToXYAction.java

Content: 

/** 

 * Creates a new instance.

 * @param id the identifier for this action

 * @param pageIndex the index (0-based) of the target page, -1 if the page index isstill unknown

 * @param targetLocation the absolute location on the page (coordinates in millipoints),or null, if the position isn't known, yet

 */

public GoToXYAction(String id,int pageIndex,Point targetLocation,PageIndexContext ifContext){

  setID(id);

  if (pageIndex < 0 && targetLocation != null) {

    throw new IllegalArgumentException("Page index may not be null if target location is known!");

  }

  setPageIndex(pageIndex);

  setTargetLocation(targetLocation);

  this.ifContext=ifContext;

}

Location: GoToXYAction.java

Content: 

private boolean isCompleteExceptTargetLocation(){

  return (getPageIndex() >= 0);

}

Location: GoToXYAction.java

Content: 

/** 

 * Sets the index of the target page.

 * @param pageIndex the index (0-based) of the target page

 */

public void setPageIndex(int pageIndex){

  this.pageIndex=pageIndex;

}

Location: GoToXYAction.java

Content: 

/** 

 * Sets the absolute coordinates of the target location on the page.

 * @param location the location (coordinates in millipoints)

 */

public void setTargetLocation(Point location){

  this.targetLocation=location;

}

