Location: PDFDictionaryExtension.java

Content: 

@Override public void addEntry(PDFCollectionEntryExtension entry){

  if ((entry.getKey() == null) || (entry.getKey().length() == 0)) {

    throw new IllegalArgumentException("pdf:dictionary key is empty");

  }

 else {

    entries.add(entry);

  }

}

Location: PDFDictionaryExtension.java

Content: 

public Object findEntryValue(String key){

  for (  PDFCollectionEntryExtension entry : entries) {

    String entryKey=entry.getKey();

    if ((entryKey != null) && entryKey.equals(key)) {

      return entry.getValue();

    }

  }

  return null;

}

Location: PDFDictionaryExtension.java

Content: 

public PDFCollectionEntryExtension findEntry(String key){

  for (  PDFCollectionEntryExtension entry : entries) {

    String entryKey=entry.getKey();

    if ((entryKey != null) && entryKey.equals(key)) {

      return entry;

    }

  }

  return null;

}

Location: PDFDictionaryExtension.java

Content: 

public PDFDictionaryType getDictionaryType(){

  return dictionaryType;

}

Location: PDFDictionaryExtension.java

Content: 

@Override public String getElementName(){

  return dictionaryType.elementName();

}

Location: PDFDictionaryExtension.java

Content: 

public List<PDFCollectionEntryExtension> getEntries(){

  return entries;

}

Location: PDFDictionaryExtension.java

Content: 

public PDFCollectionEntryExtension getLastEntry(){

  if (entries.size() > 0) {

    return entries.get(entries.size() - 1);

  }

 else {

    return null;

  }

}

Location: PDFDictionaryExtension.java

Content: 

public String getProperty(String name){

  return properties.get(name);

}

Location: PDFDictionaryExtension.java

Content: 

@Override public Object getValue(){

  return getEntries();

}

Location: PDFDictionaryExtension.java

Content: 

PDFDictionaryExtension(){

  this(PDFDictionaryType.Dictionary);

}

Location: PDFDictionaryExtension.java

Content: 

PDFDictionaryExtension(PDFDictionaryType dictionaryType){

  super(PDFObjectType.Dictionary);

  this.dictionaryType=dictionaryType;

  this.properties=new java.util.HashMap<String,String>();

  this.entries=new java.util.ArrayList<PDFCollectionEntryExtension>();

}

Location: PDFDictionaryExtension.java

Content: 

public void setProperty(String name,String value){

  properties.put(name,value);

}

Location: PDFDictionaryExtension.java

Content: 

@Override public void setValue(Object value){

  throw new UnsupportedOperationException();

}

Location: PDFDictionaryExtension.java

Content: 

public boolean usesIDAttribute(){

  return dictionaryType.usesIDAttribute();

}

