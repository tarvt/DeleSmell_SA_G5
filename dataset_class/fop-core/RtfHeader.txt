Location: RtfHeader.java

Content: 

/** 

 * Create an RTF header 

 */

RtfHeader(RtfFile f,Writer w) throws IOException {

  super(f,w);

  new RtfFontTable(this,w);

  new RtfGenerator(this,w);

}

Location: RtfHeader.java

Content: 

/** 

 * write properties for footnote handling

 */

private void writeFootnoteProperties() throws IOException {

  newLine();

  writeControlWord("fet0");

  writeControlWord("ftnbj");

}

Location: RtfHeader.java

Content: 

/** 

 * write to our Writer using an RtfStringConverter 

 */

void writeRtfString(String toWrite) throws IOException {

  RtfStringConverter.getInstance().writeRtfString(writer,toWrite);

}

Location: RtfHeader.java

Content: 

/** 

 * write user properties if any 

 */

private void writeUserProperties() throws IOException {

  if (userProperties.size() > 0) {

    writeGroupMark(true);

    writeStarControlWord("userprops");

    for (    Object o : userProperties.entrySet()) {

      final Map.Entry entry=(Map.Entry)o;

      writeGroupMark(true);

      writeControlWord("propname");

      RtfStringConverter.getInstance().writeRtfString(writer,entry.getKey().toString());

      writeGroupMark(false);

      writeControlWord("proptype30");

      writeGroupMark(true);

      writeControlWord("staticval");

      RtfStringConverter.getInstance().writeRtfString(writer,entry.getValue().toString());

      writeGroupMark(false);

    }

    writeGroupMark(false);

  }

}

Location: RtfHeader.java

Content: 

/** 

 * write directly to our Writer TODO should check that this done at the right point, or even better, store what is written here to render it in writeRtfContent. <-- it is for the color table

 */

void write(String toWrite) throws IOException {

  writer.write(toWrite);

}

