Location: FOPRtfAttributes.java

Content: 

/** 

 * Set an attribute that has a Length value (internal units in half-points)

 * @param name name of attribute

 * @param value value of attribute

 * @return this (which now contains the new entry)

 */

public RtfAttributes setHalfPoints(String name,Length value){

  set(name,value.getValue(DummyPercentBaseContext.getInstance()) / (1000 / 2));

  return this;

}

Location: FOPRtfAttributes.java

Content: 

/** 

 * Set an attribute using a value in millipoints (internal units in twips)

 * @param name name of attribute

 * @param value value of attribute (in millipoints)

 * @return this (which now contains the new entry)

 */

public RtfAttributes setTwips(String name,int value){

  set(name,value / (1000 / 20));

  return this;

}

Location: FOPRtfAttributes.java

Content: 

/** 

 * Set an attribute that has a Length value (internal units in twips)

 * @param name name of attribute

 * @param value value of attribute

 * @return this (which now contains the new entry)

 */

public RtfAttributes setTwips(String name,Length value){

  set(name,value.getValue() / (1000 / 20));

  return this;

}

Location: FOPRtfAttributes.java

Content: 

/** 

 * Set an attribute that has a Color value.

 * @param name name of attribute

 * @param color value of attribute

 * @return this (which now contains the new entry)

 */

public RtfAttributes set(String name,Color color){

  int redComponent=color.getRed();

  int greenComponent=color.getGreen();

  int blueComponent=color.getBlue();

  set(name,RtfColorTable.getInstance().getColorNumber(redComponent,greenComponent,blueComponent));

  return this;

}

