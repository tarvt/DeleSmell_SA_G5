Location: RegionReference.java

Content: 

/** 

 * Get the region class of this region.

 * @return the region class

 */

public int getRegionClass(){

  return this.regionClass;

}

Location: RegionReference.java

Content: 

/** 

 * @return Returns the parent RegionViewport.

 */

public RegionViewport getRegionViewport(){

  return regionViewport;

}

Location: RegionReference.java

Content: 

/** 

 * Create a new region reference area.

 * @param regionClass the region class (as returned by Region.getNameId())

 * @param regionName the name of the region (as returned by Region.getRegionName())

 * @param parent the viewport for this region.

 */

public RegionReference(int regionClass,String regionName,RegionViewport parent){

  this.regionClass=regionClass;

  this.regionName=regionName;

  addTrait(Trait.IS_REFERENCE_AREA,Boolean.TRUE);

  regionViewport=parent;

}

Location: RegionReference.java

Content: 

/** 

 * Create a new region reference area.

 * @param regionFO the region.

 * @param parent the viewport for this region.

 */

public RegionReference(Region regionFO,RegionViewport parent){

  this(regionFO.getNameId(),regionFO.getRegionName(),parent);

}

