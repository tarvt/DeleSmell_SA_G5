Location: ComplexScriptsLayoutTestCase.java

Content: 

public ComplexScriptsLayoutTestCase(TestFilesConfiguration testConfig,File testFile){

  this.testConfig=testConfig;

  this.testFile=testFile;

  this.ifTester=new IFTester(tfactory,areaTreeOutputDir);

}

Location: ComplexScriptsLayoutTestCase.java

Content: 

private FopFactory getFopFactory(TestFilesConfiguration testConfig,Document testDoc) throws SAXException, IOException {

  EnvironmentProfile profile=EnvironmentalProfileFactory.createRestrictedIO(testConfig.getTestDirectory().getParentFile().toURI(),ResourceResolverFactory.createDefaultResourceResolver());

  InputStream confStream=new FopConfBuilder().setStrictValidation(true).setFontBaseURI("test/resources/fonts/ttf/").startRendererConfig(PDFRendererConfBuilder.class).startFontsConfig().startFont(null,"DejaVuLGCSerif.ttf").addTriplet("DejaVu LGC Serif","normal","normal").endFont().endFontConfig().endRendererConfig().build();

  FopFactoryBuilder builder=new FopConfParser(confStream,new File(".").toURI(),profile).getFopFactoryBuilder();

  return builder.build();

}

Location: ComplexScriptsLayoutTestCase.java

Content: 

private static Collection<Object[]> getTestFiles(){

  String testSet=System.getProperty("fop.complexscripts.testset");

  testSet=(testSet != null ? testSet : "standard") + "-testcases";

  return getTestFiles(testSet);

}

Location: ComplexScriptsLayoutTestCase.java

Content: 

private static Collection<Object[]> getTestFiles(String testSetName){

  TestFilesConfiguration.Builder builder=new TestFilesConfiguration.Builder();

  builder.testDir("test/resources/complexscripts/layout").singleProperty("fop.complexscripts.single").startsWithProperty("fop.complexscripts.starts-with").suffix(".xml").testSet(testSetName).privateTestsProperty("fop.complexscripts.private");

  return getTestFiles(builder.build());

}

