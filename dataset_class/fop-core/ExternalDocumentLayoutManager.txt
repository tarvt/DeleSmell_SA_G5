Location: ExternalDocumentLayoutManager.java

Content: 

/** 

 * Constructor

 * @param ath the area tree handler object

 * @param document fox:external-document to process

 */

public ExternalDocumentLayoutManager(AreaTreeHandler ath,ExternalDocument document){

  super(ath,document);

}

Location: ExternalDocumentLayoutManager.java

Content: 

private void fillPage(String uri){

  Dimension imageSize=this.imageLayout.getViewportSize();

  Block blockArea=new Block();

  blockArea.setChangeBarList(getChangeBarList());

  blockArea.setIPD(imageSize.width);

  LineArea lineArea=new LineArea();

  Image imageArea=new Image(uri);

  TraitSetter.setProducerID(imageArea,fobj.getId());

  transferForeignAttributes(imageArea);

  InlineViewport vp=new InlineViewport(imageArea,fobj.getBidiLevel());

  TraitSetter.setProducerID(vp,fobj.getId());

  vp.setIPD(imageSize.width);

  vp.setBPD(imageSize.height);

  vp.setContentPosition(imageLayout.getPlacement());

  vp.setBlockProgressionOffset(0);

  lineArea.addInlineArea(vp);

  lineArea.updateExtentsFromChildren();

  blockArea.addLineArea(lineArea);

  curPage.getPageViewport().getCurrentFlow().addBlock(blockArea);

  curPage.getPageViewport().getCurrentSpan().notifyFlowsFinished();

}

Location: ExternalDocumentLayoutManager.java

Content: 

/** 

 * @return the ExternalDocument being managed by this layout manager

 */

protected ExternalDocument getExternalDocument(){

  return (ExternalDocument)pageSeq;

}

Location: ExternalDocumentLayoutManager.java

Content: 

private ResourceEventProducer getResourceEventProducer(){

  return ResourceEventProducer.Provider.get(getExternalDocument().getUserAgent().getEventBroadcaster());

}

Location: ExternalDocumentLayoutManager.java

Content: 

private void makePageForImage(ImageInfo info,ImageLayout layout){

  this.imageLayout=layout;

  curPage=makeNewPage(false);

  fillPage(info.getOriginalURI());

  finishPage();

}

