Location: AFPDataObjectInfo.java

Content: 

/** 

 * Default constructor

 */

public AFPDataObjectInfo(){

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Returns the image data height

 * @return the image data height

 */

public int getDataHeight(){

  return dataHeight;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Returns the data height resolution

 * @return the data height resolution

 */

public int getDataHeightRes(){

  return this.dataHeightRes;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Returns the image data width

 * @return the image data width

 */

public int getDataWidth(){

  return dataWidth;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Returns the data width resolution

 * @return the data width resolution

 */

public int getDataWidthRes(){

  return this.dataWidthRes;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Returns the way an image is mapped into its target area. By default, this is "scale to fill" behavior.

 * @return the mapping option value from the Mapping Option Triplet

 */

public byte getMappingOption(){

  return mappingOption;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Returns the object area info

 * @return the object area info

 */

public AFPObjectAreaInfo getObjectAreaInfo(){

  return this.objectAreaInfo;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Convenience method to return the object type

 * @return the object type

 */

public Registry.ObjectType getObjectType(){

  return Registry.getInstance().getObjectType(getMimeType());

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Indicates whether a page segment or a normal object shall be created.

 * @return true for page segments, false for objects

 */

public boolean isCreatePageSegment(){

  return this.createPageSegment;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Controls whether to create a page segment or a normal object.

 * @param value true for page segments, false for objects

 */

public void setCreatePageSegment(boolean value){

  this.createPageSegment=value;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Sets the data height resolution

 * @param dataHeightRes the data height resolution

 */

public void setDataHeightRes(int dataHeightRes){

  this.dataHeightRes=dataHeightRes;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Sets the image data height

 * @param imageDataHeight the image data height

 */

public void setDataHeight(int imageDataHeight){

  this.dataHeight=imageDataHeight;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Sets the data width resolution

 * @param dataWidthRes the data width resolution

 */

public void setDataWidthRes(int dataWidthRes){

  this.dataWidthRes=dataWidthRes;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Sets the image data width

 * @param imageDataWidth the image data width

 */

public void setDataWidth(int imageDataWidth){

  this.dataWidth=imageDataWidth;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Sets the image mime type

 * @param mimeType the image mime type

 */

public void setMimeType(String mimeType){

  this.mimeType=mimeType;

}

Location: AFPDataObjectInfo.java

Content: 

/** 

 * Sets the object area info

 * @param objectAreaInfo the object area info

 */

public void setObjectAreaInfo(AFPObjectAreaInfo objectAreaInfo){

  this.objectAreaInfo=objectAreaInfo;

}

