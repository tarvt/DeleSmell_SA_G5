Location: NoOperationTestCase.java

Content: 

private String getNopText(UnparsedStructuredField field) throws UnsupportedEncodingException {

  byte[] data=field.getData();

  String text=new String(data,AFPConstants.EBCIDIC_ENCODING);

  return text;

}

Location: NoOperationTestCase.java

Content: 

private UnparsedStructuredField skipTo(MODCAParser parser,int typeID) throws IOException {

  UnparsedStructuredField field=null;

  do {

    field=parser.readNextStructuredField();

    if (field.getSfTypeID() == typeID) {

      return field;

    }

  }

 while (field != null);

  fail("Structured field not found: " + Integer.toHexString(typeID));

  return null;

}

Location: NoOperationTestCase.java

Content: 

/** 

 * Tests afp:no-operation.

 * @throws Exception if an error occurs

 */

@Test public void testNoOperation() throws Exception {

  FOUserAgent ua=fopFactory.newFOUserAgent();

  File outputFile=renderFile(ua,"nops.fo","");

  InputStream in=new java.io.FileInputStream(outputFile);

  try {

    MODCAParser parser=new MODCAParser(in);

    UnparsedStructuredField field=skipTo(parser,0xD3A8A8);

    field=parser.readNextStructuredField();

    assertEquals(0xD3EEEE,field.getSfTypeID());

    assertEquals("fo:declarations",getNopText(field));

    field=parser.readNextStructuredField();

    assertEquals(0xD3A8AD,field.getSfTypeID());

    field=parser.readNextStructuredField();

    assertEquals(0xD3EEEE,field.getSfTypeID());

    assertEquals("fo:page-sequence: start",getNopText(field));

    field=parser.readNextStructuredField();

    assertEquals(0xD3EEEE,field.getSfTypeID());

    assertEquals("fo:page-sequence: end",getNopText(field));

    field=parser.readNextStructuredField();

    assertEquals(0xD3A8AF,field.getSfTypeID());

    field=skipTo(parser,0xD3A9C9);

    field=parser.readNextStructuredField();

    assertEquals(0xD3EEEE,field.getSfTypeID());

    assertEquals("fo:simple-page-master: first",getNopText(field));

    field=skipTo(parser,0xD3A9C9);

    field=parser.readNextStructuredField();

    assertEquals(0xD3EEEE,field.getSfTypeID());

    assertEquals("fo:simple-page-master: rest",getNopText(field));

  }

  finally {

    IOUtils.closeQuietly(in);

  }

  int counter=0;

  in=new java.io.FileInputStream(outputFile);

  try {

    MODCAParser parser=new MODCAParser(in);

    while (true) {

      UnparsedStructuredField field=parser.readNextStructuredField();

      if (field == null) {

        break;

      }

      if (field.getSfTypeID() == 0xD3EEEE) {

        counter++;

      }

    }

  }

  finally {

    IOUtils.closeQuietly(in);

  }

  assertEquals(6,counter);

}

