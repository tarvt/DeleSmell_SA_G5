Location: PSRendererConfigurator.java

Content: 

@Override public void configure(IFDocumentHandler documentHandler) throws FOPException {

  PSRendererConfig psConfig=(PSRendererConfig)getRendererConfig(documentHandler);

  if (psConfig != null) {

    PSDocumentHandler psDocumentHandler=(PSDocumentHandler)documentHandler;

    PSRenderingUtil psUtil=psDocumentHandler.getPSUtil();

    configure(psUtil,psConfig);

  }

}

Location: PSRendererConfigurator.java

Content: 

private void configure(PSRenderingUtil psUtil,PSRendererConfig psConfig){

  if (psConfig.isAutoRotateLandscape() != null) {

    psUtil.setAutoRotateLandscape(psConfig.isAutoRotateLandscape());

  }

  if (psConfig.getLanguageLevel() != null) {

    psUtil.setLanguageLevel(psConfig.getLanguageLevel());

  }

  if (psConfig.isOptimizeResources() != null) {

    psUtil.setOptimizeResources(psConfig.isOptimizeResources());

  }

  if (psConfig.isSafeSetPageDevice() != null) {

    psUtil.setSafeSetPageDevice(psConfig.isSafeSetPageDevice());

  }

  if (psConfig.isDscComplianceEnabled() != null) {

    psUtil.setDSCComplianceEnabled(psConfig.isDscComplianceEnabled());

  }

  if (psConfig.getRenderingMode() != null) {

    psUtil.setRenderingMode(psConfig.getRenderingMode());

  }

  if (psConfig.isAcrobatDownsample() != null) {

    psUtil.setAcrobatDownsample(psConfig.isAcrobatDownsample());

  }

}

Location: PSRendererConfigurator.java

Content: 

/** 

 * Default constructor

 * @param userAgent user agent

 */

public PSRendererConfigurator(FOUserAgent userAgent,RendererConfigParser rendererConfigParser){

  super(userAgent,rendererConfigParser);

}

