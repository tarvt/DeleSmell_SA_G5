Location: PDFDocumentInformationElementTestCase.java

Content: 

@Test(expected=LoadingException.class) public void illegalChild() throws Exception {

  Map<String,Object> expectedParams=new HashMap<String,Object>();

  expectedParams.put("offendingNode",new QName(PDFElementMapping.NAMESPACE,"dictionary"));

  runTest("invalid-child.fo",FOValidationEventProducer.class.getName() + ".invalidChild",expectedParams);

}

Location: PDFDocumentInformationElementTestCase.java

Content: 

private void runTest(String testCase,String expectedEventKey,Map<String,Object> expectedEventParams) throws Exception {

  EventChecker eventChecker=new EventChecker(expectedEventKey,expectedEventParams);

  parser.setEventListener(eventChecker);

  try {

    parser.parse(new FileInputStream("test/pdf/extensions/document-information/" + testCase));

  }

  finally {

    eventChecker.end();

  }

}

Location: PDFDocumentInformationElementTestCase.java

Content: 

@Test public void standardKeyword() throws Exception {

  Map<String,Object> expectedParams=new HashMap<String,Object>();

  expectedParams.put("keyword","Creator");

  runTest("reserved-keyword.fo",PDFExtensionEventProducer.class.getName() + ".reservedKeyword",expectedParams);

}

