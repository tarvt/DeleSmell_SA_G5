Location: KnuthPenalty.java

Content: 

/** 

 * @return the break class of this penalty (EN_AUTO, EN_COLUMN, EN_PAGE, EN_EVEN_PAGE,EN_ODD_PAGE)

 */

public int getBreakClass(){

  return breakClass;

}

Location: KnuthPenalty.java

Content: 

private static String getBreakClassName(int breakClass){

  return AbstractBreaker.getBreakClassName(breakClass);

}

Location: KnuthPenalty.java

Content: 

/** 

 * @return the penalty value of this penalty.

 */

public int getPenalty(){

  return penalty;

}

Location: KnuthPenalty.java

Content: 

/** 

 * {@inheritDoc} 

 */

public boolean isForcedBreak(){

  return penalty == -KnuthElement.INFINITE;

}

Location: KnuthPenalty.java

Content: 

/** 

 * {@inheritDoc} 

 */

public boolean isPenalty(){

  return true;

}

Location: KnuthPenalty.java

Content: 

/** 

 * @return true is this penalty is a flagged one. 

 */

public boolean isPenaltyFlagged(){

  return penaltyFlagged;

}

Location: KnuthPenalty.java

Content: 

/** 

 * Create a new KnuthPenalty.

 * @param width the width of this penalty

 * @param penalty the penalty value of this penalty

 * @param penaltyFlagged is this penalty flagged?

 * @param breakClass the break class of this penalty (one of{@link org.apache.fop.fo.Constants#EN_AUTO}, {@link org.apache.fop.fo.Constants#EN_COLUMN}, {@link org.apache.fop.fo.Constants#EN_PAGE}, {@link org.apache.fop.fo.Constants#EN_EVEN_PAGE}, {@link org.apache.fop.fo.Constants#EN_ODD_PAGE}).

 * @param pos the Position stored in this penalty

 * @param isAuxiliary is this penalty auxiliary?

 */

public KnuthPenalty(int width,int penalty,boolean penaltyFlagged,int breakClass,Position pos,boolean isAuxiliary){

  this(width,penalty,penaltyFlagged,pos,isAuxiliary);

  this.breakClass=breakClass;

}

Location: KnuthPenalty.java

Content: 

/** 

 * Create a new KnuthPenalty.

 * @param width the width of this penalty

 * @param penalty the penalty value of this penalty

 * @param penaltyFlagged is this penalty flagged?

 * @param pos the Position stored in this penalty

 * @param auxiliary is this penalty auxiliary?

 */

public KnuthPenalty(int width,int penalty,boolean penaltyFlagged,Position pos,boolean auxiliary){

  super(width,pos,auxiliary);

  this.penalty=penalty;

  this.penaltyFlagged=penaltyFlagged;

}

Location: KnuthPenalty.java

Content: 

/** 

 * Sets a new penalty value.

 * @param penalty the new penalty value

 */

public void setPenalty(int penalty){

  this.penalty=penalty;

}

