Location: PCLTTFPCLTFontTable.java

Content: 

public String getCharacterComplement(){

  return characterComplement;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public long getFontNumber(){

  return fontNumber;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public int getPitch(){

  return pitch;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public int getSerifStyle(){

  return serifStyle;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public int getStrokeWeight(){

  return strokeWeight;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public int getStyle(){

  return style;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public int getSymbolSet(){

  return symbolSet;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public String getTypeface(){

  return typeface;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public int getTypeFamily(){

  return typeFamily;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public long getVersion(){

  return version;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public int getWidthType(){

  return widthType;

}

Location: PCLTTFPCLTFontTable.java

Content: 

public PCLTTFPCLTFontTable(FontFileReader in) throws IOException {

  super(in);

  version=reader.readTTFULong();

  fontNumber=reader.readTTFULong();

  pitch=reader.readTTFUShort();

  xHeight=reader.readTTFUShort();

  style=reader.readTTFUShort();

  typeFamily=reader.readTTFUShort();

  capHeight=reader.readTTFUShort();

  symbolSet=reader.readTTFUShort();

  typeface=reader.readTTFString(16);

  characterComplement=reader.readTTFString(8);

  filename=reader.readTTFString(6);

  strokeWeight=reader.readTTFUShort();

  widthType=reader.readTTFUShort();

  serifStyle=reader.readTTFUByte();

}

