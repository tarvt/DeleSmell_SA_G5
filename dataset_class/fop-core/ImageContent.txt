Location: ImageContent.java

Content: 

public void addTile(Tile tile){

  this.tile=tile;

}

Location: ImageContent.java

Content: 

/** 

 * Helper method to return the external algorithm parameter.

 * @return byte[] The data stream.

 */

private byte[] getExternalAlgorithmParameter(){

  if (encoding == COMPID_JPEG && compression != 0) {

    final byte[] extAlgData=new byte[]{(byte)0x9F,0x00,0x10,0x00,COMPID_JPEG,0x00,0x00,0x00,compression,0x00,0x00,0x00};

    extAlgData[1]=(byte)(extAlgData.length - 2);

    return extAlgData;

  }

  return new byte[0];

}

Location: ImageContent.java

Content: 

/** 

 * Returns the (optional) IDE Structure parameter

 * @return the IDE Structure parameter or null if none is set

 */

public IDEStructureParameter getIDEStructureParameter(){

  return this.ideStructureParameter;

}

Location: ImageContent.java

Content: 

/** 

 * Helper method to return the image encoding parameter.

 * @return byte[] The data stream.

 */

private byte[] getImageEncodingParameter(){

  final byte[] encodingData=new byte[]{(byte)0x95,0x02,encoding,(byte)(encoding == COMPID_JPEG ? 0xFE : 0x01)};

  return encodingData;

}

Location: ImageContent.java

Content: 

/** 

 * Helper method to return the image encoding parameter.

 * @return byte[] The data stream.

 */

private byte[] getImageIDESizeParameter(){

  if (ideSize != 1) {

    final byte[] ideSizeData=new byte[]{(byte)0x96,0x01,ideSize};

    return ideSizeData;

  }

 else {

    return new byte[0];

  }

}

Location: ImageContent.java

Content: 

/** 

 * Main Constructor

 */

public ImageContent(){

}

Location: ImageContent.java

Content: 

/** 

 * Returns the (optional) IDE Structure parameter. If none is set an instance is prepared with defaults for a bi-level image.

 * @return the IDE Structure parameter

 */

public IDEStructureParameter needIDEStructureParameter(){

  if (this.ideStructureParameter == null) {

    setIDEStructureParameter(new IDEStructureParameter());

  }

  return getIDEStructureParameter();

}

Location: ImageContent.java

Content: 

/** 

 * Sets the IDE Structure parameter.

 * @param parameter the IDE Structure parameter

 */

public void setIDEStructureParameter(IDEStructureParameter parameter){

  this.ideStructureParameter=parameter;

}

Location: ImageContent.java

Content: 

/** 

 * Sets the image compression.

 * @param comp The image compression.

 */

public void setImageCompression(byte comp){

  this.compression=comp;

}

Location: ImageContent.java

Content: 

/** 

 * Sets the image encoding.

 * @param enc The image encoding.

 */

public void setImageEncoding(byte enc){

  this.encoding=enc;

}

Location: ImageContent.java

Content: 

/** 

 * Sets the image IDE color model.

 * @param color    the IDE color model.

 * @deprecated use {@link #setIDEStructureParameter(IDEStructureParameter)} instead

 */

@Deprecated public void setImageIDEColorModel(byte color){

  needIDEStructureParameter().setColorModel(color);

}

Location: ImageContent.java

Content: 

/** 

 * Sets the image IDE size.

 * @param s The IDE size.

 */

public void setImageIDESize(byte s){

  this.ideSize=s;

}

Location: ImageContent.java

Content: 

/** 

 * Sets the image size parameter

 * @param imageSizeParameter the image size parameter.

 */

public void setImageSizeParameter(ImageSizeParameter imageSizeParameter){

  this.imageSizeParameter=imageSizeParameter;

}

Location: ImageContent.java

Content: 

public void setTileTOC(TileTOC toc){

  this.tileTOC=toc;

}

