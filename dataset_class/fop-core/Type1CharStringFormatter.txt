Location: Type1CharStringFormatter.java

Content: 

/** 

 * Formats the given command sequence to a byte array.

 * @param sequence the given command sequence

 * @return the formatted seuqence as byte array

 */

public byte[] format(List<Object> sequence){

  output=new ByteArrayOutputStream();

  for (  Object object : sequence) {

    if (object instanceof CharStringCommand) {

      writeCommand((CharStringCommand)object);

    }

 else     if (object instanceof Number) {

      writeNumber(((Number)object).intValue());

    }

 else {

      throw new IllegalArgumentException();

    }

  }

  return output.toByteArray();

}

Location: Type1CharStringFormatter.java

Content: 

private void writeCommand(CharStringCommand command){

  int[] value=command.getKey().getValue();

  for (  int aValue : value) {

    output.write(aValue);

  }

}

Location: Type1CharStringFormatter.java

Content: 

private void writeNumber(Integer number){

  int value=number;

  if (value >= -107 && value <= 107) {

    output.write(value + 139);

  }

 else   if (value >= 108 && value <= 1131) {

    int b1=(value - 108) % 256;

    int b0=(value - 108 - b1) / 256 + 247;

    output.write(b0);

    output.write(b1);

  }

 else   if (value >= -1131 && value <= -108) {

    int b1=-((value + 108) % 256);

    int b0=-((value + 108 + b1) / 256 - 251);

    output.write(b0);

    output.write(b1);

  }

 else {

    int b1=value >>> 24 & 0xff;

    int b2=value >>> 16 & 0xff;

    int b3=value >>> 8 & 0xff;

    int b4=value >>> 0 & 0xff;

    output.write(255);

    output.write(b1);

    output.write(b2);

    output.write(b3);

    output.write(b4);

  }

}

