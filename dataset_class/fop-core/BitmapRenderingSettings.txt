Location: BitmapRenderingSettings.java

Content: 

/** 

 * Default constructor. Initializes the settings to their default values.

 */

public BitmapRenderingSettings(){

  writerParams=new ImageWriterParams();

}

Location: BitmapRenderingSettings.java

Content: 

/** 

 * Returns the BufferedImage type.

 * @return one of BufferedImage.TYPE_

 */

public int getBufferedImageType(){

  return this.bufferedImageType;

}

Location: BitmapRenderingSettings.java

Content: 

/** 

 * Returns the compression method being used by the image writer.

 * @return the compression method in use

 */

public String getCompressionMethod(){

  return writerParams.getCompressionMethod();

}

Location: BitmapRenderingSettings.java

Content: 

/** 

 * Returns the image writer parameters used for encoding the bitmap images.

 * @return the image writer parameters

 */

public ImageWriterParams getWriterParams(){

  return this.writerParams;

}

Location: BitmapRenderingSettings.java

Content: 

/** 

 * Indicates whether anti-aliasing is enabled.

 * @return true if anti-aliasing is enabled

 */

public boolean isAntiAliasingEnabled(){

  return this.antialiasing;

}

Location: BitmapRenderingSettings.java

Content: 

/** 

 * Indicates whether quality rendering is enabled.

 * @return true indicates optimization for quality, false indicates optimization for speed

 */

public boolean isQualityRenderingEnabled(){

  return this.qualityRendering;

}

Location: BitmapRenderingSettings.java

Content: 

/** 

 * Sets the type of the BufferedImage to use when preparing a new instance.

 * @param bufferedImageType a BufferImage.TYPE_* value

 */

public void setBufferedImageType(int bufferedImageType){

  this.bufferedImageType=bufferedImageType;

}

Location: BitmapRenderingSettings.java

Content: 

/** 

 * Sets the compression method for the image writer.

 * @param compressionMethod the compression method name

 */

public void setCompressionMethod(String compressionMethod){

  writerParams.setCompressionMethod(compressionMethod);

}

Location: BitmapRenderingSettings.java

Content: 

/** 

 * Controls whether to optimize rendering for speed or for quality.

 * @param quality true to optimize for quality, false to optimize for speed

 */

public void setQualityRendering(boolean quality){

  this.qualityRendering=quality;

}

Location: BitmapRenderingSettings.java

Content: 

/** 

 * Sets the resolution of the output image.

 * @param dpi the dots-per-inch of the image

 */

public void setResolution(int dpi){

  writerParams.setResolution(dpi);

}

