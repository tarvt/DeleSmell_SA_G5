Location: DigestFilterTestCase.java

Content: 

private boolean compareDigest(byte[] a,byte[] b){

  if (a.length != b.length) {

    return false;

  }

  for (int i=0; i < a.length; i++) {

    if (a[i] != b[i]) {

      return false;

    }

  }

  return true;

}

Location: DigestFilterTestCase.java

Content: 

private String digestToString(byte[] digest){

  StringBuffer buffer=new StringBuffer(2 * digest.length);

  for (  byte val : digest) {

    int hi=(val >> 4) & 0xF;

    int lo=val & 0xF;

    if (hi < 10) {

      buffer.append((char)(hi + 0x30));

    }

 else {

      buffer.append((char)(hi + 0x61 - 10));

    }

    if (lo < 10) {

      buffer.append((char)(lo + 0x30));

    }

 else {

      buffer.append((char)(lo + 0x61 - 10));

    }

  }

  return buffer.toString();

}

Location: DigestFilterTestCase.java

Content: 

private byte[] runTest(String input) throws NoSuchAlgorithmException, ParserConfigurationException, SAXException, IOException {

  XMLReader parser=parserFactory.newSAXParser().getXMLReader();

  DigestFilter digestFilter=new DigestFilter("MD5");

  digestFilter.setParent(parser);

  digestFilter.setFeature("http://xml.org/sax/features/namespaces",true);

  parser.setContentHandler(digestFilter);

  InputSource inputSource=new InputSource(new StringReader(input));

  parser.parse(inputSource);

  return digestFilter.getDigestValue();

}

Location: DigestFilterTestCase.java

Content: 

@Test public final void testAttributeOrder() throws NoSuchAlgorithmException, ParserConfigurationException, SAXException, IOException {

  byte[] sortDigest=runTest("<a a1='1' a2='2' a3='3'/>");

  byte[] permutationDigest=runTest("<a a2='2' a3='3' a1='1'/>");

  assertTrue("Sort: " + digestToString(sortDigest) + " permuted: "+ digestToString(permutationDigest),compareDigest(sortDigest,permutationDigest));

  byte[] reverseDigest=runTest("<a a3='3' a2='2' a1='1'/>");

  assertTrue("Sort: " + digestToString(sortDigest) + " permuted: "+ digestToString(reverseDigest),compareDigest(sortDigest,reverseDigest));

}

Location: DigestFilterTestCase.java

Content: 

@Test public final void testLineFeed() throws NoSuchAlgorithmException, ParserConfigurationException, SAXException, IOException {

  byte[] lfDigest=runTest("<a>\n</a>");

  byte[] crlfDigest=runTest("<a>\r\n</a>");

  assertTrue("LF: " + digestToString(lfDigest) + " CRLF: "+ digestToString(crlfDigest),compareDigest(lfDigest,crlfDigest));

}

Location: DigestFilterTestCase.java

Content: 

@Test public final void testNamespacePrefix() throws NoSuchAlgorithmException, ParserConfigurationException, SAXException, IOException {

  byte[] prefix1Digest=runTest("<a:a xmlns:a='foo'/>");

  byte[] prefix2Digest=runTest("<b:a xmlns:b='foo'/>");

  assertTrue("prefix1: " + digestToString(prefix1Digest) + " prefix2: "+ digestToString(prefix2Digest),compareDigest(prefix1Digest,prefix2Digest));

}

