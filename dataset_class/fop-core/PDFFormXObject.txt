Location: PDFFormXObject.java

Content: 

/** 

 * Returns the bounding box.

 * @return the BBox value

 */

public Rectangle2D getBBox(){

  PDFArray array=(PDFArray)get("BBox");

  if (array != null) {

    Rectangle2D rect=new Rectangle2D.Double();

    double x=((Number)array.get(0)).doubleValue();

    double y=((Number)array.get(1)).doubleValue();

    double w=((Number)array.get(2)).doubleValue();

    double h=((Number)array.get(3)).doubleValue();

    rect.setFrame(x,y,w,h);

    return rect;

  }

 else {

    return null;

  }

}

Location: PDFFormXObject.java

Content: 

/** 

 * create a FormXObject with the given number and name and load the image in the object

 * @param xnumber the pdf object X number

 * @param contents the form's contents

 * @param resources the resource PDF reference

 */

public PDFFormXObject(int xnumber,PDFStream contents,PDFReference resources){

  super(contents.getDictionary());

  put("Name",new PDFName("Form" + xnumber));

  this.contents=contents;

  put("Type",new PDFName("XObject"));

  put("Subtype",new PDFName("Form"));

  put("FormType",1);

  setMatrix(new AffineTransform());

  if (resources != null) {

    put("Resources",resources);

  }

}

Location: PDFFormXObject.java

Content: 

/** 

 * Sets the bounding box of the Form XObject.

 * @param bbox the bounding box

 */

public void setBBox(Rectangle2D bbox){

  PDFArray array=(PDFArray)get("BBox");

  if (array == null) {

    array=new PDFArray(this);

    array.add(bbox.getX());

    array.add(bbox.getY());

    array.add(bbox.getWidth());

    array.add(bbox.getHeight());

    put("BBox",array);

  }

 else {

    array.set(0,bbox.getX());

    array.set(1,bbox.getY());

    array.set(2,bbox.getWidth());

    array.set(3,bbox.getHeight());

  }

}

Location: PDFFormXObject.java

Content: 

/** 

 * Sets the Matrix value

 * @param at the AffineTransform defining the transformation matrix

 */

public void setMatrix(AffineTransform at){

  PDFArray array=(PDFArray)get("Matrix");

  double[] m=new double[6];

  at.getMatrix(m);

  if (array == null) {

    array=new PDFArray(this);

    array.add(m[0]);

    array.add(m[1]);

    array.add(m[2]);

    array.add(m[3]);

    array.add(m[4]);

    array.add(m[5]);

    put("Matrix",array);

  }

 else {

    array.set(0,m[0]);

    array.set(1,m[1]);

    array.set(2,m[2]);

    array.set(3,m[3]);

    array.set(4,m[4]);

    array.set(5,m[5]);

  }

}

