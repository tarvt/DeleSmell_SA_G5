Location: CharactersetEncoderTestCase.java

Content: 

/** 

 * Tests canEncode() - tests that canEncode() responds properly to various input characters.

 */

@Test public void testCanEncode(){

  for (char c='!'; c < '~'; c++) {

    assertTrue(singlebyteEncoder.canEncode(c));

    assertTrue(doublebyteEncoder.canEncode(c));

  }

  for (  char c : testCJKText.toCharArray()) {

    assertFalse(singlebyteEncoder.canEncode(c));

    assertTrue(doublebyteEncoder.canEncode(c));

  }

  assertFalse(doublebyteEncoder.canEncode('\u00BB'));

}

Location: CharactersetEncoderTestCase.java

Content: 

@Test public void testEncode() throws CharacterCodingException, IOException {

  CharactersetEncoder.EncodedChars encChars;

  ByteArrayOutputStream bOut=new ByteArrayOutputStream();

  encChars=singlebyteEncoder.encode(testEngText);

  encChars.writeTo(bOut,0,encChars.getLength());

  byte[] engBytes=bOut.toByteArray();

  for (int i=0; i < testEngChars.length; i++) {

    assertEquals(testEngChars[i],engBytes[i]);

  }

  assertEquals(testEngChars.length,engBytes.length);

}

