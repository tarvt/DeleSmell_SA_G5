Location: CorrespondingPropertyMaker.java

Content: 

/** 

 * Construct a corresponding property maker.

 * @param baseMaker the base property maker

 */

public CorrespondingPropertyMaker(PropertyMaker baseMaker){

  this.baseMaker=baseMaker;

  baseMaker.setCorresponding(this);

}

Location: CorrespondingPropertyMaker.java

Content: 

/** 

 * Return the property list to use for fetching writing mode depending property ids.

 * @param pList a property list

 * @return the property list to use

 */

protected PropertyList getWMPropertyList(PropertyList pList){

  if (useParent) {

    return pList.getParentPropertyList();

  }

 else {

    return pList;

  }

}

Location: CorrespondingPropertyMaker.java

Content: 

/** 

 * Set corresponding property identifiers.

 * @param lrtb the property that corresponds with lr-tb writing mode

 * @param rltb the property that corresponds with rl-tb writing mode

 * @param tbrl the property that corresponds with tb-lr writing mode

 * @param tblr the property that corresponds with tb-lr writing mode

 */

public void setCorresponding(int lrtb,int rltb,int tbrl,int tblr){

  this.lrtb=lrtb;

  this.rltb=rltb;

  this.tbrl=tbrl;

  this.tblr=tblr;

}

Location: CorrespondingPropertyMaker.java

Content: 

/** 

 * Set relative flag.

 * @param relative true if properties operate on a relative direction

 */

public void setRelative(boolean relative){

  this.relative=relative;

}

Location: CorrespondingPropertyMaker.java

Content: 

/** 

 * Controls whether the PropertyMaker accesses the parent property list or the current property list for determining the writing mode.

 * @param useParent true if the parent property list should be used.

 */

public void setUseParent(boolean useParent){

  this.useParent=useParent;

}

