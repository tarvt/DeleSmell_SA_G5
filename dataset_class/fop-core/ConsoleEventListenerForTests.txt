Location: ConsoleEventListenerForTests.java

Content: 

/** 

 * Creates a new event listener with console output on severity INFO. This object will write out the name of the test before the first log message.

 * @param name the name of the test

 */

public ConsoleEventListenerForTests(String name){

  this(name,EventSeverity.INFO);

}

Location: ConsoleEventListenerForTests.java

Content: 

/** 

 * Creates a new event listener with console output. This object will write out the name of the test before the first log message.

 * @param name the name of the test

 * @param logLevel the logging level

 */

public ConsoleEventListenerForTests(String name,EventSeverity logLevel){

  this.name=name;

  this.logLevel=logLevel;

}

Location: ConsoleEventListenerForTests.java

Content: 

private void log(String levelString,Event event){

  if (this.name != null) {

    System.out.println("Test: " + this.name);

    this.name=null;

  }

  String msg=EventFormatter.format(event);

  System.out.println("  [" + levelString + "] "+ msg);

}

Location: ConsoleEventListenerForTests.java

Content: 

/** 

 * {@inheritDoc} 

 */

public void processEvent(Event event){

  EventSeverity severity=event.getSeverity();

  if (severity == EventSeverity.FATAL) {

    log("FATAL",event);

    return;

  }

  if (logLevel == EventSeverity.FATAL) {

    return;

  }

  if (severity == EventSeverity.ERROR) {

    log("ERROR",event);

    return;

  }

  if (logLevel == EventSeverity.ERROR) {

    return;

  }

  if (severity == EventSeverity.WARN) {

    log("WARN ",event);

  }

  if (logLevel == EventSeverity.WARN) {

    return;

  }

  if (severity == EventSeverity.INFO) {

    log("INFO ",event);

  }

}

