Location: OFMtxEntry.java

Content: 

/** 

 * Returns the boundingBox.

 * @return int[]

 */

public int[] getBoundingBox(){

  return boundingBox;

}

Location: OFMtxEntry.java

Content: 

/** 

 * Returns the found.

 * @return byte

 */

public byte getFound(){

  return found;

}

Location: OFMtxEntry.java

Content: 

/** 

 * Returns a String representation of the index taking into account if the index is in the reserved range.

 * @return index as String

 */

public String getIndexAsString(){

  if (isIndexReserved()) {

    return Integer.toString(getIndex()) + " (reserved)";

  }

 else {

    return Integer.toString(getIndex());

  }

}

Location: OFMtxEntry.java

Content: 

/** 

 * Returns the lsb.

 * @return int

 */

public int getLsb(){

  return lsb;

}

Location: OFMtxEntry.java

Content: 

/** 

 * Returns the unicodeIndex.

 * @return List

 */

public List<Integer> getUnicodeIndex(){

  return unicodeIndex;

}

Location: OFMtxEntry.java

Content: 

/** 

 * Determines whether this index represents a reserved character.

 * @return True if it is reserved

 */

public boolean isIndexReserved(){

  return (getIndex() >= 32768) && (getIndex() <= 65535);

}

Location: OFMtxEntry.java

Content: 

/** 

 * Sets the boundingBox.

 * @param boundingBox The boundingBox to set

 */

public void setBoundingBox(int[] boundingBox){

  this.boundingBox=boundingBox;

}

Location: OFMtxEntry.java

Content: 

/** 

 * Sets the found.

 * @param found The found to set

 */

public void setFound(byte found){

  this.found=found;

}

Location: OFMtxEntry.java

Content: 

/** 

 * Sets the lsb.

 * @param lsb The lsb to set

 */

public void setLsb(int lsb){

  this.lsb=lsb;

}

Location: OFMtxEntry.java

Content: 

/** 

 * Sets the offset.

 * @param offset The offset to set

 */

public void setOffset(long offset){

  this.offset=offset;

}

Location: OFMtxEntry.java

Content: 

/** 

 * Sets the wx.

 * @param wx The wx to set

 */

public void setWx(int wx){

  this.wx=wx;

}

Location: OFMtxEntry.java

Content: 

/** 

 * Returns a String representation of this object.

 * @param t TTFFile to use for unit conversion

 * @return String String representation

 */

public String toString(TTFFile t){

  return "Glyph " + name + " index: "+ getIndexAsString()+ " bbox ["+ t.convertTTFUnit2PDFUnit(boundingBox[0])+ " "+ t.convertTTFUnit2PDFUnit(boundingBox[1])+ " "+ t.convertTTFUnit2PDFUnit(boundingBox[2])+ " "+ t.convertTTFUnit2PDFUnit(boundingBox[3])+ "] wx: "+ t.convertTTFUnit2PDFUnit(wx);

}

