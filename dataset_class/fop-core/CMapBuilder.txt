Location: CMapBuilder.java

Content: 

/** 

 * Construct cmap builder.

 * @param writer a writer

 * @param name a name

 */

public CMapBuilder(Writer writer,String name){

  this.writer=writer;

  this.name=name;

}

Location: CMapBuilder.java

Content: 

/** 

 * @throws IOException if i/o exception 

 */

protected void writeBFEntries() throws IOException {

}

Location: CMapBuilder.java

Content: 

/** 

 * @throws IOException if i/o exception 

 */

protected void writeCIDInit() throws IOException {

  writer.write("/CIDInit /ProcSet findresource begin\n");

  writer.write("12 dict begin\n");

  writer.write("begincmap\n");

}

Location: CMapBuilder.java

Content: 

/** 

 * @throws IOException if i/o exception 

 */

protected void writeCIDRange() throws IOException {

  writer.write("1 begincidrange\n");

  writer.write("<0000> <FFFF> 0\n");

  writer.write("endcidrange\n");

}

Location: CMapBuilder.java

Content: 

/** 

 * @throws IOException if i/o exception 

 */

protected void writeCIDSystemInfo() throws IOException {

  writeCIDSystemInfo("Adobe","Identity",0);

}

Location: CMapBuilder.java

Content: 

/** 

 * @param registry string

 * @param ordering string

 * @param supplement string

 * @throws IOException if i/o exception

 */

protected void writeCIDSystemInfo(String registry,String ordering,int supplement) throws IOException {

  writer.write("/CIDSystemInfo 3 dict dup begin\n");

  writer.write("  /Registry (");

  writer.write(registry);

  writer.write(") def\n");

  writer.write("  /Ordering (");

  writer.write(ordering);

  writer.write(") def\n");

  writer.write("  /Supplement ");

  writer.write(Integer.toString(supplement));

  writer.write(" def\n");

  writer.write("end def\n");

}

Location: CMapBuilder.java

Content: 

/** 

 * Writes the CMap to a Writer.

 * @throws IOException if an I/O error occurs

 */

public void writeCMap() throws IOException {

  writePreStream();

  writeStreamComments();

  writeCIDInit();

  writeCIDSystemInfo();

  writeVersion("1");

  writeType("1");

  writeName(name);

  writeCodeSpaceRange();

  writeCIDRange();

  writeBFEntries();

  writeWrapUp();

  writeStreamAfterComments();

  writeUseCMap();

}

Location: CMapBuilder.java

Content: 

/** 

 * @throws IOException if i/o exception 

 */

protected void writeCodeSpaceRange() throws IOException {

  writeCodeSpaceRange(false);

}

Location: CMapBuilder.java

Content: 

/** 

 * @param singleByte true if single byte range

 * @throws IOException if i/o exception

 */

protected void writeCodeSpaceRange(boolean singleByte) throws IOException {

  writer.write("1 begincodespacerange\n");

  if (singleByte) {

    writer.write("<00> <FF>\n");

  }

 else {

    writer.write("<0000> <FFFF>\n");

  }

  writer.write("endcodespacerange\n");

}

Location: CMapBuilder.java

Content: 

/** 

 * @param name a name

 * @throws IOException if i/o exception

 */

protected void writeName(String name) throws IOException {

  writer.write("/CMapName /");

  writer.write(name);

  writer.write(" def\n");

}

Location: CMapBuilder.java

Content: 

/** 

 * @throws IOException if i/o exception 

 */

protected void writePreStream() throws IOException {

}

Location: CMapBuilder.java

Content: 

/** 

 * @throws IOException if i/o exception 

 */

protected void writeStreamAfterComments() throws IOException {

  writer.write("%%EndResource\n");

  writer.write("%%EOF\n");

}

Location: CMapBuilder.java

Content: 

/** 

 * @throws IOException if i/o exception 

 */

protected void writeStreamComments() throws IOException {

  writer.write("%!PS-Adobe-3.0 Resource-CMap\n");

  writer.write("%%DocumentNeededResources: ProcSet (CIDInit)\n");

  writer.write("%%IncludeResource: ProcSet (CIDInit)\n");

  writer.write("%%BeginResource: CMap (" + name + ")\n");

  writer.write("%%EndComments\n");

}

Location: CMapBuilder.java

Content: 

/** 

 * @param type a type

 * @throws IOException if i/o exception

 */

protected void writeType(String type) throws IOException {

  writer.write("/CMapType ");

  writer.write(type);

  writer.write(" def\n");

}

Location: CMapBuilder.java

Content: 

/** 

 * does nothing  

 */

protected void writeUseCMap(){

}

Location: CMapBuilder.java

Content: 

/** 

 * @param version a version

 * @throws IOException if i/o exception

 */

protected void writeVersion(String version) throws IOException {

  writer.write("/CMapVersion ");

  writer.write(version);

  writer.write(" def\n");

}

Location: CMapBuilder.java

Content: 

/** 

 * @throws IOException if i/o exception 

 */

protected void writeWrapUp() throws IOException {

  writer.write("endcmap\n");

  writer.write("CMapName currentdict /CMap defineresource pop\n");

  writer.write("end\n");

  writer.write("end\n");

}

