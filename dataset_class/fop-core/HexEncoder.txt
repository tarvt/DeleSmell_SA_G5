Location: HexEncoder.java

Content: 

/** 

 * Returns an hex encoding of the given character as: <ul> <li>4-character string in case of non-BMP character</li> <li>6-character string in case of BMP character</li> </ul>

 * @param c a character

 * @return an hex-encoded representation of the character

 */

public static String encode(int c){

  if (CharUtilities.isBmpCodePoint(c)) {

    return encode(c,4);

  }

 else {

    return encode(c,6);

  }

}

Location: HexEncoder.java

Content: 

/** 

 * Returns an hex encoding of the given number as a string of the given length, left-padded with zeros if necessary.

 * @param n a number

 * @param width required length of the string

 * @return an hex-encoded representation of the number

 */

public static String encode(int n,int width){

  char[] digits=new char[width];

  for (int i=width - 1; i >= 0; i--) {

    int digit=n & 0xF;

    digits[i]=(char)(digit < 10 ? '0' + digit : 'A' + digit - 10);

    n>>=4;

  }

  return new String(digits);

}

Location: HexEncoder.java

Content: 

private HexEncoder(){

}

