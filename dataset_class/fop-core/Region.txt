Location: Region.java

Content: 

/** 

 * {@inheritDoc} 

 */

public boolean generatesReferenceAreas(){

  return true;

}

Location: Region.java

Content: 

/** 

 * @return the display-align FO trait. 

 */

public int getDisplayAlign(){

  return displayAlign;

}

Location: Region.java

Content: 

/** 

 * @return the "overflow" FO trait. 

 */

public int getOverflow(){

  return overflow;

}

Location: Region.java

Content: 

/** 

 * Get the page-width context

 * @param lengthBase    the lengthBase to use for resolving percentages

 * @return  context for the width of the page-reference-area

 */

protected PercentBaseContext getPageHeightContext(int lengthBase){

  return layoutMaster.getPageHeightContext(lengthBase);

}

Location: Region.java

Content: 

/** 

 * Get the page-width context

 * @param lengthBase    the lengthBase to use for resolving percentages

 * @return  context for the width of the page-reference-area

 */

protected PercentBaseContext getPageWidthContext(int lengthBase){

  return layoutMaster.getPageWidthContext(lengthBase);

}

Location: Region.java

Content: 

/** 

 * @return the "reference-orientation" FO trait. 

 */

public int getReferenceOrientation(){

  return referenceOrientation.getValue();

}

Location: Region.java

Content: 

/** 

 * @return the "region-name" FO trait. 

 */

public String getRegionName(){

  return regionName;

}

Location: Region.java

Content: 

/** 

 * Returns a sibling region for this region.

 * @param regionId the Constants ID of the FO representing the region

 * @return the requested region

 */

protected Region getSiblingRegion(int regionId){

  return layoutMaster.getRegion(regionId);

}

Location: Region.java

Content: 

/** 

 * Checks to see if a given region name is one of the reserved names

 * @param name a region name to check

 * @return true if the name parameter is a reserved region name

 */

protected boolean isReserved(String name){

  return (name.equals("xsl-region-before") || name.equals("xsl-region-start") || name.equals("xsl-region-end")|| name.equals("xsl-region-after")|| name.equals("xsl-before-float-separator")|| name.equals("xsl-footnote-separator"));

}

Location: Region.java

Content: 

/** 

 * Base constructor

 * @param parent {@link FONode} that is the parent of this object

 */

protected Region(FONode parent){

  super(parent);

  layoutMaster=(SimplePageMaster)parent;

}

