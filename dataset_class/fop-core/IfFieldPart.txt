Location: IfFieldPart.java

Content: 

/** 

 * Creates a new "if" field part.

 * @param fieldName the field name

 * @param values the unparsed parameter values

 */

public IfFieldPart(String fieldName,String values){

  this.fieldName=fieldName;

  parseValues(values);

}

Location: IfFieldPart.java

Content: 

/** 

 * {@inheritDoc} 

 */

public boolean isGenerated(Map params){

  return isTrue(params) || (elseValue != null);

}

Location: IfFieldPart.java

Content: 

/** 

 * Indicates whether the field's value is true. If the field is not a boolen, it is true if the field is not null.

 * @param params the message parameters

 * @return true the field's value as boolean

 */

protected boolean isTrue(Map params){

  Object obj=params.get(fieldName);

  if (obj instanceof Boolean) {

    return (Boolean)obj;

  }

 else {

    return (obj != null);

  }

}

Location: IfFieldPart.java

Content: 

/** 

 * Parses the parameter values

 * @param values the unparsed parameter values

 */

protected void parseValues(String values){

  String[] parts=AdvancedMessageFormat.COMMA_SEPARATOR_REGEX.split(values,2);

  if (parts.length == 2) {

    ifValue=AdvancedMessageFormat.unescapeComma(parts[0]);

    elseValue=AdvancedMessageFormat.unescapeComma(parts[1]);

  }

 else {

    ifValue=AdvancedMessageFormat.unescapeComma(values);

  }

}

Location: IfFieldPart.java

Content: 

/** 

 * {@inheritDoc} 

 */

public void write(StringBuffer sb,Map params){

  boolean isTrue=isTrue(params);

  if (isTrue) {

    sb.append(ifValue);

  }

 else   if (elseValue != null) {

    sb.append(elseValue);

  }

}

