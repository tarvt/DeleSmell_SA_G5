Location: AbstractBitmapDocumentHandler.java

Content: 

/** 

 * Default constructor.

 */

public AbstractBitmapDocumentHandler(IFContext context){

  super(context);

  int dpi=Math.round(context.getUserAgent().getTargetResolution());

  getSettings().setResolution(dpi);

  Map renderingOptions=getUserAgent().getRendererOptions();

  setTargetBitmapSize((Dimension)renderingOptions.get(TARGET_BITMAP_SIZE));

}

Location: AbstractBitmapDocumentHandler.java

Content: 

/** 

 * Returns the default file extension for the supported image type.

 * @return the default file extension (ex. "png")

 */

public abstract String getDefaultExtension();

Location: AbstractBitmapDocumentHandler.java

Content: 

/** 

 * Returns the settings for bitmap rendering.

 * @return the settings object

 */

public BitmapRenderingSettings getSettings(){

  return this.bitmapSettings;

}

Location: AbstractBitmapDocumentHandler.java

Content: 

/** 

 * Sets the target bitmap size (in pixels) of the bitmap that should be produced. Normally, the bitmap size is calculated automatically based on the page size and the target resolution. But for example, if you want to create thumbnails or small preview bitmaps from pages it is more practical (and efficient) to set the required bitmap size.

 * @param size the target bitmap size (in pixels)

 */

public void setTargetBitmapSize(Dimension size){

  this.targetBitmapSize=size;

}

