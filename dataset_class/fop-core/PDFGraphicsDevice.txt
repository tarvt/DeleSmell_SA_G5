Location: PDFGraphicsDevice.java

Content: 

/** 

 * Ignore template and return the only config we have

 * @param gct the template configuration

 * @return the best configuration which is the only one

 */

public GraphicsConfiguration getBestConfiguration(GraphicsConfigTemplate gct){

  return gc;

}

Location: PDFGraphicsDevice.java

Content: 

/** 

 * Return an array of our one GraphicsConfig

 * @return an array containing the one graphics configuration

 */

public GraphicsConfiguration[] getConfigurations(){

  return new GraphicsConfiguration[]{gc};

}

Location: PDFGraphicsDevice.java

Content: 

/** 

 * Return out sole GraphicsConfig.

 * @return the graphics configuration that created this object

 */

public GraphicsConfiguration getDefaultConfiguration(){

  return gc;

}

Location: PDFGraphicsDevice.java

Content: 

/** 

 * Generate an IdString..

 * @return the ID string for this device, uses toString

 */

public String getIDstring(){

  return toString();

}

Location: PDFGraphicsDevice.java

Content: 

/** 

 * Let the caller know that we are "a printer"

 * @return the type which is always printer

 */

public int getType(){

  return GraphicsDevice.TYPE_PRINTER;

}

Location: PDFGraphicsDevice.java

Content: 

/** 

 * Create a new PDF graphics device.

 * @param gc The graphics configuration we should reference

 */

PDFGraphicsDevice(PDFGraphicsConfiguration gc){

  this.gc=gc;

}

