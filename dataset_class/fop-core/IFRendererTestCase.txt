Location: IFRendererTestCase.java

Content: 

private void foToOutput(InputStream fo) throws FOPException, TransformerException {

  FopFactoryBuilder fopFactoryBuilder=new FopFactoryBuilder(new File(".").toURI());

  fopFactoryBuilder.setAccessibility(true);

  FopFactory fopFactory=fopFactoryBuilder.build();

  FOUserAgent userAgent=fopFactory.newFOUserAgent();

  IFRenderer ifRenderer=new IFRenderer(userAgent){

    protected void renderWord(    WordArea word){

      wordAreas.add(word);

      super.renderWord(word);

    }

  }

;

  userAgent.setRendererOverride(ifRenderer);

  Fop fop=fopFactory.newFop("application/pdf",userAgent,new ByteArrayOutputStream());

  Transformer transformer=TransformerFactory.newInstance().newTransformer();

  Source src=new StreamSource(fo);

  Result res=new SAXResult(fop.getDefaultHandler());

  transformer.transform(src,res);

}

Location: IFRendererTestCase.java

Content: 

@Test public void testWordSpace() throws FOPException, TransformerException {

  String fo="<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n" + "  <fo:layout-master-set>\n" + "    <fo:simple-page-master master-name=\"simple\" page-height=\"27.9cm\" page-width=\"21.6cm\">\n"+ "      <fo:region-body />\n"+ "    </fo:simple-page-master>\n"+ "  </fo:layout-master-set>\n"+ "  <fo:page-sequence master-reference=\"simple\">\n"+ "    <fo:flow flow-name=\"xsl-region-body\">\n"+ "      <fo:block>test test</fo:block>\n"+ "    </fo:flow>\n"+ "  </fo:page-sequence>\n"+ "</fo:root>";

  foToOutput(new ByteArrayInputStream(fo.getBytes()));

  Assert.assertTrue(wordAreas.get(0).isNextIsSpace());

  Assert.assertFalse(wordAreas.get(1).isNextIsSpace());

}

