Location: AbstractRendererConfigParserTester.java

Content: 

public AbstractRendererConfigParserTester(RendererConfigParser configBuilder,Class<B> type){

  this.configBuilder=configBuilder;

  this.type=type;

}

Location: AbstractRendererConfigParserTester.java

Content: 

protected B createRenderer(Class<B> type){

  builder=new FopConfBuilder().setStrictValidation(true).startRendererConfig(type);

  return builder;

}

Location: AbstractRendererConfigParserTester.java

Content: 

protected void parseConfig() throws Exception {

  parseConfig(createRenderer());

}

Location: AbstractRendererConfigParserTester.java

Content: 

protected void parseConfig(B rendererConfBuilder) throws Exception {

  DefaultConfigurationBuilder cfgBuilder=new DefaultConfigurationBuilder();

  Configuration cfg=cfgBuilder.build(rendererConfBuilder.endRendererConfig().build()).getChild("renderers").getChild("renderer");

  FOUserAgent userAgent=mock(FOUserAgent.class);

  when(userAgent.validateStrictly()).thenReturn(true);

  FontManager fontManager=mock(FontManager.class);

  when(userAgent.getFontManager()).thenReturn(fontManager);

  when(userAgent.getEventBroadcaster()).thenReturn(new DefaultEventBroadcaster());

  conf=(C)configBuilder.build(userAgent,cfg);

}

