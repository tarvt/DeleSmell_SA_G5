Location: XMLFontMetricsReader.java

Content: 

private void createFont(InputSource source) throws FOPException {

  XMLReader parser=null;

  try {

    final SAXParserFactory factory=javax.xml.parsers.SAXParserFactory.newInstance();

    factory.setNamespaceAware(true);

    parser=factory.newSAXParser().getXMLReader();

  }

 catch (  Exception e) {

    throw new FOPException(e);

  }

  if (parser == null) {

    throw new FOPException("Unable to create SAX parser");

  }

  try {

    parser.setFeature("http://xml.org/sax/features/namespace-prefixes",false);

  }

 catch (  SAXException e) {

    throw new FOPException("You need a SAX parser which supports SAX version 2",e);

  }

  parser.setContentHandler(this);

  try {

    parser.parse(source);

  }

 catch (  SAXException e) {

    throw new FOPException(e);

  }

catch (  IOException e) {

    throw new FOPException(e);

  }

}

Location: XMLFontMetricsReader.java

Content: 

/** 

 * Sets the path to embed a font. A null value disables font embedding.

 * @param path URI for the embeddable file

 */

public void setFontEmbedURI(URI path){

  returnFont.setEmbedURI(path);

}

Location: XMLFontMetricsReader.java

Content: 

/** 

 * Construct a XMLFontMetricsReader object from a path to a metric.xml file and read metric data

 * @param source Source of the font metric file

 * @throws FOPException if loading the font fails

 */

public XMLFontMetricsReader(InputSource source,InternalResourceResolver resourceResolver) throws FOPException {

  this.resourceResolver=resourceResolver;

  createFont(source);

}

