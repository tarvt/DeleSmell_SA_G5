Location: RegionBA.java

Content: 

/** 

 * Adjust the viewport reference rectangle for a region as a function of precedence. If precedence is false on a before or after region, its inline-progression-dimension is limited by the extent of the start and end regions if they are present.

 * @param vpRefRect viewport reference rectangle

 * @param wm writing mode

 * @param siblingContext the context to use to resolve extent on siblings

 */

protected void adjustIPD(Rectangle vpRefRect,WritingMode wm,PercentBaseContext siblingContext){

  int offset=0;

  RegionStart start=(RegionStart)getSiblingRegion(FO_REGION_START);

  if (start != null) {

    offset=start.getExtent().getValue(siblingContext);

    vpRefRect.translate(offset,0);

  }

  RegionEnd end=(RegionEnd)getSiblingRegion(FO_REGION_END);

  if (end != null) {

    offset+=end.getExtent().getValue(siblingContext);

  }

  if (offset > 0) {

    if (wm == WritingMode.LR_TB || wm == WritingMode.RL_TB) {

      vpRefRect.width-=offset;

    }

 else {

      vpRefRect.height-=offset;

    }

  }

}

Location: RegionBA.java

Content: 

/** 

 * Create a RegionBA instance that is a child of the given parent  {@link FONode}.

 * @param parent    the {@link FONode} that is to be the parent

 */

protected RegionBA(FONode parent){

  super(parent);

}

