Location: AbstractImageHandlerGraphics2D.java

Content: 

/** 

 * Paints the image to a BufferedImage and returns that.

 * @param painter the painter which will paint the actual image

 * @param targetDimension the target dimensions of the image to be converted to a bitmap

 * @param resolution the requested bitmap resolution

 * @param gray true if the generated image should be in grayscales

 * @param withAlpha true if an alpha channel should be created

 * @return the generated BufferedImage

 */

protected BufferedImage paintToBufferedImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter painter,Dimension targetDimension,int resolution,boolean gray,boolean withAlpha){

  int bmw=(int)Math.ceil(UnitConv.mpt2px(targetDimension.getWidth(),resolution));

  int bmh=(int)Math.ceil(UnitConv.mpt2px(targetDimension.getHeight(),resolution));

  BufferedImage bi;

  if (gray) {

    if (withAlpha) {

      bi=createGrayBufferedImageWithAlpha(bmw,bmh);

    }

 else {

      bi=new BufferedImage(bmw,bmh,BufferedImage.TYPE_BYTE_GRAY);

    }

  }

 else {

    if (withAlpha) {

      bi=new BufferedImage(bmw,bmh,BufferedImage.TYPE_INT_ARGB);

    }

 else {

      bi=new BufferedImage(bmw,bmh,BufferedImage.TYPE_INT_RGB);

    }

  }

  Graphics2D g2d=bi.createGraphics();

  try {

    g2d.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS,RenderingHints.VALUE_FRACTIONALMETRICS_ON);

    setRenderingHintsForBufferedImage(g2d);

    g2d.setBackground(Color.white);

    g2d.setColor(Color.black);

    if (!withAlpha) {

      g2d.clearRect(0,0,bmw,bmh);

    }

    double sx=(double)bmw / targetDimension.getWidth();

    double sy=(double)bmh / targetDimension.getHeight();

    g2d.scale(sx,sy);

    Rectangle2D area=new Rectangle2D.Double(0.0,0.0,targetDimension.getWidth(),targetDimension.getHeight());

    painter.paint(g2d,area);

  }

  finally {

    g2d.dispose();

  }

  return bi;

}

