Location: AFPForeignAttributeReader.java

Content: 

/** 

 * Main constructor

 */

public AFPForeignAttributeReader(){

}

Location: AFPForeignAttributeReader.java

Content: 

/** 

 * Returns the resource information

 * @param foreignAttributes the foreign attributes

 * @return the resource information

 */

public AFPResourceInfo getResourceInfo(Map<QName,String> foreignAttributes){

  AFPResourceInfo resourceInfo=new AFPResourceInfo();

  if (foreignAttributes != null && !foreignAttributes.isEmpty()) {

    String resourceName=foreignAttributes.get(RESOURCE_NAME);

    if (resourceName != null) {

      resourceInfo.setName(resourceName);

    }

    AFPResourceLevel level=getResourceLevel(foreignAttributes);

    if (level != null) {

      resourceInfo.setLevel(level);

    }

  }

  return resourceInfo;

}

Location: AFPForeignAttributeReader.java

Content: 

/** 

 * Returns the resource level

 * @param foreignAttributes the foreign attributes

 * @return the resource level

 */

public AFPResourceLevel getResourceLevel(Map<QName,String> foreignAttributes){

  AFPResourceLevel resourceLevel=null;

  if (foreignAttributes != null && !foreignAttributes.isEmpty()) {

    if (foreignAttributes.containsKey(RESOURCE_LEVEL)) {

      String levelString=foreignAttributes.get(RESOURCE_LEVEL);

      resourceLevel=AFPResourceLevel.valueOf(levelString);

      if (resourceLevel != null && resourceLevel.isExternal()) {

        String resourceGroupUri=foreignAttributes.get(RESOURCE_GROUP_URI);

        if (resourceGroupUri == null) {

          String msg=RESOURCE_GROUP_URI + " not specified";

          throw new UnsupportedOperationException(msg);

        }

        resourceLevel.setExternalUri(URI.create(resourceGroupUri));

      }

    }

  }

  return resourceLevel;

}

