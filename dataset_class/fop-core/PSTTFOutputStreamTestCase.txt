Location: PSTTFOutputStreamTestCase.java

Content: 

/** 

 * Assigns an OutputStream to the PSGenerator.

 */

@Before public void setUp(){

  gen=mock(PSGenerator.class);

  out=new PSTTFOutputStream(gen);

}

Location: PSTTFOutputStreamTestCase.java

Content: 

/** 

 * Test endFontStream()

 * @exception IOException write error.

 */

@Test public void testEndFontStream() throws IOException {

  out.endFontStream();

  verify(gen).writeln("] def");

}

Location: PSTTFOutputStreamTestCase.java

Content: 

/** 

 * Test getGlyphOutputStream() - we need to test that the inheritance model is properly obeyed.

 */

@Test public void testGetGlyphOutputStream(){

  TTFGlyphOutputStream glyphOut=out.getGlyphOutputStream();

  assertTrue(glyphOut instanceof PSTTFGlyphOutputStream);

}

Location: PSTTFOutputStreamTestCase.java

Content: 

/** 

 * Test getTableOutputStream() - we need to test that the inheritance model is properly obeyed.

 */

@Test public void testGetTableOutputStream(){

  TTFTableOutputStream tableOut=out.getTableOutputStream();

  assertTrue(tableOut instanceof PSTTFTableOutputStream);

}

Location: PSTTFOutputStreamTestCase.java

Content: 

/** 

 * Test startFontStream() - Just tests that the font is properly initiated in the PostScript document (in this case with "/sfnts[")

 * @throws IOException write exception.

 */

@Test public void testStartFontStream() throws IOException {

  out.startFontStream();

  verify(gen).write("/sfnts[");

}

