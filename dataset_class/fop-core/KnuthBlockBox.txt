Location: KnuthBlockBox.java

Content: 

/** 

 * Adds the given list of Knuth elements to this box' list of elements.

 * @param list elements corresponding to a footnote body

 */

public void addElementList(List list){

  if (elementLists == null) {

    elementLists=new LinkedList();

  }

  elementLists.add(list);

}

Location: KnuthBlockBox.java

Content: 

/** 

 * Returns the natural width (without stretching nor shrinking) of the line represented by this box.

 * @return the line width

 */

public int getBPD(){

  return bpd;

}

Location: KnuthBlockBox.java

Content: 

public List<FloatContentLayoutManager> getFloatContentLMs(){

  return floatContentLMs;

}

Location: KnuthBlockBox.java

Content: 

/** 

 * @return the LMs for the footnotes cited in this box.

 */

public List<FootnoteBodyLayoutManager> getFootnoteBodyLMs(){

  return footnoteList;

}

Location: KnuthBlockBox.java

Content: 

/** 

 * @return the inline progression dimension of this box.

 */

public MinOptMax getIPDRange(){

  return ipdRange;

}

Location: KnuthBlockBox.java

Content: 

/** 

 * @return true if this box contains footnote citations.

 */

public boolean hasAnchors(){

  return (footnoteList.size() > 0);

}

Location: KnuthBlockBox.java

Content: 

public boolean hasFloatAnchors(){

  return (floatContentLMs.size() > 0);

}

Location: KnuthBlockBox.java

Content: 

/** 

 * Creates a new box.

 * @param width     block progression dimension of this box

 * @param list      footnotes cited by elements in this box. The list contains the correspondingFootnoteBodyLayoutManagers

 * @param pos       the Position stored in this box

 * @param auxiliary is this box auxiliary?

 */

public KnuthBlockBox(int width,List list,Position pos,boolean auxiliary){

  super(width,pos,auxiliary);

  ipdRange=MinOptMax.ZERO;

  bpd=0;

  footnoteList=new LinkedList<FootnoteBodyLayoutManager>(list);

  floatContentLMs=new LinkedList<FloatContentLayoutManager>();

}

Location: KnuthBlockBox.java

Content: 

public KnuthBlockBox(int width,List list,Position pos,boolean auxiliary,List<FloatContentLayoutManager> fclms){

  super(width,pos,auxiliary);

  ipdRange=MinOptMax.ZERO;

  bpd=0;

  footnoteList=new LinkedList<FootnoteBodyLayoutManager>(list);

  floatContentLMs=new LinkedList<FloatContentLayoutManager>(fclms);

}

Location: KnuthBlockBox.java

Content: 

/** 

 * Creates a new box.

 * @param width     block progression dimension of this box

 * @param range     min, opt, max inline progression dimension of this box

 * @param bpdim     natural width of the line represented by this box.

 * @param pos       the Position stored in this box

 * @param auxiliary is this box auxiliary?

 */

public KnuthBlockBox(int width,MinOptMax range,int bpdim,Position pos,boolean auxiliary){

  super(width,pos,auxiliary);

  ipdRange=range;

  bpd=bpdim;

  footnoteList=new LinkedList<FootnoteBodyLayoutManager>();

  floatContentLMs=new LinkedList<FloatContentLayoutManager>();

}

