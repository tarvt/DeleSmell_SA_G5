Location: FontUtil.java

Content: 

private FontUtil(){

}

Location: FontUtil.java

Content: 

/** 

 * Guesses the font style of a font using its name.

 * @param fontName the font name

 * @return "normal" or "italic"

 */

public static String guessStyle(String fontName){

  if (fontName != null) {

    for (    String word : ITALIC_WORDS) {

      if (fontName.indexOf(word) != -1) {

        return Font.STYLE_ITALIC;

      }

    }

  }

  return Font.STYLE_NORMAL;

}

Location: FontUtil.java

Content: 

/** 

 * Guesses the font weight of a font using its name.

 * @param fontName the font name

 * @return an integer between 100 and 900

 */

public static int guessWeight(String fontName){

  int weight=Font.WEIGHT_NORMAL;

  for (  String word : BOLD_WORDS) {

    if (fontName.indexOf(word) != -1) {

      weight=Font.WEIGHT_BOLD;

      break;

    }

  }

  for (  String word : MEDIUM_WORDS) {

    if (fontName.indexOf(word) != -1) {

      weight=Font.WEIGHT_NORMAL + 100;

      break;

    }

  }

  for (  String word : DEMI_WORDS) {

    if (fontName.indexOf(word) != -1) {

      weight=Font.WEIGHT_BOLD - 100;

      break;

    }

  }

  for (  String word : EXTRA_BOLD_WORDS) {

    if (fontName.indexOf(word) != -1) {

      weight=Font.WEIGHT_EXTRA_BOLD;

      break;

    }

  }

  for (  String word : LIGHT_WORDS) {

    if (fontName.indexOf(word) != -1) {

      weight=Font.WEIGHT_LIGHT;

      break;

    }

  }

  return weight;

}

Location: FontUtil.java

Content: 

/** 

 * Parses an CSS2 (SVG and XSL-FO) font weight (normal, bold, 100-900) to an integer. See http://www.w3.org/TR/REC-CSS2/fonts.html#propdef-font-weight TODO: Implement "lighter" and "bolder".

 * @param text the font weight to parse

 * @return an integer between 100 and 900 (100, 200, 300...)

 */

public static int parseCSS2FontWeight(String text){

  int weight=400;

  try {

    weight=Integer.parseInt(text);

    weight=(weight / 100) * 100;

    weight=Math.max(weight,100);

    weight=Math.min(weight,900);

  }

 catch (  NumberFormatException nfe) {

    if (text.equals("normal")) {

      weight=400;

    }

 else     if (text.equals("bold")) {

      weight=700;

    }

 else {

      throw new IllegalArgumentException("Illegal value for font weight: '" + text + "'. Use one of: 100, 200, 300, "+ "400, 500, 600, 700, 800, 900, "+ "normal (=400), bold (=700)");

    }

  }

  return weight;

}

Location: FontUtil.java

Content: 

/** 

 * Removes all white space from a string (used primarily for font names)

 * @param str the string

 * @return the processed result

 */

public static String stripWhiteSpace(String str){

  if (str != null) {

    StringBuffer stringBuffer=new StringBuffer(str.length());

    for (int i=0, strLen=str.length(); i < strLen; i++) {

      final char ch=str.charAt(i);

      if (ch != ' ' && ch != '\r' && ch != '\n' && ch != '\t') {

        stringBuffer.append(ch);

      }

    }

    return stringBuffer.toString();

  }

  return str;

}

