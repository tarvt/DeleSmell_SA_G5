Location: PDFPages.java

Content: 

/** 

 * increment the count of /Page objects

 */

public void incrementCount(){

  this.count++;

}

Location: PDFPages.java

Content: 

/** 

 * Use this method to notify the PDFPages object that a child page

 * @param page the child page

 */

public void notifyKidRegistered(PDFPage page){

  int idx=page.getPageIndex();

  if (idx >= 0) {

    while (idx > this.kids.size() - 1) {

      this.kids.add(null);

    }

    if (this.kids.get(idx) != null) {

      throw new IllegalStateException("A page already exists at index " + idx + " (zero-based).");

    }

    this.kids.set(idx,page.makeReference());

  }

 else {

    this.kids.add(page.makeReference());

  }

}

Location: PDFPages.java

Content: 

/** 

 * create a /Pages object. NOTE: The PDFPages object must be created before the PDF document is generated, but it is not written to the stream immediately. It must also be allocated an object ID (so that the kids can refer to the parent) so that the XRef table needs to be updated before this object is written.

 */

public PDFPages(PDFDocument document){

  setObjectNumber(document);

}

