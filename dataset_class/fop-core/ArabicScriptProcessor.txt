Location: ArabicScriptProcessor.java

Content: 

ArabicScriptProcessor(String script){

  super(script);

  this.subContextTester=new SubstitutionScriptContextTester();

  this.posContextTester=new PositioningScriptContextTester();

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean forceFinalThisContext(int[] ca,int nc,int s,int e){

  int chl=0;

  int cll=0;

  for (int i=0, n=e - s; i < n; i++) {

    int k=n - i - 1;

    int j=s + k;

    if ((j >= 0) && (j < nc)) {

      chl=ca[j];

      cll=BidiClass.getBidiClass(chl);

      if ((cll != BidiConstants.NSM) && !isZWJ(chl)) {

        break;

      }

    }

  }

  if (cll != BidiConstants.AL) {

    return false;

  }

  if (hasIsolateInitial(chl)) {

    return true;

  }

 else {

    return false;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasFinalPrecedingContext(int[] ca,int nc,int s,int e){

  int chp=0;

  int clp=0;

  for (int i=s; i > 0; i--) {

    int k=i - 1;

    if ((k >= 0) && (k < nc)) {

      chp=ca[k];

      clp=BidiClass.getBidiClass(chp);

      if (clp != BidiConstants.NSM) {

        break;

      }

    }

  }

  if (clp != BidiConstants.AL) {

    return isZWJ(chp);

  }

 else   if (hasIsolateInitial(chp)) {

    return false;

  }

 else {

    return true;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasFinalSucceedingContext(int[] ca,int nc,int s,int e){

  int chs=0;

  int cls=0;

  for (int i=e, n=nc; i < n; i++) {

    chs=ca[i];

    cls=BidiClass.getBidiClass(chs);

    if (cls != BidiConstants.NSM) {

      break;

    }

  }

  if (cls != BidiConstants.AL) {

    return !isZWJ(chs);

  }

 else   if (hasIsolateFinal(chs)) {

    return true;

  }

 else {

    return false;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasFinalThisContext(int[] ca,int nc,int s,int e){

  int chl=0;

  int cll=0;

  for (int i=0, n=e - s; i < n; i++) {

    int k=n - i - 1;

    int j=s + k;

    if ((j >= 0) && (j < nc)) {

      chl=ca[j];

      cll=BidiClass.getBidiClass(chl);

      if ((cll != BidiConstants.NSM) && !isZWJ(chl)) {

        break;

      }

    }

  }

  if (cll != BidiConstants.AL) {

    return false;

  }

  if (hasIsolateFinal(chl)) {

    return false;

  }

 else {

    return true;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasInitialPrecedingContext(int[] ca,int nc,int s,int e){

  int chp=0;

  int clp=0;

  for (int i=s; i > 0; i--) {

    int k=i - 1;

    if ((k >= 0) && (k < nc)) {

      chp=ca[k];

      clp=BidiClass.getBidiClass(chp);

      if (clp != BidiConstants.NSM) {

        break;

      }

    }

  }

  if (clp != BidiConstants.AL) {

    return !isZWJ(chp);

  }

 else   if (hasIsolateInitial(chp)) {

    return true;

  }

 else {

    return false;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasInitialSucceedingContext(int[] ca,int nc,int s,int e){

  int chs=0;

  int cls=0;

  for (int i=e, n=nc; i < n; i++) {

    chs=ca[i];

    cls=BidiClass.getBidiClass(chs);

    if (cls != BidiConstants.NSM) {

      break;

    }

  }

  if (cls != BidiConstants.AL) {

    return isZWJ(chs);

  }

 else   if (hasIsolateFinal(chs)) {

    return false;

  }

 else {

    return true;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasInitialThisContext(int[] ca,int nc,int s,int e){

  int chf=0;

  int clf=0;

  for (int i=0, n=e - s; i < n; i++) {

    int k=s + i;

    if ((k >= 0) && (k < nc)) {

      chf=ca[s + i];

      clf=BidiClass.getBidiClass(chf);

      if ((clf != BidiConstants.NSM) && !isZWJ(chf)) {

        break;

      }

    }

  }

  if (clf != BidiConstants.AL) {

    return false;

  }

  if (hasIsolateInitial(chf)) {

    return false;

  }

 else {

    return true;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasIsolateFinal(int ch){

  return Arrays.binarySearch(ISOLATED_FINALS,ch) >= 0;

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasIsolateInitial(int ch){

  return Arrays.binarySearch(ISOLATED_INITIALS,ch) >= 0;

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasLigaturePrecedingContext(int[] ca,int nc,int s,int e){

  return true;

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasLigatureSucceedingContext(int[] ca,int nc,int s,int e){

  int chs=0;

  int cls=0;

  for (int i=e, n=nc; i < n; i++) {

    chs=ca[i];

    cls=BidiClass.getBidiClass(chs);

    if (cls != BidiConstants.NSM) {

      break;

    }

  }

  if (cls == BidiConstants.AL) {

    return true;

  }

 else {

    return false;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasMedialPrecedingContext(int[] ca,int nc,int s,int e){

  int chp=0;

  int clp=0;

  for (int i=s; i > 0; i--) {

    int k=i - 1;

    if ((k >= 0) && (k < nc)) {

      chp=ca[k];

      clp=BidiClass.getBidiClass(chp);

      if (clp != BidiConstants.NSM) {

        break;

      }

    }

  }

  if (clp != BidiConstants.AL) {

    return isZWJ(chp);

  }

 else   if (hasIsolateInitial(chp)) {

    return false;

  }

 else {

    return true;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasMedialSucceedingContext(int[] ca,int nc,int s,int e){

  int chs=0;

  int cls=0;

  for (int i=e, n=nc; i < n; i++) {

    chs=ca[i];

    cls=BidiClass.getBidiClass(chs);

    if (cls != BidiConstants.NSM) {

      break;

    }

  }

  if (cls != BidiConstants.AL) {

    return isZWJ(chs);

  }

 else   if (hasIsolateFinal(chs)) {

    return false;

  }

 else {

    return true;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean hasMedialThisContext(int[] ca,int nc,int s,int e){

  int chf=0;

  int clf=0;

  for (int i=0, n=e - s; i < n; i++) {

    int k=s + i;

    if ((k >= 0) && (k < nc)) {

      chf=ca[s + i];

      clf=BidiClass.getBidiClass(chf);

      if ((clf != BidiConstants.NSM) && !isZWJ(chf)) {

        break;

      }

    }

  }

  if (clf != BidiConstants.AL) {

    return false;

  }

  int chl=0;

  int cll=0;

  for (int i=0, n=e - s; i < n; i++) {

    int k=n - i - 1;

    int j=s + k;

    if ((j >= 0) && (j < nc)) {

      chl=ca[j];

      cll=BidiClass.getBidiClass(chl);

      if ((cll != BidiConstants.NSM) && !isZWJ(chl)) {

        break;

      }

    }

  }

  if (cll != BidiConstants.AL) {

    return false;

  }

  if (hasIsolateFinal(chf)) {

    return false;

  }

 else   if (hasIsolateInitial(chl)) {

    return false;

  }

 else {

    return true;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean inFinalContext(String script,String language,String feature,GlyphSequence gs,int index,int flags){

  CharAssociation a=gs.getAssociation(index);

  int[] ca=gs.getCharacterArray(false);

  int nc=gs.getCharacterCount();

  if (nc == 0) {

    return false;

  }

 else {

    int s=a.getStart();

    int e=a.getEnd();

    if (!hasFinalPrecedingContext(ca,nc,s,e)) {

      return false;

    }

 else     if (!hasFinalThisContext(ca,nc,s,e)) {

      return false;

    }

 else     if (forceFinalThisContext(ca,nc,s,e)) {

      return true;

    }

 else     if (!hasFinalSucceedingContext(ca,nc,s,e)) {

      return false;

    }

 else {

      return true;

    }

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean inInitialContext(String script,String language,String feature,GlyphSequence gs,int index,int flags){

  CharAssociation a=gs.getAssociation(index);

  int[] ca=gs.getCharacterArray(false);

  int nc=gs.getCharacterCount();

  if (nc == 0) {

    return false;

  }

 else {

    int s=a.getStart();

    int e=a.getEnd();

    if (!hasInitialPrecedingContext(ca,nc,s,e)) {

      return false;

    }

 else     if (!hasInitialThisContext(ca,nc,s,e)) {

      return false;

    }

 else     if (!hasInitialSucceedingContext(ca,nc,s,e)) {

      return false;

    }

 else {

      return true;

    }

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean inIsolateContext(String script,String language,String feature,GlyphSequence gs,int index,int flags){

  CharAssociation a=gs.getAssociation(index);

  int nc=gs.getCharacterCount();

  if (nc == 0) {

    return false;

  }

 else   if ((a.getStart() == 0) && (a.getEnd() == nc)) {

    return true;

  }

 else {

    return false;

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean inLigatureContext(String script,String language,String feature,GlyphSequence gs,int index,int flags){

  CharAssociation a=gs.getAssociation(index);

  int[] ca=gs.getCharacterArray(false);

  int nc=gs.getCharacterCount();

  if (nc == 0) {

    return false;

  }

 else {

    int s=a.getStart();

    int e=a.getEnd();

    if (!hasLigaturePrecedingContext(ca,nc,s,e)) {

      return false;

    }

 else     if (!hasLigatureSucceedingContext(ca,nc,s,e)) {

      return false;

    }

 else {

      return true;

    }

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean inMedialContext(String script,String language,String feature,GlyphSequence gs,int index,int flags){

  CharAssociation a=gs.getAssociation(index);

  int[] ca=gs.getCharacterArray(false);

  int nc=gs.getCharacterCount();

  if (nc == 0) {

    return false;

  }

 else {

    int s=a.getStart();

    int e=a.getEnd();

    if (!hasMedialPrecedingContext(ca,nc,s,e)) {

      return false;

    }

 else     if (!hasMedialThisContext(ca,nc,s,e)) {

      return false;

    }

 else     if (!hasMedialSucceedingContext(ca,nc,s,e)) {

      return false;

    }

 else {

      return true;

    }

  }

}

Location: ArabicScriptProcessor.java

Content: 

private static boolean isZWJ(int ch){

  return ch == CharUtilities.ZERO_WIDTH_JOINER;

}

