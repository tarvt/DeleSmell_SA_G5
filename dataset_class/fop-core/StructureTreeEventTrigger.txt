Location: StructureTreeEventTrigger.java

Content: 

private void addAttribute(AttributesImpl attributes,String namespace,String localName,String prefix,String value){

  assert namespace.length() > 0 && prefix.length() > 0;

  String qualifiedName=prefix + ":" + localName;

  attributes.addAttribute(namespace,localName,qualifiedName,XMLUtil.CDATA,value);

}

Location: StructureTreeEventTrigger.java

Content: 

private void addNoNamespaceAttribute(AttributesImpl attributes,String name,String value){

  attributes.addAttribute("",name,name,XMLUtil.CDATA,value);

}

Location: StructureTreeEventTrigger.java

Content: 

private void addRole(CommonAccessibilityHolder node,AttributesImpl attributes){

  String role=node.getCommonAccessibility().getRole();

  if (role != null) {

    addNoNamespaceAttribute(attributes,"role",role);

  }

}

Location: StructureTreeEventTrigger.java

Content: 

private void addSpanAttribute(AttributesImpl attributes,String attributeName,int span){

  if (span > 1) {

    addNoNamespaceAttribute(attributes,attributeName,Integer.toString(span));

  }

}

Location: StructureTreeEventTrigger.java

Content: 

private AttributesImpl createFlowNameAttribute(String flowName){

  String regionName=layoutMasterSet.getDefaultRegionNameFor(flowName);

  AttributesImpl attribute=new AttributesImpl();

  addNoNamespaceAttribute(attribute,Flow.FLOW_NAME,regionName);

  return attribute;

}

Location: StructureTreeEventTrigger.java

Content: 

private AttributesImpl createLangAttribute(CommonHyphenation hyphProperties){

  Locale locale=hyphProperties.getLocale();

  AttributesImpl attributes=new AttributesImpl();

  if (locale == null || locale.equals(locales.peek())) {

    locales.push(locales.peek());

  }

 else {

    locales.push(locale);

    addAttribute(attributes,XMLConstants.XML_NS_URI,"lang","xml",LanguageTags.toLanguageTag(locale));

  }

  return attributes;

}

Location: StructureTreeEventTrigger.java

Content: 

private void endElement(FONode node){

  String localName=node.getLocalName();

  structureTreeEventHandler.endNode(localName);

}

Location: StructureTreeEventTrigger.java

Content: 

@SuppressWarnings("unchecked") private void restoreRetrieveMarkerState(AbstractRetrieveMarker retrieveMarker){

  State state=states.get(retrieveMarker);

  tables=(Stack<Table>)state.tables.clone();

  inTableHeader=(Stack<Boolean>)state.inTableHeader.clone();

  locales=(Stack<Locale>)state.locales.clone();

}

Location: StructureTreeEventTrigger.java

Content: 

void saveState(AbstractRetrieveMarker retrieveMarker){

  states.put(retrieveMarker,new State(this));

}

Location: StructureTreeEventTrigger.java

Content: 

private void startElementWithIDAndAltText(FObj node,String altText){

  AttributesImpl attributes=new AttributesImpl();

  String localName=node.getLocalName();

  addRole((CommonAccessibilityHolder)node,attributes);

  addAttribute(attributes,ExtensionElementMapping.URI,"alt-text",ExtensionElementMapping.STANDARD_PREFIX,altText);

  node.setStructureTreeElement(structureTreeEventHandler.startImageNode(localName,attributes,node.getParent().getStructureTreeElement()));

}

Location: StructureTreeEventTrigger.java

Content: 

private void startElementWithID(FONode node){

  startElementWithID(node,new AttributesImpl());

}

Location: StructureTreeEventTrigger.java

Content: 

private void startElementWithID(FONode node,AttributesImpl attributes){

  String localName=node.getLocalName();

  if (node instanceof CommonAccessibilityHolder) {

    addRole((CommonAccessibilityHolder)node,attributes);

  }

  node.setStructureTreeElement(structureTreeEventHandler.startReferencedNode(localName,attributes,node.getParent().getStructureTreeElement()));

}

Location: StructureTreeEventTrigger.java

Content: 

private StructureTreeElement startElement(FONode node){

  AttributesImpl attributes=new AttributesImpl();

  if (node instanceof Inline) {

    Inline in=(Inline)node;

    if (!in.getAbbreviation().equals("")) {

      addAttribute(attributes,ExtensionElementMapping.URI,"abbreviation",ExtensionElementMapping.STANDARD_PREFIX,in.getAbbreviation());

    }

  }

  return startElement(node,attributes);

}

Location: StructureTreeEventTrigger.java

Content: 

private StructureTreeElement startElement(FONode node,AttributesImpl attributes){

  String localName=node.getLocalName();

  if (node instanceof CommonAccessibilityHolder) {

    addRole((CommonAccessibilityHolder)node,attributes);

  }

  return structureTreeEventHandler.startNode(localName,attributes,node.getParent().getStructureTreeElement());

}

Location: StructureTreeEventTrigger.java

Content: 

public StructureTreeEventTrigger(StructureTreeEventHandler structureTreeEventHandler){

  this.structureTreeEventHandler=structureTreeEventHandler;

}

