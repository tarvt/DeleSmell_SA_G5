Location: FontSelectorTestCase.java

Content: 

private CommonFont makeCommonFont() throws PropertyException {

  PropertyList pList=mock(PropertyList.class);

  String fontFamilyVal=LATIN_FONT_TRIPLET.getName() + "," + EMOJI_FONT_TRIPLET.getName();

  Property fontFamilyProp=new FontFamilyProperty.Maker(Constants.PR_FONT_FAMILY).make(pList,fontFamilyVal,null);

  Property fontWeightProp=EnumProperty.getInstance(Constants.PR_FONT_WEIGHT,"400");

  Property fontStyle=EnumProperty.getInstance(Constants.PR_FONT_STYLE,"normal");

  Property fontSizeAdjustProp=NumberProperty.getInstance(1);

  Property fontSizeProp=FixedLength.getInstance(12);

  when(pList.get(Constants.PR_FONT_FAMILY)).thenReturn(fontFamilyProp);

  when(pList.get(Constants.PR_FONT_WEIGHT)).thenReturn(fontWeightProp);

  when(pList.get(Constants.PR_FONT_STYLE)).thenReturn(fontStyle);

  when(pList.get(Constants.PR_FONT_SIZE_ADJUST)).thenReturn(fontSizeAdjustProp);

  when(pList.get(Constants.PR_FONT_SIZE)).thenReturn(fontSizeProp);

  return CommonFont.getInstance(pList);

}

Location: FontSelectorTestCase.java

Content: 

@Test public void selectFontForCharactersInText() throws Exception {

  String latinText="Hello FontSelector";

  String emojiText="\uD83D\uDE48\uD83D\uDE49\uD83D\uDE4A";

  String mixedText=latinText + emojiText;

  Font f=FontSelector.selectFontForCharactersInText(latinText,0,latinText.length(),foText,context);

  assertEquals(latinFont,f);

  f=FontSelector.selectFontForCharactersInText(emojiText,0,emojiText.length(),foText,context);

  assertEquals(emojiFont,f);

  f=FontSelector.selectFontForCharactersInText(mixedText,0,mixedText.length(),foText,context);

  assertEquals(latinFont,f);

  f=FontSelector.selectFontForCharactersInText(mixedText,latinText.length() - 1,mixedText.length(),foText,context);

  assertEquals(emojiFont,f);

}

