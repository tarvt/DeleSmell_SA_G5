Location: ConfiguredFontCollectionTestCase.java

Content: 

private File getFontFileNoExension(String s) throws IOException {

  FileInputStream pfb=new FileInputStream(s);

  File tmp=File.createTempFile("fop","font");

  FileOutputStream os=new FileOutputStream(tmp);

  IOUtils.copy(pfb,os);

  os.close();

  pfb.close();

  return tmp;

}

Location: ConfiguredFontCollectionTestCase.java

Content: 

@Test public void testConfiguredFontCollection() throws IOException {

  File pfb=getFontFileNoExension("test/resources/fonts/type1/c0419bt_.pfb");

  File afm=getFontFileNoExension("test/resources/fonts/type1/c0419bt_.afm");

  Assert.assertFalse(pfb.getName().endsWith(".pfb"));

  try {

    FontUris fontUris=new FontUris(pfb.toURI(),null,afm.toURI(),null);

    EmbedFontInfo e=new EmbedFontInfo(fontUris,true,true,new ArrayList<FontTriplet>(),null);

    List<EmbedFontInfo> x=Collections.singletonList(e);

    InternalResourceResolver rr=ResourceResolverFactory.createDefaultInternalResourceResolver(new File(".").toURI());

    ConfiguredFontCollection c=new ConfiguredFontCollection(rr,x,true);

    FontInfo fi=new FontInfo();

    int num=c.setup(0,fi);

    Assert.assertEquals(num,1);

    Assert.assertEquals(fi.getFonts().values().iterator().next().getFontName(),"Courier10PitchBT-Roman");

  }

  finally {

    pfb.delete();

    afm.delete();

  }

}

