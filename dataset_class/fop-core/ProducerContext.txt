Location: ProducerContext.java

Content: 

/** 

 * @return the target directory for all produced bitmaps

 */

public File getTargetDir(){

  return targetDir;

}

Location: ProducerContext.java

Content: 

/** 

 * @return the requested bitmap resolution in dpi for all bitmaps.

 */

public int getTargetResolution(){

  return targetResolution;

}

Location: ProducerContext.java

Content: 

/** 

 * @return the XSLT stylesheet to preprocess the input files with.

 */

public Templates getTemplates(){

  return templates;

}

Location: ProducerContext.java

Content: 

/** 

 * @return the TransformerFactory to be used.

 */

public TransformerFactory getTransformerFactory(){

  if (tFactory == null) {

    tFactory=TransformerFactory.newInstance();

  }

  return tFactory;

}

Location: ProducerContext.java

Content: 

/** 

 * Sets the target directory for all produced bitmaps.

 * @param targetDir the target directory

 */

public void setTargetDir(File targetDir){

  this.targetDir=targetDir;

}

Location: ProducerContext.java

Content: 

/** 

 * Sets the requested bitmap resolution in dpi for all bitmaps.

 * @param resolution the resolution in dpi

 */

public void setTargetResolution(int resolution){

  this.targetResolution=resolution;

}

Location: ProducerContext.java

Content: 

/** 

 * Sets an optional XSLT stylesheet which is used to preprocess all input files with.

 * @param templates the XSLT stylesheet

 */

public void setTemplates(Templates templates){

  this.templates=templates;

}

