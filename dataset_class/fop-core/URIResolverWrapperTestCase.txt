Location: URIResolverWrapperTestCase.java

Content: 

private void assertBadSyntax(String badUri){

  try {

    new URI(badUri);

    fail(badUri + " is correctly formed.");

  }

 catch (  URISyntaxException e) {

  }

}

Location: URIResolverWrapperTestCase.java

Content: 

@Test public void cleanURI() throws URISyntaxException {

  String[] uris=new String[]{".","path/to/resource","path\\to\\resource","bad resource name"};

  for (  String uri : uris) {

    assertEquals(InternalResourceResolver.cleanURI(uri),cleanURI(uri));

  }

  assertNull(InternalResourceResolver.cleanURI(null));

}

Location: URIResolverWrapperTestCase.java

Content: 

private URI cleanURI(String raw) throws URISyntaxException {

  String fixedUri=raw.replace('\\','/');

  fixedUri=fixedUri.replace(" ","%20");

  return new URI(fixedUri);

}

Location: URIResolverWrapperTestCase.java

Content: 

@Test public void getBaseURI() throws URISyntaxException {

  assertEquals(InternalResourceResolver.getBaseURI("x/y/z/"),new URI("x/y/z/"));

  assertEquals(InternalResourceResolver.getBaseURI("x/y/z"),new URI("x/y/z/"));

}

Location: URIResolverWrapperTestCase.java

Content: 

private URI resolveFromBase(URI uri){

  return base.resolve(uri);

}

Location: URIResolverWrapperTestCase.java

Content: 

private void setBase(String baseStr) throws URISyntaxException {

  base=new URI(baseStr);

}

Location: URIResolverWrapperTestCase.java

Content: 

@Test public void testResolveIn() throws Exception {

  String[] uris=new String[]{".","resource","path/to/resource"};

  for (  String base : BASE_URIS) {

    setBase(base);

    for (    String uriStr : uris) {

      URI uri=new URI(uriStr);

      URI expected=resolveFromBase(uri);

      test(uriStr,uri,expected);

    }

  }

}

Location: URIResolverWrapperTestCase.java

Content: 

@Test public void testResolveInBadUri() throws Exception {

  String[] uris=new String[]{"path\\to\\resource","bad resource name"};

  for (  String base : BASE_URIS) {

    setBase(base);

    for (    String uriStr : uris) {

      assertBadSyntax(uriStr);

      URI uri=cleanURI(uriStr);

      URI expected=resolveFromBase(uri);

      test(uriStr,uri,expected);

    }

  }

}

Location: URIResolverWrapperTestCase.java

Content: 

private void test(String uriStr,URI uri,URI expected) throws IOException, URISyntaxException {

  ResourceResolver resolver=mock(ResourceResolver.class);

  InternalResourceResolver sut=new InternalResourceResolver(base,resolver);

  sut.getResource(uriStr);

  verify(resolver).getResource(eq(expected));

  resolver=mock(ResourceResolver.class);

  sut=new InternalResourceResolver(base,resolver);

  sut.getResource(uri);

  verify(resolver).getResource(eq(expected));

}

