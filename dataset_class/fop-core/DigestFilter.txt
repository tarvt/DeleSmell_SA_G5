Location: DigestFilter.java

Content: 

public void characters(char[] chars,int start,int length) throws SAXException {

  digest.update(new String(chars,start,length).getBytes());

  super.characters(chars,start,length);

}

Location: DigestFilter.java

Content: 

public DigestFilter(String algorithm) throws NoSuchAlgorithmException {

  digest=MessageDigest.getInstance(algorithm);

}

Location: DigestFilter.java

Content: 

public void endDocument() throws SAXException {

  value=digest.digest();

  super.endDocument();

}

Location: DigestFilter.java

Content: 

public String getDigestString(){

  if (value != null) {

    StringBuffer buffer=new StringBuffer(2 * value.length);

    for (    byte val : value) {

      int hi=(val >> 4) & 0xF;

      int lo=val & 0xF;

      if (hi < 10) {

        buffer.append((char)(hi + 0x30));

      }

 else {

        buffer.append((char)(hi + 0x61 - 10));

      }

      if (lo < 10) {

        buffer.append((char)(lo + 0x30));

      }

 else {

        buffer.append((char)(lo + 0x61 - 10));

      }

    }

    return buffer.toString();

  }

 else {

    return null;

  }

}

Location: DigestFilter.java

Content: 

public byte[] getDigestValue(){

  return value;

}

Location: DigestFilter.java

Content: 

public void setFeature(String feature,boolean value) throws SAXNotRecognizedException, SAXNotSupportedException {

  if (feature.equals("http://xml.org/sax/features/namespaces")) {

    isNamespaceAware=value;

  }

  super.setFeature(feature,value);

}

Location: DigestFilter.java

Content: 

public void startElement(String url,String localName,String qName,Attributes attr) throws SAXException {

  Map map=new TreeMap();

  if (isNamespaceAware) {

    digest.update(url.getBytes());

    digest.update(localName.getBytes());

    for (int i=0; i < attr.getLength(); i++) {

      map.put(attr.getLocalName(i) + attr.getURI(i),attr.getValue(i));

    }

  }

 else {

    digest.update(qName.getBytes());

    for (int i=0; i < attr.getLength(); i++) {

      map.put(attr.getQName(i),attr.getValue(i));

    }

  }

  for (  Object o : map.entrySet()) {

    Map.Entry entry=(Map.Entry)o;

    digest.update(((String)entry.getKey()).getBytes());

    digest.update(((String)entry.getValue()).getBytes());

  }

  super.startElement(url,localName,qName,attr);

}

