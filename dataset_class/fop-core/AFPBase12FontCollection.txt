Location: AFPBase12FontCollection.java

Content: 

private void addCharacterSet(RasterFont font,String charsetName,Base14Font base14){

  for (int i=0; i < RASTER_SIZES.length; i++) {

    int size=RASTER_SIZES[i] * 1000;

    FopCharacterSet characterSet=new FopCharacterSet(CharacterSet.DEFAULT_CODEPAGE,CharacterSet.DEFAULT_ENCODING,charsetName + CHARSET_REF[i],base14,eventProducer);

    font.addCharacterSet(size,characterSet);

  }

}

Location: AFPBase12FontCollection.java

Content: 

private int addFontProperties(FontInfo fontInfo,AFPFont font,String[] names,String style,int weight,int num){

  String internalFontKey="F" + num;

  fontInfo.addMetrics(internalFontKey,font);

  fontInfo.addFontProperties(internalFontKey,names,style,weight);

  num++;

  return num;

}

Location: AFPBase12FontCollection.java

Content: 

/** 

 * @param eventProducer the AFP-specific event producer

 */

public AFPBase12FontCollection(AFPEventProducer eventProducer){

  this.eventProducer=eventProducer;

}

Location: AFPBase12FontCollection.java

Content: 

private RasterFont createReferencedRasterFont(String fontFamily){

  boolean embeddable=false;

  return new RasterFont(fontFamily,embeddable);

}

