Location: TablePart.java

Content: 

void addRowGroup(List rowGroup){

  rowGroups.add(rowGroup);

}

Location: TablePart.java

Content: 

/** 

 * Finish last row group.

 * @throws ValidationException if content validation exception

 */

protected void finishLastRowGroup() throws ValidationException {

  if (!inMarker()) {

    RowGroupBuilder rowGroupBuilder=getTable().getRowGroupBuilder();

    if (tableRowsFound) {

      rowGroupBuilder.endTableRow();

    }

 else     if (!lastCellEndsRow) {

      rowGroupBuilder.endRow(this);

    }

    try {

      rowGroupBuilder.endTablePart();

    }

 catch (    ValidationException e) {

      e.setLocator(locator);

      throw e;

    }

  }

}

Location: TablePart.java

Content: 

/** 

 * @return list of row groups 

 */

public List getRowGroups(){

  return rowGroups;

}

Location: TablePart.java

Content: 

/** 

 * @param obj table row in question

 * @return true if the given table row is the first row of this body.

 */

public boolean isFirst(TableRow obj){

  return (firstChild == null || firstChild == obj);

}

Location: TablePart.java

Content: 

void signalNewRow(){

  if (rowsStarted) {

    firstRow=false;

    if (!lastCellEndsRow) {

      columnNumberManager.prepareForNextRow(pendingSpans);

      getTable().getRowGroupBuilder().endRow(this);

    }

  }

}

Location: TablePart.java

Content: 

/** 

 * Create a TablePart instance with the given  {@link FONode}as parent.

 * @param parent FONode that is the parent of the object

 */

public TablePart(FONode parent){

  super(parent);

}

