Location: CharMetricsHandlerTestCase.java

Content: 

private void testEncodingWithMetricsLine(String encoding,String line) throws IOException {

  Map<String,ValueHandler> valueParsers=mock(HashMap.class);

  ValueHandler cHandler=mock(ValueHandler.class);

  ValueHandler wxHandler=mock(ValueHandler.class);

  ValueHandler nHandler=mock(ValueHandler.class);

  ValueHandler bHandler=mock(ValueHandler.class);

  when(valueParsers.get("C")).thenReturn(cHandler);

  when(valueParsers.get("WX")).thenReturn(wxHandler);

  when(valueParsers.get("N")).thenReturn(nHandler);

  when(valueParsers.get("B")).thenReturn(bHandler);

  CharMetricsHandler handler=CharMetricsHandler.getHandler(valueParsers,encoding);

  Stack<Object> stack=new Stack<Object>();

  handler.parse(line,stack,null);

  verify(valueParsers).get("C");

  verify(valueParsers).get("WX");

  verify(valueParsers).get("N");

  verify(valueParsers).get("B");

  verify(cHandler).parse("32",0,new Stack<Object>());

  verify(wxHandler).parse("32",0,new Stack<Object>());

  verify(nHandler).parse("space",0,new Stack<Object>());

  verify(bHandler).parse("1 1 1 1",0,new Stack<Object>());

}

Location: CharMetricsHandlerTestCase.java

Content: 

@Test public void testHandlers() throws IOException {

  testEncodingWithMetricsLine("",GOOD_LINE);

  testEncodingWithMetricsLine("WrongEncoding",GOOD_LINE);

  testEncodingWithMetricsLine("AdobeStandardEncoding",GOOD_LINE);

}

