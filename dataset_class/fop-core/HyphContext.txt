Location: HyphContext.java

Content: 

/** 

 * @return next hyphenation point 

 */

public int getNextHyphPoint(){

  for (; currentIndex < hyphPoints.length; currentIndex++) {

    if (hyphPoints[currentIndex] > currentOffset) {

      return (hyphPoints[currentIndex] - currentOffset);

    }

  }

  return -1;

}

Location: HyphContext.java

Content: 

/** 

 * @return true if more hyphenation points 

 */

public boolean hasMoreHyphPoints(){

  for (; currentIndex < hyphPoints.length; currentIndex++) {

    if (hyphPoints[currentIndex] > currentOffset) {

      return true;

    }

  }

  return false;

}

Location: HyphContext.java

Content: 

/** 

 * @param hyphPoints number of hyphenation points

 */

public HyphContext(int[] hyphPoints){

  this.hyphPoints=hyphPoints;

}

Location: HyphContext.java

Content: 

/** 

 * @param iCharsProcessed amount to extend offset 

 */

public void updateOffset(int iCharsProcessed){

  currentOffset+=iCharsProcessed;

}

