Location: AbstractPageNumberCitationLayoutManager.java

Content: 

/** 

 * Constructor

 * @param node the formatting object that creates this areaTODO better retrieval of font info

 */

public AbstractPageNumberCitationLayoutManager(AbstractPageNumberCitation node){

  super(node);

  citation=node;

}

Location: AbstractPageNumberCitationLayoutManager.java

Content: 

private InlineArea getPageNumberCitationArea(){

  TextArea text;

  if (resolved) {

    text=new TextArea();

    int bidiLevel=getBidiLevel();

    text.setBidiLevel(bidiLevel);

    text.addWord(citationString,getStringWidth(citationString),null,null,null,0);

  }

 else {

    UnresolvedPageNumber unresolved=new UnresolvedPageNumber(citation.getRefId(),font,getReferenceType());

    getPSLM().addUnresolvedArea(citation.getRefId(),unresolved);

    text=unresolved;

  }

  text.setChangeBarList(getChangeBarList());

  setTraits(text);

  return text;

}

Location: AbstractPageNumberCitationLayoutManager.java

Content: 

private void setTraits(TextArea text){

  TraitSetter.setProducerID(text,citation.getId());

  int bidiLevel=getBidiLevel();

  text.setBidiLevel(bidiLevel);

  int width=getStringWidth(citationString);

  text.setIPD(width);

  text.setBPD(font.getAscender() - font.getDescender());

  text.setBaselineOffset(font.getAscender());

  TraitSetter.addFontTraits(text,font);

  text.addTrait(Trait.COLOR,citation.getColor());

  TraitSetter.addTextDecoration(text,citation.getTextDecoration());

}

