Location: TableCell.java

Content: 

/** 

 * Get the value for the <code>ends-row</code> property

 * @return true if the cell ends a row.

 */

public boolean endsRow(){

  return (endsRow == EN_TRUE);

}

Location: TableCell.java

Content: 

/** 

 * Get the value for the <code>number-rows-spanned</code> property

 * @return the "number-rows-spanned" property.

 */

public int getNumberRowsSpanned(){

  return Math.max(numberRowsSpanned,1);

}

Location: TableCell.java

Content: 

public boolean hasRetrieveTableMarker(){

  return hasRetrieveTableMarker;

}

Location: TableCell.java

Content: 

/** 

 * Get the value for the <code>empty-cells</code> property.

 * @return true if "empty-cells" is "show"

 */

public boolean showEmptyCells(){

  return (this.emptyCells == EN_SHOW);

}

Location: TableCell.java

Content: 

/** 

 * Get the value for the <code>starts-row</code> property

 * @return true if the cell starts a row.

 */

public boolean startsRow(){

  return (startsRow == EN_TRUE);

}

Location: TableCell.java

Content: 

/** 

 * Create a TableCell instance with the given  {@link FONode}as parent.

 * @param parent {@link FONode} that is the parent of this object

 */

public TableCell(FONode parent){

  super(parent);

}

