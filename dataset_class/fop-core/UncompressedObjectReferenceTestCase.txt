Location: UncompressedObjectReferenceTestCase.java

Content: 

private void run1ByteOffsetTest(int offset) throws IOException {

  runIntegerOffsetTest(Arrays.asList(0,0,0,offset));

}

Location: UncompressedObjectReferenceTestCase.java

Content: 

private void runIntegerOffsetTest(List<Integer> expectedOffsetBytes) throws IOException {

  List<Integer> expectedLongOffset=new ArrayList<Integer>(8);

  expectedLongOffset.addAll(Arrays.asList(0,0,0,0));

  expectedLongOffset.addAll(expectedOffsetBytes);

  runTest(expectedLongOffset);

}

Location: UncompressedObjectReferenceTestCase.java

Content: 

@Test public void test1ByteOffsets() throws IOException {

  run1ByteOffsetTest(0x0);

  run1ByteOffsetTest(0xf);

  run1ByteOffsetTest(0x10);

  run1ByteOffsetTest(0xff);

}

Location: UncompressedObjectReferenceTestCase.java

Content: 

@Test public void test2ByteOffsets() throws IOException {

  runIntegerOffsetTest(Arrays.asList(0,0,1,0xff));

  runIntegerOffsetTest(Arrays.asList(0,0,0xa0,0xff));

}

Location: UncompressedObjectReferenceTestCase.java

Content: 

@Test public void test3ByteOffsets() throws IOException {

  runIntegerOffsetTest(Arrays.asList(0,2,0x12,0x34));

  runIntegerOffsetTest(Arrays.asList(0,0xee,0x56,0x78));

}

Location: UncompressedObjectReferenceTestCase.java

Content: 

@Test public void test4ByteOffsets() throws IOException {

  runIntegerOffsetTest(Arrays.asList(0x6,0x12,0x34,0x56));

  runIntegerOffsetTest(Arrays.asList(0xf1,0x9a,0xbc,0xde));

}

Location: UncompressedObjectReferenceTestCase.java

Content: 

@Test public void test5ByteOffsets() throws IOException {

  runTest(Arrays.asList(0,0,0,0x7,0x78,0x9a,0xbc,0xde));

  runTest(Arrays.asList(0,0,0,0xbf,0xf0,0,0x1,0x2));

}

Location: UncompressedObjectReferenceTestCase.java

Content: 

@Test public void test8ByteOffsets() throws IOException {

  runTest(Arrays.asList(0x1,0x2,0x3,0x4,0x5,0x6,0x7,0x8));

  runTest(Arrays.asList(0xf9,0xe8,0xd7,0xc6,0xb5,0xa4,0x93,0x82));

}

