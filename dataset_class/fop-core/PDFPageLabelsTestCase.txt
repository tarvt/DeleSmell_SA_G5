Location: PDFPageLabelsTestCase.java

Content: 

@Test public void testAddPageLabel() throws IOException {

  PDFDocument pdfDoc=mock(PDFDocument.class);

  PDFPageLabels pageLabels=new PDFPageLabels();

  pageLabels.setDocument(pdfDoc);

  int index=0;

  StringBuilder expected=new StringBuilder();

  expected.append("[");

  expected.append(index + " << /S /r >>");

  pageLabels.addPageLabel(index++,"i");

  pageLabels.addPageLabel(index++,"ii");

  pageLabels.addPageLabel(index++,"iii");

  expected.append(" " + index + " << /S /D >>");

  pageLabels.addPageLabel(index++,"1");

  pageLabels.addPageLabel(index++,"2");

  pageLabels.addPageLabel(index++,"3");

  pageLabels.addPageLabel(index++,"4");

  pageLabels.addPageLabel(index++,"5");

  pageLabels.addPageLabel(index++,"6");

  pageLabels.addPageLabel(index++,"7");

  pageLabels.addPageLabel(index++,"8");

  pageLabels.addPageLabel(index++,"9");

  pageLabels.addPageLabel(index++,"10");

  expected.append(" " + index + " << /S /A >>");

  pageLabels.addPageLabel(index++,"A");

  pageLabels.addPageLabel(index++,"B");

  expected.append(" " + index + " << /S /R /St 100 >>");

  pageLabels.addPageLabel(index++,"C");

  expected.append(" " + index + " << /S /R /St 500 >>");

  pageLabels.addPageLabel(index++,"D");

  expected.append(" " + index + " << /S /A /St 5 >>");

  pageLabels.addPageLabel(index++,"E");

  pageLabels.addPageLabel(index++,"F");

  pageLabels.addPageLabel(index++,"G");

  expected.append(" " + index + " << /P (aa) >>");

  pageLabels.addPageLabel(index++,"aa");

  expected.append(" " + index + " << /P (ab) >>");

  pageLabels.addPageLabel(index++,"ab");

  expected.append(" " + index + " << /P (ac) >>");

  pageLabels.addPageLabel(index++,"ac");

  expected.append(" " + index + " << /S /a >>");

  pageLabels.addPageLabel(index++,"a");

  pageLabels.addPageLabel(index++,"b");

  expected.append(" " + index + " << /S /R /St 2 >>");

  pageLabels.addPageLabel(index++,"II");

  expected.append(" " + index + " << /S /R /St 12 >>");

  pageLabels.addPageLabel(index++,"XII");

  expected.append(" " + index + " <<\n  /P (00)\n  /S /D\n  /St 9\n>>");

  pageLabels.addPageLabel(index++,"009");

  expected.append(" " + index + " <<\n  /P (0)\n  /S /D\n  /St 10\n>>");

  pageLabels.addPageLabel(index++,"010");

  pageLabels.addPageLabel(index++,"011");

  expected.append("]");

  PDFNumsArray nums=pageLabels.getNums();

  ByteArrayOutputStream baos=new ByteArrayOutputStream();

  nums.output(baos);

  assertEquals(expected.toString(),baos.toString());

  baos.close();

}

