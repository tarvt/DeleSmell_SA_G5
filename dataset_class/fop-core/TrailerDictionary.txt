Location: TrailerDictionary.java

Content: 

public PDFDictionary getDictionary(){

  return dictionary;

}

Location: TrailerDictionary.java

Content: 

/** 

 * Sets the value of the Encrypt entry. 

 */

public TrailerDictionary setEncryption(PDFEncryption encryption){

  dictionary.put("/Encrypt",encryption);

  return this;

}

Location: TrailerDictionary.java

Content: 

/** 

 * Sets the value of the ID entry. 

 */

public TrailerDictionary setFileID(byte[] originalFileID,byte[] updatedFileID){

class FileID implements PDFWritable {

    private final byte[] fileID;

    FileID(    byte[] id){

      fileID=id;

    }

    public void outputInline(    OutputStream out,    StringBuilder textBuffer) throws IOException {

      PDFDocument.flushTextBuffer(textBuffer,out);

      String hex=PDFText.toHex(fileID,true);

      byte[] encoded=hex.getBytes("US-ASCII");

      out.write(encoded);

    }

  }

  PDFArray fileID=new PDFArray(new FileID(originalFileID),new FileID(updatedFileID));

  dictionary.put("/ID",fileID);

  return this;

}

Location: TrailerDictionary.java

Content: 

/** 

 * Sets the value of the Info entry. 

 */

public TrailerDictionary setInfo(PDFInfo info){

  dictionary.put("/Info",info);

  return this;

}

Location: TrailerDictionary.java

Content: 

/** 

 * Sets the value of the Root entry. 

 */

public TrailerDictionary setRoot(PDFRoot root){

  dictionary.put("/Root",root);

  return this;

}

Location: TrailerDictionary.java

Content: 

public TrailerDictionary(PDFDocument pdfDocument){

  this.dictionary=new PDFDictionary();

  this.dictionary.setDocument(pdfDocument);

}

