Location: ObjectReferenceTest.java

Content: 

protected long computeNumberFromBytes(List<Integer> expectedOffsetBytes){

  assert expectedOffsetBytes.size() <= 8;

  long offset=0;

  for (  int b : expectedOffsetBytes) {

    offset=offset << 8 | b;

  }

  return offset;

}

Location: ObjectReferenceTest.java

Content: 

protected byte[] createExpectedOutput(byte field1,List<Integer> field2,int field3){

  assert field2.size() == 8;

  assert (field3 & 0xffff) == field3;

  byte[] expected=new byte[11];

  int index=0;

  expected[index++]=field1;

  for (  Integer b : field2) {

    expected[index++]=b.byteValue();

  }

  expected[index++]=(byte)((field3 & 0xff00) >> 8);

  expected[index++]=(byte)(field3 & 0xff);

  return expected;

}

Location: ObjectReferenceTest.java

Content: 

protected byte[] getActualOutput() throws IOException {

  ByteArrayOutputStream out=new ByteArrayOutputStream();

  DataOutputStream dataOutputStream=new DataOutputStream(out);

  sut.output(dataOutputStream);

  dataOutputStream.close();

  return out.toByteArray();

}

