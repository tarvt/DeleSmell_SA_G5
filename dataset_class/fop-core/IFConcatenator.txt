Location: IFConcatenator.java

Content: 

/** 

 * Appends another intermediate format document to the current output file. All document-level content (i.e. the document header and trailer) is ignored. This method shall not be called after  {@link #finish()} has been called.

 * @param src the JAXP Source identifying the input document

 * @throws TransformerException if an XML-related exception occurs during

 * @throws IFException if an IF-related error occurs

 */

public void appendDocument(Source src) throws TransformerException, IFException {

  IFParser parser=new IFParser();

  parser.parse(src,new IFPageSequenceFilter(getTargetHandler()),getTargetHandler().getContext().getUserAgent());

}

Location: IFConcatenator.java

Content: 

/** 

 * Returns the target document handler.

 * @return the target document handler

 */

protected IFDocumentHandler getTargetHandler(){

  return this.targetHandler;

}

Location: IFConcatenator.java

Content: 

/** 

 * Creates a new IF concatenator.

 * @param targetHandler the target document handler

 * @param metadata the metadata object for the generated file (may be null)

 * @throws IFException if an IF-related error occurs

 */

public IFConcatenator(IFDocumentHandler targetHandler,Metadata metadata) throws IFException {

  this.targetHandler=targetHandler;

  startDocument(metadata);

}

Location: IFConcatenator.java

Content: 

private void startDocument(Metadata metadata) throws IFException {

  this.targetHandler.startDocument();

  this.targetHandler.startDocumentHeader();

  if (metadata != null) {

    this.targetHandler.handleExtensionObject(metadata);

  }

  this.targetHandler.endDocumentHeader();

}

