Location: PDFNumberTreeNode.java

Content: 

/** 

 * Adds a number and object to the nums array and increases the upper limit should it be required.

 * @param num The unique number identifying the object in the array

 * @param object The object being added

 */

protected void addToNums(int num,Object object){

  getNums().put(num,object);

  if (getUpperLimit() < num) {

    setUpperLimit(num);

  }

}

Location: PDFNumberTreeNode.java

Content: 

/** 

 * Returns the Nums array.

 * @return the Nums array

 */

public PDFNumsArray getNums(){

  PDFNumsArray nums=(PDFNumsArray)get(NUMS);

  if (nums == null) {

    nums=new PDFNumsArray(this);

    setNums(nums);

  }

  return nums;

}

Location: PDFNumberTreeNode.java

Content: 

/** 

 * create a named destination

 */

public PDFNumberTreeNode(){

  super();

}

Location: PDFNumberTreeNode.java

Content: 

/** 

 * Sets the lower limit value of the Limits array.

 * @param key the lower limit value

 */

public void setLowerLimit(Integer key){

  PDFArray limits=prepareLimitsArray();

  limits.set(0,key);

}

Location: PDFNumberTreeNode.java

Content: 

/** 

 * Sets the Nums array.

 * @param nums the Nums array

 */

public void setNums(PDFNumsArray nums){

  put(NUMS,nums);

}

Location: PDFNumberTreeNode.java

Content: 

/** 

 * Sets the upper limit value of the Limits array.

 * @param key the upper limit value

 */

public void setUpperLimit(Integer key){

  PDFArray limits=prepareLimitsArray();

  limits.set(1,key);

}

