Location: AFPRendererConfBuilder.java

Content: 

public AFPRendererConfBuilder(){

  super(MimeConstants.MIME_AFP);

}

Location: AFPRendererConfBuilder.java

Content: 

private AFPRendererConfBuilder createTextElement(AFPRendererOption option,String value){

  createTextElement(option.getName(),value);

  return this;

}

Location: AFPRendererConfBuilder.java

Content: 

public AFPRendererConfBuilder endGOCA(){

  gocaBuilder=null;

  return this;

}

Location: AFPRendererConfBuilder.java

Content: 

public AFPRendererConfBuilder endImages(){

  images=null;

  return this;

}

Location: AFPRendererConfBuilder.java

Content: 

public AFPRendererConfBuilder setDefaultResourceLevels(Map<String,String> levels){

  Element e=createElement(DEFAULT_RESOURCE_LEVELS.getName());

  for (  Map.Entry<String,String> stringStringEntry : levels.entrySet()) {

    e.setAttribute(stringStringEntry.getKey(),stringStringEntry.getValue());

  }

  return this;

}

Location: AFPRendererConfBuilder.java

Content: 

public AFPRendererConfBuilder setLineWidthCorrection(float value){

  return createTextElement(LINE_WIDTH_CORRECTION,String.valueOf(value));

}

Location: AFPRendererConfBuilder.java

Content: 

public AFPRendererConfBuilder setRenderingResolution(int res){

  return createTextElement(RENDERER_RESOLUTION,String.valueOf(res));

}

Location: AFPRendererConfBuilder.java

Content: 

public AFPRendererConfBuilder setResourceGroupUri(String uri){

  createTextElement(RESOURCE_GROUP_URI,uri);

  return this;

}

Location: AFPRendererConfBuilder.java

Content: 

public AFPRendererConfBuilder setShading(AFPShadingMode mode){

  return createTextElement(SHADING,mode.getName());

}

Location: AFPRendererConfBuilder.java

Content: 

public GOCABuilder startGOCA(){

  gocaBuilder=new GOCABuilder();

  return gocaBuilder;

}

Location: AFPRendererConfBuilder.java

Content: 

public ImagesBuilder startImages(){

  return startImages(MODE_GRAYSCALE);

}

Location: AFPRendererConfBuilder.java

Content: 

public ImagesBuilder startImages(AFPRendererConfig.ImagesModeOptions mode){

  images=new ImagesBuilder(mode);

  return images;

}

