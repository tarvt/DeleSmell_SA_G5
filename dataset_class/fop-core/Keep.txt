Location: Keep.java

Content: 

/** 

 * Compare this Keep instance to another one, and return the stronger one if the context is the same

 * @param other     the instance to compare to

 * @return  the winning Keep instance

 */

public Keep compare(Keep other){

  if (this.strength == STRENGTH_ALWAYS && this.strength > other.strength) {

    return this;

  }

 else   if (other.strength == STRENGTH_ALWAYS && other.strength > this.strength) {

    return other;

  }

  int pThis=getKeepContextPriority(this.context);

  int pOther=getKeepContextPriority(other.context);

  if (pThis == pOther) {

    return (strength >= other.strength) ? this : other;

  }

  return (pThis < pOther) ? this : other;

}

Location: Keep.java

Content: 

private static int getKeepContextPriority(int context){

switch (context) {

case Constants.EN_LINE:

    return 0;

case Constants.EN_COLUMN:

  return 1;

case Constants.EN_PAGE:

return 2;

case Constants.EN_AUTO:

return 3;

default :

throw new IllegalArgumentException();

}

}

Location: Keep.java

Content: 

private static int getKeepStrength(Property keep){

  if (keep.isAuto()) {

    return STRENGTH_AUTO;

  }

 else   if (keep.getEnum() == Constants.EN_ALWAYS) {

    return STRENGTH_ALWAYS;

  }

 else {

    return keep.getNumber().intValue();

  }

}

Location: Keep.java

Content: 

/** 

 * Obtain a Keep instance corresponding to the given  {@link KeepProperty}

 * @param keepProperty  the {@link KeepProperty}

 * @return  a new instance corresponding to the given property

 */

public static Keep getKeep(KeepProperty keepProperty){

  Keep keep=new Keep(STRENGTH_AUTO,Constants.EN_AUTO);

  keep.update(keepProperty.getWithinPage(),Constants.EN_PAGE);

  keep.update(keepProperty.getWithinColumn(),Constants.EN_COLUMN);

  keep.update(keepProperty.getWithinLine(),Constants.EN_LINE);

  return keep;

}

Location: Keep.java

Content: 

/** 

 * @return {@code true} if the keep property was specified as "auto" 

 */

public boolean isAuto(){

  return strength == STRENGTH_AUTO;

}

Location: Keep.java

Content: 

private Keep(int strength,int context){

  this.strength=strength;

  this.context=context;

}

Location: Keep.java

Content: 

private void update(Property keep,int context){

  if (!keep.isAuto()) {

    this.strength=getKeepStrength(keep);

    this.context=context;

  }

}

