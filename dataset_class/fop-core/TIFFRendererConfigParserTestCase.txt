Location: TIFFRendererConfigParserTestCase.java

Content: 

@Override protected TIFFRendererConfBuilder createRenderer(){

  builder=new FopConfBuilder().setStrictValidation(true).startRendererConfig(TIFFRendererConfBuilder.class);

  return (TIFFRendererConfBuilder)builder;

}

Location: TIFFRendererConfigParserTestCase.java

Content: 

private TIFFRendererConfig getConfig(){

  return (TIFFRendererConfig)conf;

}

Location: TIFFRendererConfigParserTestCase.java

Content: 

@Test public void testCompression() throws Exception {

  for (  TIFFCompressionValue value : TIFFCompressionValue.values()) {

    parseConfig(createRenderer().setCompressionMode(value.getName()));

    assertEquals(value,getConfig().getCompressionType());

  }

}

Location: TIFFRendererConfigParserTestCase.java

Content: 

@Test public void testEndianness() throws Exception {

  for (  Endianness value : Endianness.values()) {

    parseConfig(createRenderer().setEndianness(value.toString()));

    assertEquals(value,getConfig().getEndianness());

  }

}

Location: TIFFRendererConfigParserTestCase.java

Content: 

@Test public void testSingleStrip() throws Exception {

  parseConfig(createRenderer().setSingleStrip(true));

  assertTrue(getConfig().isSingleStrip());

  parseConfig(createRenderer().setSingleStrip(false));

  assertFalse(getConfig().isSingleStrip());

}

Location: TIFFRendererConfigParserTestCase.java

Content: 

public TIFFRendererConfigParserTestCase(){

  super(new TIFFRendererConfigParser());

}

