Location: TableAndCaptionLayoutManager.java

Content: 

/** 

 * Add the areas.

 * @param parentIter the position iterator

 * @param layoutContext the layout context for adding areas

 */

public void addAreas(PositionIterator parentIter,LayoutContext layoutContext){

  getParentArea(null);

  addId();

  flush();

  curBlockArea=null;

}

Location: TableAndCaptionLayoutManager.java

Content: 

/** 

 * Add the child to the current area.

 * @param childArea the area to add

 */

public void addChildArea(Area childArea){

  if (curBlockArea != null) {

    curBlockArea.addBlock((Block)childArea);

  }

}

Location: TableAndCaptionLayoutManager.java

Content: 

/** 

 * {@inheritDoc} 

 */

public Keep getKeepWithPrevious(){

  return Keep.KEEP_AUTO;

}

Location: TableAndCaptionLayoutManager.java

Content: 

/** 

 * Return an Area which can contain the passed childArea. The childArea may not yet have any content, but it has essential traits set. In general, if the LayoutManager already has an Area it simply returns it. Otherwise, it makes a new Area of the appropriate class. It gets a parent area for its area by calling its parent LM. Finally, based on the dimensions of the parent area, it initializes its own area. This includes setting the content IPD and the maximum BPD.

 * @param childArea the child area to locate the parent

 * @return the area for this table and caption

 */

public Area getParentArea(Area childArea){

  if (curBlockArea == null) {

    curBlockArea=new Block();

    curBlockArea.setChangeBarList(getChangeBarList());

    Area parentArea=parentLayoutManager.getParentArea(curBlockArea);

    int referenceIPD=parentArea.getIPD();

    curBlockArea.setIPD(referenceIPD);

    curBlockArea.setBidiLevel(getTableAndCaptionFO().getBidiLevel());

    setCurrentArea(curBlockArea);

  }

  return curBlockArea;

}

Location: TableAndCaptionLayoutManager.java

Content: 

/** 

 * Returns the table-and-caption formatting object.

 * @return the table-and-caption formatting object

 */

public TableAndCaption getTableAndCaptionFO(){

  return (TableAndCaption)this.fobj;

}

Location: TableAndCaptionLayoutManager.java

Content: 

/** 

 * Create a new table and caption layout manager.

 * @param node table-and-caption FO

 */

public TableAndCaptionLayoutManager(TableAndCaption node){

  super(node);

}

