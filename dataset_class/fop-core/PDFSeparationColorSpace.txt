Location: PDFSeparationColorSpace.java

Content: 

/** 

 * Returns the name of the colorant.

 * @return the name of the colorant

 */

public PDFName getColorName(){

  return (PDFName)get(1);

}

Location: PDFSeparationColorSpace.java

Content: 

/** 

 * {@inheritDoc} 

 */

public int getNumComponents(){

  return 1;

}

Location: PDFSeparationColorSpace.java

Content: 

/** 

 * Returns a reference to the tint function that is used as a fallback if the colorant is not available.

 * @return a reference to the tint function

 */

public PDFReference getTintFunction(){

  return (PDFReference)get(2);

}

Location: PDFSeparationColorSpace.java

Content: 

/** 

 * {@inheritDoc} 

 */

public boolean isCMYKColorSpace(){

  return false;

}

Location: PDFSeparationColorSpace.java

Content: 

/** 

 * {@inheritDoc} 

 */

public boolean isDeviceColorSpace(){

  return false;

}

Location: PDFSeparationColorSpace.java

Content: 

/** 

 * {@inheritDoc} 

 */

public boolean isGrayColorSpace(){

  return false;

}

Location: PDFSeparationColorSpace.java

Content: 

/** 

 * {@inheritDoc} 

 */

public boolean isRGBColorSpace(){

  return false;

}

Location: PDFSeparationColorSpace.java

Content: 

/** 

 * Creates a new "Separation" color space.

 * @param colorName the name of the colorant

 * @param tintFunction the tint function used as fallback

 */

public PDFSeparationColorSpace(String colorName,PDFFunction tintFunction){

  super();

  add(new PDFName("Separation"));

  add(new PDFName(colorName));

  add(new PDFName("DeviceRGB"));

  add(new PDFReference(tintFunction));

}

