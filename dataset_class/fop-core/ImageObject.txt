Location: ImageObject.java

Content: 

/** 

 * Returns the image segment object associated with this image object.

 * @return the image segment

 */

public ImageSegment getImageSegment(){

  if (imageSegment == null) {

    this.imageSegment=factory.createImageSegment();

  }

  return imageSegment;

}

Location: ImageObject.java

Content: 

/** 

 * Constructor for the image object with the specified name, the name must be a fixed length of eight characters.

 * @param name The name of the image.

 * @param factory the resource manager

 */

public ImageObject(Factory factory,String name){

  super(factory,name);

}

Location: ImageObject.java

Content: 

/** 

 * Sets the image compression.

 * @param compression The image compression.

 */

public void setCompression(byte compression){

  getImageSegment().setCompression(compression);

}

Location: ImageObject.java

Content: 

/** 

 * Sets the image encoding.

 * @param encoding The image encoding.

 */

public void setEncoding(byte encoding){

  getImageSegment().setEncoding(encoding);

}

Location: ImageObject.java

Content: 

/** 

 * Sets the image IDE color model.

 * @param colorModel    the IDE color model.

 * @deprecated Use {@link org.apache.fop.afp.ioca.IDEStructureParameter#setColorModel(byte)}instead.

 */

public void setIDEColorModel(byte colorModel){

  getImageSegment().setIDEColorModel(colorModel);

}

Location: ImageObject.java

Content: 

/** 

 * Sets the image IDE size.

 * @param size The IDE size.

 */

public void setIDESize(byte size){

  getImageSegment().setIDESize(size);

}

Location: ImageObject.java

Content: 

/** 

 * Set either additive or subtractive mode (used for ASFLAG).

 * @param subtractive true for subtractive mode, false for additive mode

 * @deprecated Use {@link org.apache.fop.afp.ioca.IDEStructureParameter#setSubtractive(boolean)}instead.

 */

public void setSubtractive(boolean subtractive){

  getImageSegment().setSubtractive(subtractive);

}

