Location: PDFDictionaryElement.java

Content: 

private static PDFDictionaryExtension createExtension(PDFDictionaryType type){

  if (type == PDFDictionaryType.Action) {

    return new PDFActionExtension();

  }

 else   if (type == PDFDictionaryType.Catalog) {

    return new PDFCatalogExtension();

  }

 else   if (type == PDFDictionaryType.Layer) {

    return new PDFLayerExtension();

  }

 else   if (type == PDFDictionaryType.Navigator) {

    return new PDFNavigatorExtension();

  }

 else   if (type == PDFDictionaryType.Page) {

    return new PDFPageExtension();

  }

 else   if (type == PDFDictionaryType.Info) {

    return new PDFDocumentInformationExtension();

  }

 else {

    return new PDFDictionaryExtension(type);

  }

}

Location: PDFDictionaryElement.java

Content: 

public PDFDictionaryExtension getDictionaryExtension(){

  PDFCollectionEntryExtension extension=getExtension();

  assert extension instanceof PDFDictionaryExtension;

  return (PDFDictionaryExtension)extension;

}

Location: PDFDictionaryElement.java

Content: 

/** 

 * Main constructor

 * @param parent parent FO node

 */

PDFDictionaryElement(FONode parent,PDFDictionaryType type){

  super(parent,PDFObjectType.Dictionary,createExtension(type));

}

