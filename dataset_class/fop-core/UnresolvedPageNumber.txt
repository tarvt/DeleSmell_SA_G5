Location: UnresolvedPageNumber.java

Content: 

/** 

 * Get the id references for this area.

 * @return the id reference for this unresolved page number

 */

public String[] getIDRefs(){

  return new String[]{pageIDRef};

}

Location: UnresolvedPageNumber.java

Content: 

/** 

 * Check if this is resolved.

 * @return true when this has been resolved

 */

public boolean isResolved(){

  return resolved;

}

Location: UnresolvedPageNumber.java

Content: 

/** 

 * Resolve the page number idref This resolves the idref for this object by getting the page number string from the first page in the list of pages that apply for this ID.  The page number text is then set to the String value of the page number. TODO: [GA] May need to run bidi algorithm and script processor on resolved page number.

 * @param id an id whose PageViewports have been determined

 * @param pages the list of PageViewports associated with this ID

 */

public void resolveIDRef(String id,List<PageViewport> pages){

  if (!resolved && pageIDRef.equals(id) && pages != null) {

    if (log.isDebugEnabled()) {

      log.debug("Resolving pageNumber: " + id);

    }

    resolved=true;

    int pageIndex=pageType ? 0 : pages.size() - 1;

    PageViewport page=pages.get(pageIndex);

    removeText();

    text=page.getPageNumberString();

    addWord(text,0,getBidiLevel());

    if (font != null) {

      handleIPDVariation(font.getWordWidth(text) - getIPD());

      font=null;

    }

 else {

      log.warn("Cannot update the IPD of an unresolved page number." + " No font information available.");

    }

  }

}

Location: UnresolvedPageNumber.java

Content: 

public UnresolvedPageNumber(){

  this(null,null,FIRST);

}

Location: UnresolvedPageNumber.java

Content: 

/** 

 * Create a new unresolved page number.

 * @param id the id reference for resolving this

 * @param f  the font for formatting the page number

 */

public UnresolvedPageNumber(String id,Font f){

  this(id,f,FIRST);

}

Location: UnresolvedPageNumber.java

Content: 

/** 

 * Create a new unresolved page number.

 * @param id   the id reference for resolving this

 * @param f    the font for formatting the page number

 * @param type indicates whether the reference refers to the first or last area generated bya formatting object

 */

public UnresolvedPageNumber(String id,Font f,boolean type){

  pageIDRef=id;

  font=f;

  text="?";

  pageType=type;

}

