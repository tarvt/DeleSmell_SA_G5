Location: HTMLTableRowElementImpl.java

Content: 

public void deleteCell(int index){

  Node child;

  child=getFirstChild();

  while (child != null) {

    if (child instanceof HTMLTableCellElement) {

      if (index == 0) {

        removeChild(child);

        return;

      }

      --index;

    }

    child=child.getNextSibling();

  }

}

Location: HTMLTableRowElementImpl.java

Content: 

public HTMLCollection getCells(){

  if (_cells == null) {

    _cells=new HTMLCollectionImpl(this,HTMLCollectionImpl.CELL);

  }

  return _cells;

}

Location: HTMLTableRowElementImpl.java

Content: 

public int getRowIndex(){

  Node parent;

  parent=getParentNode();

  if (parent instanceof HTMLTableSectionElement) {

    parent=parent.getParentNode();

  }

  if (parent instanceof HTMLTableElement) {

    return getRowIndex(parent);

  }

  return -1;

}

Location: HTMLTableRowElementImpl.java

Content: 

int getRowIndex(Node parent){

  NodeList rows;

  int i;

  rows=((HTMLElement)parent).getElementsByTagName("TR");

  for (i=0; i < rows.getLength(); ++i) {

    if (rows.item(i) == this) {

      return i;

    }

  }

  return -1;

}

Location: HTMLTableRowElementImpl.java

Content: 

public int getSectionRowIndex(){

  Node parent;

  parent=getParentNode();

  if (parent instanceof HTMLTableSectionElement) {

    return getRowIndex(parent);

  }

  return -1;

}

Location: HTMLTableRowElementImpl.java

Content: 

/** 

 * Constructor requires owner document.

 * @param owner The owner HTML document

 */

public HTMLTableRowElementImpl(HTMLDocumentImpl owner,String name){

  super(owner,name);

}

Location: HTMLTableRowElementImpl.java

Content: 

public HTMLElement insertCell(int index){

  Node child;

  HTMLElement newCell;

  newCell=new HTMLTableCellElementImpl((HTMLDocumentImpl)getOwnerDocument(),"TD");

  child=getFirstChild();

  while (child != null) {

    if (child instanceof HTMLTableCellElement) {

      if (index == 0) {

        insertBefore(newCell,child);

        return newCell;

      }

      --index;

    }

    child=child.getNextSibling();

  }

  appendChild(newCell);

  return newCell;

}

Location: HTMLTableRowElementImpl.java

Content: 

public void setCells(HTMLCollection cells){

  Node child;

  int i;

  child=getFirstChild();

  while (child != null) {

    removeChild(child);

    child=child.getNextSibling();

  }

  i=0;

  child=cells.item(i);

  while (child != null) {

    appendChild(child);

    ++i;

    child=cells.item(i);

  }

}

Location: HTMLTableRowElementImpl.java

Content: 

public void setRowIndex(int rowIndex){

  Node parent;

  parent=getParentNode();

  if (parent instanceof HTMLTableSectionElement) {

    parent=parent.getParentNode();

  }

  if (parent instanceof HTMLTableElement) {

    ((HTMLTableElementImpl)parent).insertRowX(rowIndex,this);

  }

}

Location: HTMLTableRowElementImpl.java

Content: 

public void setSectionRowIndex(int sectionRowIndex){

  Node parent;

  parent=getParentNode();

  if (parent instanceof HTMLTableSectionElement) {

    ((HTMLTableSectionElementImpl)parent).insertRowX(sectionRowIndex,this);

  }

}

