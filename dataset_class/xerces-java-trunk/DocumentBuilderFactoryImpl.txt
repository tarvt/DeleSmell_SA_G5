Location: DocumentBuilderFactoryImpl.java

Content: 

/** 

 * Allows the user to retrieve specific attributes on the underlying  implementation.

 */

public Object getAttribute(String name) throws IllegalArgumentException {

  if (attributes != null) {

    Object val=attributes.get(name);

    if (val != null) {

      return val;

    }

  }

  DOMParser domParser=null;

  try {

    domParser=new DocumentBuilderImpl(this,attributes,features).getDOMParser();

    return domParser.getProperty(name);

  }

 catch (  SAXException se1) {

    try {

      boolean result=domParser.getFeature(name);

      return result ? Boolean.TRUE : Boolean.FALSE;

    }

 catch (    SAXException se2) {

      throw new IllegalArgumentException(se1.getMessage());

    }

  }

}

Location: DocumentBuilderFactoryImpl.java

Content: 

/** 

 * Creates a new instance of a  {@link javax.xml.parsers.DocumentBuilder}using the currently configured parameters.

 */

public DocumentBuilder newDocumentBuilder() throws ParserConfigurationException {

  if (grammar != null && attributes != null) {

    if (attributes.containsKey(JAXPConstants.JAXP_SCHEMA_LANGUAGE)) {

      throw new ParserConfigurationException(SAXMessageFormatter.formatMessage(null,"schema-already-specified",new Object[]{JAXPConstants.JAXP_SCHEMA_LANGUAGE}));

    }

 else     if (attributes.containsKey(JAXPConstants.JAXP_SCHEMA_SOURCE)) {

      throw new ParserConfigurationException(SAXMessageFormatter.formatMessage(null,"schema-already-specified",new Object[]{JAXPConstants.JAXP_SCHEMA_SOURCE}));

    }

  }

  try {

    return new DocumentBuilderImpl(this,attributes,features,fSecureProcess);

  }

 catch (  SAXException se) {

    throw new ParserConfigurationException(se.getMessage());

  }

}

Location: DocumentBuilderFactoryImpl.java

Content: 

/** 

 * Allows the user to set specific attributes on the underlying  implementation.

 * @param name    name of attribute

 * @param value   null means to remove attribute

 */

public void setAttribute(String name,Object value) throws IllegalArgumentException {

  if (value == null) {

    if (attributes != null) {

      attributes.remove(name);

    }

    return;

  }

  if (attributes == null) {

    attributes=new Hashtable();

  }

  attributes.put(name,value);

  try {

    new DocumentBuilderImpl(this,attributes,features);

  }

 catch (  Exception e) {

    attributes.remove(name);

    throw new IllegalArgumentException(e.getMessage());

  }

}

