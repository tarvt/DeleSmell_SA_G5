Location: DOMXSImplementationSourceImpl.java

Content: 

/** 

 * A method to request a list of DOM implementations that support the  specified features and versions, as specified in .

 * @param features A string that specifies which features and versions are required. This is a space separated list in which each feature  is specified by its name optionally followed by a space and a  version number. This is something like: "XML 3.0 Traversal +Events  2.0"

 * @return A list of DOM implementations that support the desired features.

 */

public DOMImplementationList getDOMImplementationList(String features){

  final ArrayList implementations=new ArrayList();

  DOMImplementationList list=super.getDOMImplementationList(features);

  for (int i=0; i < list.getLength(); ++i) {

    implementations.add(list.item(i));

  }

  DOMImplementation impl=PSVIDOMImplementationImpl.getDOMImplementation();

  if (testImpl(impl,features)) {

    implementations.add(impl);

  }

  impl=XSImplementationImpl.getDOMImplementation();

  if (testImpl(impl,features)) {

    implementations.add(impl);

  }

  return new DOMImplementationListImpl(implementations);

}

Location: DOMXSImplementationSourceImpl.java

Content: 

/** 

 * A method to request a DOM implementation.

 * @param features A string that specifies which features are required. This is a space separated list in which each feature is specified  by its name optionally followed by a space and a version number.  This is something like: "XML 1.0 Traversal Events 2.0"

 * @return An implementation that has the desired features, or <code>null</code> if this source has none.

 */

public DOMImplementation getDOMImplementation(String features){

  DOMImplementation impl=super.getDOMImplementation(features);

  if (impl != null) {

    return impl;

  }

  impl=PSVIDOMImplementationImpl.getDOMImplementation();

  if (testImpl(impl,features)) {

    return impl;

  }

  impl=XSImplementationImpl.getDOMImplementation();

  if (testImpl(impl,features)) {

    return impl;

  }

  return null;

}

