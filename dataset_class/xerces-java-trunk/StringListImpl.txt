Location: StringListImpl.java

Content: 

public Object get(int index){

  if (index >= 0 && index < fLength) {

    if (fVector != null) {

      return fVector.elementAt(index);

    }

    return fArray[index];

  }

  throw new IndexOutOfBoundsException("Index: " + index);

}

Location: StringListImpl.java

Content: 

/** 

 * Construct an XSObjectList implementation

 * @param array     the data array

 * @param length    the number of elements

 */

public StringListImpl(String[] array,int length){

  fArray=array;

  fLength=length;

  fVector=null;

}

Location: StringListImpl.java

Content: 

public StringListImpl(Vector v){

  fVector=v;

  fLength=(v == null) ? 0 : v.size();

  fArray=null;

}

Location: StringListImpl.java

Content: 

public Object[] toArray(){

  if (fVector != null) {

    return fVector.toArray();

  }

  Object[] a=new Object[fLength];

  toArray0(a);

  return a;

}

Location: StringListImpl.java

Content: 

private void toArray0(Object[] a){

  if (fLength > 0) {

    System.arraycopy(fArray,0,a,0,fLength);

  }

}

Location: StringListImpl.java

Content: 

public Object[] toArray(Object[] a){

  if (fVector != null) {

    return fVector.toArray(a);

  }

  if (a.length < fLength) {

    Class arrayClass=a.getClass();

    Class componentType=arrayClass.getComponentType();

    a=(Object[])Array.newInstance(componentType,fLength);

  }

  toArray0(a);

  if (a.length > fLength) {

    a[fLength]=null;

  }

  return a;

}

