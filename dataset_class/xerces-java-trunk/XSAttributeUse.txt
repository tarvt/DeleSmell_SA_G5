Location: XSAttributeUse.java

Content: 

/** 

 * Value Constraint: Binding specific actual constraint value or  <code>null</code> if the value is in error or there is no value  constraint. 

 * @exception XSException NOT_SUPPORTED_ERR: Raised if the implementation does not support this  method.

 * @deprecated Use getValueConstraintValue().getActualValue() instead

 */

public Object getActualVC() throws XSException ;

Location: XSAttributeUse.java

Content: 

/** 

 * The actual constraint value built-in datatype, e.g.  <code>STRING_DT, SHORT_DT</code>. If the type definition of this  value is a list type definition, this method returns  <code>LIST_DT</code>. If the type definition of this value is a list  type definition whose item type is a union type definition, this  method returns <code>LISTOFUNION_DT</code>. To query the actual  constraint value of the list or list of union type definitions use  <code>itemValueTypes</code>. If the <code>actualNormalizedValue</code> is <code>null</code>, this method returns <code>UNAVAILABLE_DT</code>. 

 * @exception XSException NOT_SUPPORTED_ERR: Raised if the implementation does not support this  method.

 * @deprecated Use getValueConstraintValue().getActualValueType() instead

 */

public short getActualVCType() throws XSException ;

Location: XSAttributeUse.java

Content: 

/** 

 * [attribute declaration]: provides the attribute declaration itself,  which will in turn determine the simple type definition used. 

 */

public XSAttributeDeclaration getAttrDeclaration();

Location: XSAttributeUse.java

Content: 

/** 

 * Value Constraint: one of default, fixed, or none.

 */

public short getConstraintType();

Location: XSAttributeUse.java

Content: 

/** 

 * Value Constraint: The constraint value, otherwise <code>null</code>. 

 * @deprecated Use getValueConstraintValue().getNormalizedValue() instead

 */

public String getConstraintValue();

Location: XSAttributeUse.java

Content: 

/** 

 * In the case the actual constraint value represents a list, i.e. the  <code>actualValueType</code> is <code>LIST_DT</code>, the returned  array consists of one type kind which represents the itemType. If the  actual constraint value represents a list type definition whose item  type is a union type definition, i.e. <code>LISTOFUNION_DT</code>,  for each actual constraint value in the list the array contains the  corresponding memberType kind. For examples, see  <code>ItemPSVI.itemValueTypes</code>. 

 * @exception XSException NOT_SUPPORTED_ERR: Raised if the implementation does not support this  method.

 * @deprecated Use getValueConstraintValue().getListValueTypes() instead

 */

public ShortList getItemValueTypes() throws XSException ;

Location: XSAttributeUse.java

Content: 

/** 

 * [required]: determines whether this use of an attribute declaration  requires an appropriate attribute information item to be present, or  merely allows it. 

 */

public boolean getRequired();

Location: XSAttributeUse.java

Content: 

/** 

 * The actual value of the default or fixed value constraint.

 */

public XSValue getValueConstraintValue();

