Location: ShortHandPointer.java

Content: 

/** 

 * Not quite sure how this can be correctly implemented.

 * @param attributes

 * @param index

 * @return String - We return null since we currenly do not supprt this. 

 * @throws XNIException

 */

public String getChildrenSchemaDeterminedID(XMLAttributes attributes,int index) throws XNIException {

  return null;

}

Location: ShortHandPointer.java

Content: 

/** 

 * Rerturns the DTD determine-ID

 * @param attributes

 * @param index

 * @return String 

 * @throws XNIException

 */

public String getDTDDeterminedID(XMLAttributes attributes,int index) throws XNIException {

  if (attributes.getType(index).equals("ID")) {

    return attributes.getValue(index);

  }

  return null;

}

Location: ShortHandPointer.java

Content: 

/** 

 * Returns the schema-determined-ID.

 * @param attributes

 * @param index

 * @return A String containing the schema-determined ID. 

 * @throws XNIException

 */

public String getSchemaDeterminedID(XMLAttributes attributes,int index) throws XNIException {

  Augmentations augs=attributes.getAugmentations(index);

  AttributePSVI attrPSVI=(AttributePSVI)augs.getItem(Constants.ATTRIBUTE_PSVI);

  if (attrPSVI != null) {

    XSTypeDefinition typeDef=attrPSVI.getMemberTypeDefinition();

    if (typeDef != null) {

      typeDef=attrPSVI.getTypeDefinition();

    }

    if (typeDef != null && ((XSSimpleType)typeDef).isIDType()) {

      return attrPSVI.getSchemaNormalizedValue();

    }

  }

  return null;

}

Location: ShortHandPointer.java

Content: 

/** 

 * @param element

 * @param attributes

 * @param augs

 * @param event

 * @return

 * @throws XNIException

 */

private boolean hasMatchingIdentifier(QName element,XMLAttributes attributes,Augmentations augs,int event) throws XNIException {

  String normalizedValue=null;

  if (attributes != null) {

    for (int i=0; i < attributes.getLength(); i++) {

      normalizedValue=getSchemaDeterminedID(attributes,i);

      if (normalizedValue != null) {

        break;

      }

      normalizedValue=getChildrenSchemaDeterminedID(attributes,i);

      if (normalizedValue != null) {

        break;

      }

      normalizedValue=getDTDDeterminedID(attributes,i);

      if (normalizedValue != null) {

        break;

      }

    }

  }

  if (normalizedValue != null && normalizedValue.equals(fShortHandPointer)) {

    return true;

  }

  return false;

}

Location: ShortHandPointer.java

Content: 

public ShortHandPointer(){

}

Location: ShortHandPointer.java

Content: 

public ShortHandPointer(SymbolTable symbolTable){

  fSymbolTable=symbolTable;

}

