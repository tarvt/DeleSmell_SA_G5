Location: CachingParserPool.java

Content: 

/** 

 * Default constructor. 

 */

public CachingParserPool(){

  this(new SymbolTable(),new XMLGrammarPoolImpl());

}

Location: CachingParserPool.java

Content: 

/** 

 * Constructs a caching parser pool with the specified symbol table and grammar pool.

 * @param symbolTable The symbol table.

 * @param grammarPool The grammar pool.

 */

public CachingParserPool(SymbolTable symbolTable,XMLGrammarPool grammarPool){

  fSynchronizedSymbolTable=new SynchronizedSymbolTable(symbolTable);

  fSynchronizedGrammarPool=new SynchronizedGrammarPool(grammarPool);

}

Location: CachingParserPool.java

Content: 

/** 

 * Creates a new DOM parser. 

 */

public DOMParser createDOMParser(){

  SymbolTable symbolTable=fShadowSymbolTable ? new ShadowedSymbolTable(fSynchronizedSymbolTable) : fSynchronizedSymbolTable;

  XMLGrammarPool grammarPool=fShadowGrammarPool ? new ShadowedGrammarPool(fSynchronizedGrammarPool) : fSynchronizedGrammarPool;

  return new DOMParser(symbolTable,grammarPool);

}

Location: CachingParserPool.java

Content: 

/** 

 * Creates a new SAX parser. 

 */

public SAXParser createSAXParser(){

  SymbolTable symbolTable=fShadowSymbolTable ? new ShadowedSymbolTable(fSynchronizedSymbolTable) : fSynchronizedSymbolTable;

  XMLGrammarPool grammarPool=fShadowGrammarPool ? new ShadowedGrammarPool(fSynchronizedGrammarPool) : fSynchronizedGrammarPool;

  return new SAXParser(symbolTable,grammarPool);

}

Location: CachingParserPool.java

Content: 

/** 

 * Returns the grammar pool. 

 */

public XMLGrammarPool getXMLGrammarPool(){

  return fSynchronizedGrammarPool;

}

Location: CachingParserPool.java

Content: 

/** 

 * Sets whether new parser instance receive shadow copies of the main symbol table.

 * @param shadow If true, new parser instances use shadow copies of the main symbol table and are not allowed to add new symbols to the main symbol table. New symbols are added to the shadow symbol table and are local to the parser instance. If false, new parser instances are allowed to add new symbols to the main symbol table.

 */

public void setShadowSymbolTable(boolean shadow){

  fShadowSymbolTable=shadow;

}

