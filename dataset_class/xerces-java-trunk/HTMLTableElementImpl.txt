Location: HTMLTableElementImpl.java

Content: 

public synchronized HTMLElement createCaption(){

  HTMLElement section;

  section=getCaption();

  if (section != null)   return section;

  section=new HTMLTableCaptionElementImpl((HTMLDocumentImpl)getOwnerDocument(),"CAPTION");

  appendChild(section);

  return section;

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized HTMLElement createTFoot(){

  HTMLElement section;

  section=getTFoot();

  if (section != null)   return section;

  section=new HTMLTableSectionElementImpl((HTMLDocumentImpl)getOwnerDocument(),"TFOOT");

  appendChild(section);

  return section;

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized HTMLElement createTHead(){

  HTMLElement section;

  section=getTHead();

  if (section != null)   return section;

  section=new HTMLTableSectionElementImpl((HTMLDocumentImpl)getOwnerDocument(),"THEAD");

  appendChild(section);

  return section;

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized void deleteCaption(){

  Node old;

  old=getCaption();

  if (old != null)   removeChild(old);

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized void deleteTFoot(){

  Node old;

  old=getTFoot();

  if (old != null)   removeChild(old);

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized void deleteTHead(){

  Node old;

  old=getTHead();

  if (old != null)   removeChild(old);

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized HTMLTableCaptionElement getCaption(){

  Node child;

  child=getFirstChild();

  while (child != null) {

    if (child instanceof HTMLTableCaptionElement && child.getNodeName().equals("CAPTION"))     return (HTMLTableCaptionElement)child;

    child=child.getNextSibling();

  }

  return null;

}

Location: HTMLTableElementImpl.java

Content: 

public String getCellPadding(){

  return getAttribute("cellpadding");

}

Location: HTMLTableElementImpl.java

Content: 

public String getCellSpacing(){

  return getAttribute("cellspacing");

}

Location: HTMLTableElementImpl.java

Content: 

public String getFrame(){

  return capitalize(getAttribute("frame"));

}

Location: HTMLTableElementImpl.java

Content: 

public String getRules(){

  return capitalize(getAttribute("rules"));

}

Location: HTMLTableElementImpl.java

Content: 

public String getSummary(){

  return getAttribute("summary");

}

Location: HTMLTableElementImpl.java

Content: 

public HTMLCollection getTBodies(){

  if (_bodies == null)   _bodies=new HTMLCollectionImpl(this,HTMLCollectionImpl.TBODY);

  return _bodies;

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized HTMLTableSectionElement getTFoot(){

  Node child;

  child=getFirstChild();

  while (child != null) {

    if (child instanceof HTMLTableSectionElement && child.getNodeName().equals("TFOOT"))     return (HTMLTableSectionElement)child;

    child=child.getNextSibling();

  }

  return null;

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized HTMLTableSectionElement getTHead(){

  Node child;

  child=getFirstChild();

  while (child != null) {

    if (child instanceof HTMLTableSectionElement && child.getNodeName().equals("THEAD"))     return (HTMLTableSectionElement)child;

    child=child.getNextSibling();

  }

  return null;

}

Location: HTMLTableElementImpl.java

Content: 

/** 

 * Constructor requires owner document.

 * @param owner The owner HTML document

 */

public HTMLTableElementImpl(HTMLDocumentImpl owner,String name){

  super(owner,name);

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized void setCaption(HTMLTableCaptionElement caption){

  if (caption != null && !caption.getTagName().equals("CAPTION"))   throw new IllegalArgumentException("HTM016 Argument 'caption' is not an element of type <CAPTION>.");

  deleteCaption();

  if (caption != null)   appendChild(caption);

}

Location: HTMLTableElementImpl.java

Content: 

public void setCellPadding(String cellPadding){

  setAttribute("cellpadding",cellPadding);

}

Location: HTMLTableElementImpl.java

Content: 

public void setCellSpacing(String cellSpacing){

  setAttribute("cellspacing",cellSpacing);

}

Location: HTMLTableElementImpl.java

Content: 

public void setFrame(String frame){

  setAttribute("frame",frame);

}

Location: HTMLTableElementImpl.java

Content: 

public void setRules(String rules){

  setAttribute("rules",rules);

}

Location: HTMLTableElementImpl.java

Content: 

public void setSummary(String summary){

  setAttribute("summary",summary);

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized void setTFoot(HTMLTableSectionElement tFoot){

  if (tFoot != null && !tFoot.getTagName().equals("TFOOT"))   throw new IllegalArgumentException("HTM018 Argument 'tFoot' is not an element of type <TFOOT>.");

  deleteTFoot();

  if (tFoot != null)   appendChild(tFoot);

}

Location: HTMLTableElementImpl.java

Content: 

public synchronized void setTHead(HTMLTableSectionElement tHead){

  if (tHead != null && !tHead.getTagName().equals("THEAD"))   throw new IllegalArgumentException("HTM017 Argument 'tHead' is not an element of type <THEAD>.");

  deleteTHead();

  if (tHead != null)   appendChild(tHead);

}

