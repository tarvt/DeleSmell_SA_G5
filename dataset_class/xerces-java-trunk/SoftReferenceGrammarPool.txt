Location: SoftReferenceGrammarPool.java

Content: 

/** 

 * Removes the given entry from the pool

 * @param entry the entry to remove

 * @return The grammar attached to this entry

 */

private Grammar removeEntry(Entry entry){

  if (entry.prev != null) {

    entry.prev.next=entry.next;

  }

 else {

    fGrammars[entry.bucket]=entry.next;

  }

  if (entry.next != null) {

    entry.next.prev=entry.prev;

  }

  --fGrammarCount;

  entry.grammar.entry=null;

  return (Grammar)entry.grammar.get();

}

Location: SoftReferenceGrammarPool.java

Content: 

/** 

 * Constructs a grammar pool with a default number of buckets. 

 */

public SoftReferenceGrammarPool(){

  fGrammars=new Entry[TABLE_SIZE];

  fPoolIsLocked=false;

}

Location: SoftReferenceGrammarPool.java

Content: 

/** 

 * Constructs a grammar pool with a specified number of buckets. 

 */

public SoftReferenceGrammarPool(int initialCapacity){

  fGrammars=new Entry[initialCapacity];

  fPoolIsLocked=false;

}

