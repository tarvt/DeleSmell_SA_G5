Location: XMLParseException.java

Content: 

/** 

 * Returns the character offset. 

 */

public int getCharacterOffset(){

  return fCharacterOffset;

}

Location: XMLParseException.java

Content: 

/** 

 * Returns the row number. 

 */

public int getColumnNumber(){

  return fColumnNumber;

}

Location: XMLParseException.java

Content: 

/** 

 * Returns the expanded system identifier. 

 */

public String getExpandedSystemId(){

  return fExpandedSystemId;

}

Location: XMLParseException.java

Content: 

/** 

 * Returns the line number. 

 */

public int getLineNumber(){

  return fLineNumber;

}

Location: XMLParseException.java

Content: 

/** 

 * Returns the literal system identifier. 

 */

public String getLiteralSystemId(){

  return fLiteralSystemId;

}

Location: XMLParseException.java

Content: 

/** 

 * Constructs a parse exception. 

 */

public XMLParseException(XMLLocator locator,String message){

  super(message);

  if (locator != null) {

    fPublicId=locator.getPublicId();

    fLiteralSystemId=locator.getLiteralSystemId();

    fExpandedSystemId=locator.getExpandedSystemId();

    fBaseSystemId=locator.getBaseSystemId();

    fLineNumber=locator.getLineNumber();

    fColumnNumber=locator.getColumnNumber();

    fCharacterOffset=locator.getCharacterOffset();

  }

}

Location: XMLParseException.java

Content: 

/** 

 * Constructs a parse exception. 

 */

public XMLParseException(XMLLocator locator,String message,Exception exception){

  super(message,exception);

  if (locator != null) {

    fPublicId=locator.getPublicId();

    fLiteralSystemId=locator.getLiteralSystemId();

    fExpandedSystemId=locator.getExpandedSystemId();

    fBaseSystemId=locator.getBaseSystemId();

    fLineNumber=locator.getLineNumber();

    fColumnNumber=locator.getColumnNumber();

    fCharacterOffset=locator.getCharacterOffset();

  }

}

