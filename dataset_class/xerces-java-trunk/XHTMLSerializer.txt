Location: XHTMLSerializer.java

Content: 

/** 

 * Constructs a new serializer. The serializer cannot be used without calling  {@link #setOutputCharStream} or {@link #setOutputByteStream}first.

 */

public XHTMLSerializer(){

  super(true,new OutputFormat(Method.XHTML,null,false));

}

Location: XHTMLSerializer.java

Content: 

/** 

 * Constructs a new serializer. The serializer cannot be used without calling  {@link #setOutputCharStream} or {@link #setOutputByteStream}first.

 */

public XHTMLSerializer(OutputFormat format){

  super(true,format != null ? format : new OutputFormat(Method.XHTML,null,false));

}

Location: XHTMLSerializer.java

Content: 

/** 

 * Constructs a new serializer that writes to the specified output stream using the specified output format. If <tt>format</tt> is null, will use a default output format.

 * @param output The output stream to use

 * @param format The output format to use, null for the default

 */

public XHTMLSerializer(OutputStream output,OutputFormat format){

  super(true,format != null ? format : new OutputFormat(Method.XHTML,null,false));

  setOutputByteStream(output);

}

Location: XHTMLSerializer.java

Content: 

/** 

 * Constructs a new serializer that writes to the specified writer using the specified output format. If <tt>format</tt> is null, will use a default output format.

 * @param writer The writer to use

 * @param format The output format to use, null for the default

 */

public XHTMLSerializer(Writer writer,OutputFormat format){

  super(true,format != null ? format : new OutputFormat(Method.XHTML,null,false));

  setOutputCharStream(writer);

}

