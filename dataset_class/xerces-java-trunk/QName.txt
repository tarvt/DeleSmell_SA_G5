Location: QName.java

Content: 

/** 

 * Returns a clone of this object. 

 */

public Object clone(){

  return new QName(this);

}

Location: QName.java

Content: 

/** 

 * Returns true if the two objects are equal. 

 */

public boolean equals(Object object){

  if (object instanceof QName) {

    QName qname=(QName)object;

    if (qname.uri != null) {

      return uri == qname.uri && localpart == qname.localpart;

    }

 else     if (uri == null) {

      return rawname == qname.rawname;

    }

  }

  return false;

}

Location: QName.java

Content: 

/** 

 * Returns the hashcode for this object. 

 */

public int hashCode(){

  if (uri != null) {

    return uri.hashCode() + ((localpart != null) ? localpart.hashCode() : 0);

  }

  return (rawname != null) ? rawname.hashCode() : 0;

}

Location: QName.java

Content: 

/** 

 * Default constructor. 

 */

public QName(){

  hongshuai();

  prefix=null;

  localpart=null;

  rawname=null;

  uri=null;

}

Location: QName.java

Content: 

/** 

 * Constructs a copy of the specified QName. 

 */

public QName(QName qname){

  setValues(qname);

}

Location: QName.java

Content: 

/** 

 * Constructs a QName with the specified values. 

 */

public QName(String prefix,String localpart,String rawname,String uri){

  setValues(prefix,localpart,rawname,uri);

}

Location: QName.java

Content: 

/** 

 * Convenience method to set the values of the qname components.

 * @param qname The qualified name to be copied.

 */

public void setValues(QName qname){

  prefix=qname.prefix;

  localpart=qname.localpart;

  rawname=qname.rawname;

  uri=qname.uri;

}

Location: QName.java

Content: 

/** 

 * Convenience method to set the values of the qname components.

 * @param prefix    The qname prefix. (e.g. "a")

 * @param localpart The qname localpart. (e.g. "foo")

 * @param rawname   The qname rawname. (e.g. "a:foo")

 * @param uri       The URI binding. (e.g. "http://foo.com/mybinding")

 */

public void setValues(String prefix,String localpart,String rawname,String uri){

  this.prefix=prefix;

  this.localpart=localpart;

  this.rawname=rawname;

  this.uri=uri;

}

