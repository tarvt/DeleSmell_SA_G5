Location: XSDateTime.java

Content: 

/** 

 * @return days - cannot be negative;

 */

public int getDays();

Location: XSDateTime.java

Content: 

/** 

 * @return a Duration (if applicable otherwise null)

 */

public Duration getDuration();

Location: XSDateTime.java

Content: 

/** 

 * @return hours - cannot be negative;

 */

public int getHours();

Location: XSDateTime.java

Content: 

/** 

 * @return the original lexical value

 */

public String getLexicalValue();

Location: XSDateTime.java

Content: 

/** 

 * @return minutes - cannot be negative;

 */

public int getMinutes();

Location: XSDateTime.java

Content: 

/** 

 * @return months - can be negative only for duration types;For duration types, it returns years*12 + months

 */

public int getMonths();

Location: XSDateTime.java

Content: 

/** 

 * @return seconds - can be negative only for durations;For duration types, it returns days*24*3600 + hours*3600  + minutes*60 + seconds 

 */

public double getSeconds();

Location: XSDateTime.java

Content: 

/** 

 * @return timezone hours (for GMT-xx:xx this will be negative),

 */

public int getTimeZoneHours();

Location: XSDateTime.java

Content: 

/** 

 * @return timezone minutes (for GMT-xx:xx this will be negative),

 */

public int getTimeZoneMinutes();

Location: XSDateTime.java

Content: 

/** 

 * @return an un-normalized XMLGregorianCalendar (if applicable otherwise null)

 */

public XMLGregorianCalendar getXMLGregorianCalendar();

Location: XSDateTime.java

Content: 

/** 

 * @return years - can be negative for date-time related types;

 */

public int getYears();

Location: XSDateTime.java

Content: 

/** 

 * @return boolean (true when timezone is specified in the original lexical value)

 */

public boolean hasTimeZone();

Location: XSDateTime.java

Content: 

/** 

 * @return whether a date-time related object is normalized or not(value is not useful for types where timezone is not specified)

 */

public boolean isNormalized();

Location: XSDateTime.java

Content: 

/** 

 * @return a new date-time related object with normalized values(has no effect on objects already normalized)

 */

public XSDateTime normalize();

