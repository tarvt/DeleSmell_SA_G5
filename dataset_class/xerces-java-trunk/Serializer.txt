Location: Serializer.java

Content: 

/** 

 * Return a  {@link ContentHandler} interface into this serializer.If the serializer does not support the  {@link ContentHandler}interface, it should return null.

 */

public ContentHandler asContentHandler() throws IOException ;

Location: Serializer.java

Content: 

/** 

 * Return a  {@link DocumentHandler} interface into this serializer.If the serializer does not support the  {@link DocumentHandler}interface, it should return null.

 */

public DocumentHandler asDocumentHandler() throws IOException ;

Location: Serializer.java

Content: 

/** 

 * Return a  {@link DOMSerializer} interface into this serializer.If the serializer does not support the  {@link DOMSerializer}interface, it should return null.

 */

public DOMSerializer asDOMSerializer() throws IOException ;

Location: Serializer.java

Content: 

/** 

 * Specifies an output stream to which the document should be serialized. This method should not be called while the serializer is in the process of serializing a document.

 */

public void setOutputByteStream(OutputStream output);

Location: Serializer.java

Content: 

/** 

 * Specifies a writer to which the document should be serialized. This method should not be called while the serializer is in the process of serializing a document.

 */

public void setOutputCharStream(Writer output);

Location: Serializer.java

Content: 

/** 

 * Specifies an output format for this serializer. It the serializer has already been associated with an output format, it will switch to the new format. This method should not be called while the serializer is in the process of serializing a document.

 * @param format The output format to use

 */

public void setOutputFormat(OutputFormat format);

