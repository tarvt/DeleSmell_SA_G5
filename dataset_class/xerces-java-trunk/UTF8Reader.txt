Location: UTF8Reader.java

Content: 

/** 

 * Throws an exception for expected byte. 

 */

private void expectedByte(int position,int count) throws MalformedByteSequenceException {

  throw new MalformedByteSequenceException(fFormatter,fLocale,XMLMessageFormatter.XML_DOMAIN,"ExpectedByte",new Object[]{Integer.toString(position),Integer.toString(count)});

}

Location: UTF8Reader.java

Content: 

/** 

 * Throws an exception for invalid byte. 

 */

private void invalidByte(int position,int count,int c) throws MalformedByteSequenceException {

  throw new MalformedByteSequenceException(fFormatter,fLocale,XMLMessageFormatter.XML_DOMAIN,"InvalidByte",new Object[]{Integer.toString(position),Integer.toString(count)});

}

Location: UTF8Reader.java

Content: 

/** 

 * Throws an exception for invalid surrogate bits. 

 */

private void invalidSurrogate(int uuuuu) throws MalformedByteSequenceException {

  throw new MalformedByteSequenceException(fFormatter,fLocale,XMLMessageFormatter.XML_DOMAIN,"InvalidHighSurrogate",new Object[]{Integer.toHexString(uuuuu)});

}

Location: UTF8Reader.java

Content: 

/** 

 * Constructs a UTF-8 reader from the specified input stream using the default buffer size.  Primarily for testing.

 * @param inputStream The input stream.

 */

public UTF8Reader(InputStream inputStream){

  this(inputStream,DEFAULT_BUFFER_SIZE,new XMLMessageFormatter(),Locale.getDefault());

}

Location: UTF8Reader.java

Content: 

/** 

 * Constructs a UTF-8 reader from the specified input stream, buffer and MessageFormatter.

 * @param inputStream The input stream.

 * @param buffer      The byte buffer.

 * @param messageFormatter  the formatter for localizing/formatting errors.

 * @param locale    the Locale to use for messages

 */

public UTF8Reader(InputStream inputStream,byte[] buffer,MessageFormatter messageFormatter,Locale locale){

  fInputStream=inputStream;

  fBuffer=buffer;

  fFormatter=messageFormatter;

  fLocale=locale;

}

Location: UTF8Reader.java

Content: 

/** 

 * Constructs a UTF-8 reader from the specified input stream, buffer size and MessageFormatter.

 * @param inputStream The input stream.

 * @param size        The initial buffer size.

 * @param messageFormatter  the formatter for localizing/formatting errors.

 * @param locale    the Locale to use for messages

 */

public UTF8Reader(InputStream inputStream,int size,MessageFormatter messageFormatter,Locale locale){

  this(inputStream,new byte[size],messageFormatter,locale);

}

Location: UTF8Reader.java

Content: 

/** 

 * Constructs a UTF-8 reader from the specified input stream using the default buffer size and the given MessageFormatter.

 * @param inputStream The input stream.

 * @param messageFormatter  given MessageFormatter

 * @param locale    Locale to use for messages

 */

public UTF8Reader(InputStream inputStream,MessageFormatter messageFormatter,Locale locale){

  this(inputStream,DEFAULT_BUFFER_SIZE,messageFormatter,locale);

}

