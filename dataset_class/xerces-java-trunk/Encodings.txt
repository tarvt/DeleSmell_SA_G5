Location: Encodings.java

Content: 

/** 

 * @param encoding a MIME charset name, or null.

 */

static EncodingInfo getEncodingInfo(String encoding,boolean allowJavaNames) throws UnsupportedEncodingException {

  EncodingInfo eInfo=null;

  if (encoding == null) {

    if ((eInfo=(EncodingInfo)_encodings.get(DEFAULT_ENCODING)) != null)     return eInfo;

    eInfo=new EncodingInfo(EncodingMap.getJava2IANAMapping(DEFAULT_ENCODING),DEFAULT_ENCODING,LAST_PRINTABLE_UNICODE);

    _encodings.put(DEFAULT_ENCODING,eInfo);

    return eInfo;

  }

  encoding=encoding.toUpperCase(Locale.ENGLISH);

  String jName=EncodingMap.getIANA2JavaMapping(encoding);

  if (jName == null) {

    if (allowJavaNames) {

      EncodingInfo.testJavaEncodingName(encoding);

      if ((eInfo=(EncodingInfo)_encodings.get(encoding)) != null)       return eInfo;

      int i=0;

      for (; i < UNICODE_ENCODINGS.length; i++) {

        if (UNICODE_ENCODINGS[i].equalsIgnoreCase(encoding)) {

          eInfo=new EncodingInfo(EncodingMap.getJava2IANAMapping(encoding),encoding,LAST_PRINTABLE_UNICODE);

          break;

        }

      }

      if (i == UNICODE_ENCODINGS.length) {

        eInfo=new EncodingInfo(EncodingMap.getJava2IANAMapping(encoding),encoding,DEFAULT_LAST_PRINTABLE);

      }

      _encodings.put(encoding,eInfo);

      return eInfo;

    }

    throw new UnsupportedEncodingException(encoding);

  }

  if ((eInfo=(EncodingInfo)_encodings.get(jName)) != null)   return eInfo;

  int i=0;

  for (; i < UNICODE_ENCODINGS.length; i++) {

    if (UNICODE_ENCODINGS[i].equalsIgnoreCase(jName)) {

      eInfo=new EncodingInfo(encoding,jName,LAST_PRINTABLE_UNICODE);

      break;

    }

  }

  if (i == UNICODE_ENCODINGS.length) {

    eInfo=new EncodingInfo(encoding,jName,DEFAULT_LAST_PRINTABLE);

  }

  _encodings.put(jName,eInfo);

  return eInfo;

}

