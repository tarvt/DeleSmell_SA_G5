Location: PSVIElementNSImpl.java

Content: 

/** 

 * Construct an element node.

 */

public PSVIElementNSImpl(CoreDocumentImpl ownerDocument,String namespaceURI,String qualifiedName){

  super(ownerDocument,namespaceURI,qualifiedName);

}

Location: PSVIElementNSImpl.java

Content: 

/** 

 * Construct an element node.

 */

public PSVIElementNSImpl(CoreDocumentImpl ownerDocument,String namespaceURI,String qualifiedName,String localName){

  super(ownerDocument,namespaceURI,qualifiedName,localName);

}

Location: PSVIElementNSImpl.java

Content: 

/** 

 * Copy PSVI properties from another psvi item.

 * @param elem  the source of element PSVI items

 */

public void setPSVI(ElementPSVI elem){

  this.fDeclaration=elem.getElementDeclaration();

  this.fNotation=elem.getNotation();

  this.fValidationContext=elem.getValidationContext();

  this.fTypeDecl=elem.getTypeDefinition();

  this.fSchemaInformation=elem.getSchemaInformation();

  this.fValidity=elem.getValidity();

  this.fValidationAttempted=elem.getValidationAttempted();

  this.fErrorCodes=elem.getErrorCodes();

  this.fErrorMessages=elem.getErrorMessages();

  if (fTypeDecl instanceof XSSimpleTypeDefinition || fTypeDecl instanceof XSComplexTypeDefinition && ((XSComplexTypeDefinition)fTypeDecl).getContentType() == XSComplexTypeDefinition.CONTENTTYPE_SIMPLE) {

    this.fValue.copyFrom(elem.getSchemaValue());

  }

 else {

    this.fValue.reset();

  }

  this.fSpecified=elem.getIsSchemaSpecified();

  this.fNil=elem.getNil();

}

