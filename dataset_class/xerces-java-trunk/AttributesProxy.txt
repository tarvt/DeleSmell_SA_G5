Location: AttributesProxy.java

Content: 

public AttributesProxy(XMLAttributes attributes){

  fAttributes=attributes;

}

Location: AttributesProxy.java

Content: 

public String getName(int i){

  return fAttributes.getQName(i);

}

Location: AttributesProxy.java

Content: 

public boolean isDeclared(int index){

  if (index < 0 || index >= fAttributes.getLength()) {

    throw new ArrayIndexOutOfBoundsException(index);

  }

  return Boolean.TRUE.equals(fAttributes.getAugmentations(index).getItem(Constants.ATTRIBUTE_DECLARED));

}

Location: AttributesProxy.java

Content: 

public boolean isDeclared(String qName){

  int index=getIndex(qName);

  if (index == -1) {

    throw new IllegalArgumentException(qName);

  }

  return Boolean.TRUE.equals(fAttributes.getAugmentations(index).getItem(Constants.ATTRIBUTE_DECLARED));

}

Location: AttributesProxy.java

Content: 

public boolean isDeclared(String uri,String localName){

  int index=getIndex(uri,localName);

  if (index == -1) {

    throw new IllegalArgumentException(localName);

  }

  return Boolean.TRUE.equals(fAttributes.getAugmentations(index).getItem(Constants.ATTRIBUTE_DECLARED));

}

Location: AttributesProxy.java

Content: 

public boolean isSpecified(String qName){

  int index=getIndex(qName);

  if (index == -1) {

    throw new IllegalArgumentException(qName);

  }

  return fAttributes.isSpecified(index);

}

Location: AttributesProxy.java

Content: 

public boolean isSpecified(String uri,String localName){

  int index=getIndex(uri,localName);

  if (index == -1) {

    throw new IllegalArgumentException(localName);

  }

  return fAttributes.isSpecified(index);

}

Location: AttributesProxy.java

Content: 

/** 

 * Sets the XML attributes to be wrapped. 

 */

public void setAttributes(XMLAttributes attributes){

  fAttributes=attributes;

}

