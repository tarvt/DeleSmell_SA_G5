Location: DoubleDV.java

Content: 

public int compare(Object value1,Object value2){

  return ((XDouble)value1).compareTo((XDouble)value2);

}

Location: DoubleDV.java

Content: 

public boolean isIdentical(Object value1,Object value2){

  if (value2 instanceof XDouble) {

    return ((XDouble)value1).isIdentical((XDouble)value2);

  }

  return false;

}

Location: DoubleDV.java

Content: 

/** 

 * Returns true if it's possible that the given string represents a valid floating point value (excluding NaN, INF and -INF).

 */

static boolean isPossibleFP(String val){

  final int length=val.length();

  for (int i=0; i < length; ++i) {

    char c=val.charAt(i);

    if (!(c >= '0' && c <= '9' || c == '.' || c == '-' || c == '+' || c == 'E' || c == 'e')) {

      return false;

    }

  }

  return true;

}

