Location: MalformedByteSequenceException.java

Content: 

/** 

 * <p>Returns the replacement arguments for the error message or <code>null</code> if none exist.</p>

 * @return the replacement arguments for the error messageor <code>null</code> if none exist

 */

public Object[] getArguments(){

  return fArguments;

}

Location: MalformedByteSequenceException.java

Content: 

/** 

 * <p>Returns the error domain of the error message.</p>

 * @return the error domain

 */

public String getDomain(){

  return fDomain;

}

Location: MalformedByteSequenceException.java

Content: 

/** 

 * <p>Returns the localized message for this exception.</p>

 * @return the localized message for this exception.

 */

public synchronized String getMessage(){

  if (fMessage == null) {

    fMessage=fFormatter.formatMessage(fLocale,fKey,fArguments);

    fFormatter=null;

    fLocale=null;

  }

  return fMessage;

}

Location: MalformedByteSequenceException.java

Content: 

/** 

 * Constructs a MalformedByteSequenceException with the given parameters which may be passed to an error reporter to  generate a localized string for this exception.

 * @param formatter The MessageFormatter used for building the message text for this exception.

 * @param locale    The Locale for which messages are to be reported.

 * @param domain    The error domain.

 * @param key       The key of the error message.

 * @param arguments The replacement arguments for the error message,if needed.

 */

public MalformedByteSequenceException(MessageFormatter formatter,Locale locale,String domain,String key,Object[] arguments){

  fFormatter=formatter;

  fLocale=locale;

  fDomain=domain;

  fKey=key;

  fArguments=arguments;

}

