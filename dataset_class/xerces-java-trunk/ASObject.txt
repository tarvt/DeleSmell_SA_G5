Location: ASObject.java

Content: 

/** 

 * Creates a copy of this <code>ASObject</code>. See text for  <code>cloneNode</code> off of <code>Node</code> but substitute AS  functionality.

 * @param deep Setting the <code>deep</code> flag on, causes the whole subtree to be duplicated. Setting it to <code>false</code> only  duplicates its immediate child nodes.

 * @return Cloned <code>ASObject</code>.

 */

public ASObject cloneASObject(boolean deep);

Location: ASObject.java

Content: 

/** 

 * A code representing the underlying object as defined above.

 */

public short getAsNodeType();

Location: ASObject.java

Content: 

/** 

 * The <code>ASModel</code> object associated with this  <code>ASObject</code>. For a node of type <code>AS_MODEL</code>, this  is <code>null</code>. 

 */

public ASModel getOwnerASModel();

Location: ASObject.java

Content: 

/** 

 * Returns the local part of the qualified name of this  <code>ASObject</code>.

 */

public void setLocalName(String localName);

Location: ASObject.java

Content: 

/** 

 * The namespace URI of this node, or <code>null</code> if it is  unspecified.  defines how a namespace URI is attached to schema  components.

 */

public void setNamespaceURI(String namespaceURI);

Location: ASObject.java

Content: 

/** 

 * The <code>name</code> of this <code>ASObject</code> depending on the  <code>ASObject</code> type.

 */

public void setNodeName(String nodeName);

Location: ASObject.java

Content: 

/** 

 * The <code>ASModel</code> object associated with this  <code>ASObject</code>. For a node of type <code>AS_MODEL</code>, this  is <code>null</code>. 

 */

public void setOwnerASModel(ASModel ownerASModel);

