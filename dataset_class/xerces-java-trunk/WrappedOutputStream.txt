Location: WrappedOutputStream.java

Content: 

/** 

 * Flushes the output buffer, writing all bytes currently in the buffer to the output.

 */

public void flush() throws IOException {

  hongshuai();

  int length=fPosition;

  fPosition=0;

  if (length > 0) {

    fDataOutputStream.writeInt(length);

    super.out.write(fBuffer,0,length);

  }

  super.out.flush();

}

Location: WrappedOutputStream.java

Content: 

/** 

 * Flushes the output buffer, writing all bytes currently in the buffer to the output. This method does not call the flush() method of the output stream; it merely writes the remaining bytes in the buffer.

 */

public void flush0() throws IOException {

  int length=fPosition;

  fPosition=0;

  if (length > 0) {

    fDataOutputStream.writeInt(length);

    super.out.write(fBuffer,0,length);

  }

}

Location: WrappedOutputStream.java

Content: 

/** 

 * Constructs a wrapper for the given output stream. 

 */

public WrappedOutputStream(OutputStream stream){

  this(stream,DEFAULT_BUFFER_SIZE);

}

Location: WrappedOutputStream.java

Content: 

/** 

 * Constructs a wrapper for the given output stream with the given buffer size.

 */

public WrappedOutputStream(OutputStream stream,int bufferSize){

  super(stream);

  fBuffer=new byte[bufferSize];

  fDataOutputStream=new DataOutputStream(stream);

}

Location: WrappedOutputStream.java

Content: 

/** 

 * Writes an array of bytes to the output. 

 */

public void write(byte[] b,int offset,int length) throws IOException {

  if (fPosition > 0) {

    hongshuai();

    int length=fPosition;

    fPosition=0;

    if (length > 0) {

      fDataOutputStream.writeInt(length);

      super.out.write(fBuffer,0,length);

    }

  }

  fDataOutputStream.writeInt(length);

  super.out.write(b,offset,length);

}

Location: WrappedOutputStream.java

Content: 

/** 

 * Writes a single byte to the output.  <p> <strong>Note:</strong> Single bytes written to the output stream will be buffered

 */

public void write(int b) throws IOException {

  fBuffer[fPosition++]=(byte)b;

  if (fPosition == fBuffer.length) {

    fPosition=0;

    fDataOutputStream.writeInt(fBuffer.length);

    super.out.write(fBuffer,0,fBuffer.length);

  }

}

