Location: XSNamespaceItem.java

Content: 

/** 

 * Convenience method. Returns a top-level attribute declaration. 

 * @param name The name of the declaration.

 * @return A top-level attribute declaration or <code>null</code> if such a declaration does not exist. 

 */

public XSAttributeDeclaration getAttributeDeclaration(String name);

Location: XSNamespaceItem.java

Content: 

/** 

 * Convenience method. Returns a top-level attribute group definition. 

 * @param name The name of the definition.

 * @return A top-level attribute group definition or <code>null</code> if such a definition does not exist. 

 */

public XSAttributeGroupDefinition getAttributeGroup(String name);

Location: XSNamespaceItem.java

Content: 

/** 

 * [document location] - a list of location URIs for the documents that  contributed to the <code>XSModel</code>.

 */

public StringList getDocumentLocations();

Location: XSNamespaceItem.java

Content: 

/** 

 * Convenience method. Returns a top-level element declaration. 

 * @param name The name of the declaration.

 * @return A top-level element declaration or <code>null</code> if such a declaration does not exist. 

 */

public XSElementDeclaration getElementDeclaration(String name);

Location: XSNamespaceItem.java

Content: 

/** 

 * Convenience method. Returns an identity-constraint definition.

 * @param name The name of the definition.

 * @return An identity-constraint definition or <code>null</code> if such a declaration does not exist. 

 */

public XSIDCDefinition getIDCDefinition(String name);

Location: XSNamespaceItem.java

Content: 

/** 

 * Convenience method. Returns a top-level model group definition. 

 * @param name The name of the definition.

 * @return A top-level model group definition definition or <code>null</code> if such a definition does not exist. 

 */

public XSModelGroupDefinition getModelGroupDefinition(String name);

Location: XSNamespaceItem.java

Content: 

/** 

 * Convenience method. Returns a top-level notation declaration. 

 * @param name The name of the declaration.

 * @return A top-level notation declaration or <code>null</code> if such a declaration does not exist. 

 */

public XSNotationDeclaration getNotationDeclaration(String name);

Location: XSNamespaceItem.java

Content: 

/** 

 * [schema namespace]: A namespace name or <code>null</code> if absent.

 */

public String getSchemaNamespace();

Location: XSNamespaceItem.java

Content: 

/** 

 * Convenience method. Returns a top-level simple or complex type  definition. 

 * @param name The name of the definition.

 * @return An <code>XSTypeDefinition</code> or <code>null</code> if such a definition does not exist. 

 */

public XSTypeDefinition getTypeDefinition(String name);

