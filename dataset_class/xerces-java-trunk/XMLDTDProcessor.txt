Location: XMLDTDProcessor.java

Content: 

/** 

 * Checks that all elements referenced in content models have been declared. This method calls out to the error handler  to indicate warnings.

 */

private void checkDeclaredElements(DTDGrammar grammar){

  int elementIndex=grammar.getFirstElementDeclIndex();

  XMLContentSpec contentSpec=new XMLContentSpec();

  while (elementIndex >= 0) {

    int type=grammar.getContentSpecType(elementIndex);

    if (type == XMLElementDecl.TYPE_CHILDREN || type == XMLElementDecl.TYPE_MIXED) {

      checkDeclaredElements(grammar,elementIndex,grammar.getContentSpecIndex(elementIndex),contentSpec);

    }

    elementIndex=grammar.getNextElementDeclIndex(elementIndex);

  }

}

Location: XMLDTDProcessor.java

Content: 

/** 

 * Does a recursive (if necessary) check on the specified element's content spec to make sure that all children refer to declared elements.

 */

private void checkDeclaredElements(DTDGrammar grammar,int elementIndex,int contentSpecIndex,XMLContentSpec contentSpec){

  grammar.getContentSpec(contentSpecIndex,contentSpec);

  if (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_LEAF) {

    String value=(String)contentSpec.value;

    if (value != null && grammar.getElementDeclIndex(value) == -1) {

      fErrorReporter.reportError(XMLMessageFormatter.XML_DOMAIN,"UndeclaredElementInContentSpec",new Object[]{grammar.getElementDeclName(elementIndex).rawname,value},XMLErrorReporter.SEVERITY_WARNING);

    }

  }

 else   if ((contentSpec.type == XMLContentSpec.CONTENTSPECNODE_CHOICE) || (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_SEQ)) {

    final int leftNode=((int[])contentSpec.value)[0];

    final int rightNode=((int[])contentSpec.otherValue)[0];

    checkDeclaredElements(grammar,elementIndex,leftNode,contentSpec);

    checkDeclaredElements(grammar,elementIndex,rightNode,contentSpec);

  }

 else   if (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ZERO_OR_MORE || contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ZERO_OR_ONE || contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ONE_OR_MORE) {

    final int leftNode=((int[])contentSpec.value)[0];

    checkDeclaredElements(grammar,elementIndex,leftNode,contentSpec);

  }

}

Location: XMLDTDProcessor.java

Content: 

/** 

 * Check standalone entity reference.  Made static to make common between the validator and loader.

 * @param name

 * @param grammar    grammar to which entity belongs

 * @param tempEntityDecl    empty entity declaration to put results in

 * @param errorReporter     error reporter to send errors to

 * @throws XNIException Thrown by application to signal an error.

 */

protected static void checkStandaloneEntityRef(String name,DTDGrammar grammar,XMLEntityDecl tempEntityDecl,XMLErrorReporter errorReporter) throws XNIException {

  int entIndex=grammar.getEntityDeclIndex(name);

  if (entIndex > -1) {

    grammar.getEntityDecl(entIndex,tempEntityDecl);

    if (tempEntityDecl.inExternal) {

      errorReporter.reportError(XMLMessageFormatter.XML_DOMAIN,"MSG_REFERENCE_TO_EXTERNALLY_DECLARED_ENTITY_WHEN_STANDALONE",new Object[]{name},XMLErrorReporter.SEVERITY_ERROR);

    }

  }

}

Location: XMLDTDProcessor.java

Content: 

/** 

 * Normalize the attribute value of a non CDATA default attribute collapsing sequences of space characters (x20)

 * @param value The value to normalize

 * @return Whether the value was changed or not.

 */

private boolean normalizeDefaultAttrValue(XMLString value){

  boolean skipSpace=true;

  int current=value.offset;

  int end=value.offset + value.length;

  for (int i=value.offset; i < end; i++) {

    if (value.ch[i] == ' ') {

      if (!skipSpace) {

        value.ch[current++]=' ';

        skipSpace=true;

      }

 else {

      }

    }

 else {

      if (current != i) {

        value.ch[current]=value.ch[i];

      }

      current++;

      skipSpace=false;

    }

  }

  if (current != end) {

    if (skipSpace) {

      current--;

    }

    value.length=current - value.offset;

    return true;

  }

  return false;

}

Location: XMLDTDProcessor.java

Content: 

/** 

 * Default constructor. 

 */

public XMLDTDProcessor(){

}

