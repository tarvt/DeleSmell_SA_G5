Location: XMLGrammarPool.java

Content: 

/** 

 * <p>return the final set of grammars that the validator ended up with.   This method is called after the validation finishes. The application may then choose to cache some of the returned grammars. </p>

 * @param grammarType the type of the grammars being returned;

 * @param grammars an array containing the set of grammars beingreturned; order is not significant.

 */

public void cacheGrammars(String grammarType,Grammar[] grammars);

Location: XMLGrammarPool.java

Content: 

/** 

 * Removes all grammars from the pool.

 */

public void clear();

Location: XMLGrammarPool.java

Content: 

/** 

 * Causes the XMLGrammarPool not to store any grammars when the cacheGrammars(String, Grammar[[]) method is called.

 */

public void lockPool();

Location: XMLGrammarPool.java

Content: 

/** 

 * <p> This method requests that the application retrieve a grammar corresponding to the given GrammarIdentifier from its cache. If it cannot do so it must return null; the parser will then call the EntityResolver.  <strong>An application must not call its EntityResolver itself from this method; this may result in infinite recursions.</strong>

 * @param desc The description of the Grammar being requested.

 * @return the Grammar corresponding to this description or null ifno such Grammar is known.

 */

public Grammar retrieveGrammar(XMLGrammarDescription desc);

Location: XMLGrammarPool.java

Content: 

/** 

 * <p> retrieve the initial known set of grammars. this method is called by a validator before the validation starts. the application  can provide an initial set of grammars available to the current  validation attempt. </p>

 * @param grammarType the type of the grammar, from the<code>org.apache.xerces.xni.grammars.Grammar</code> interface.

 * @return the set of grammars the validator may put in its "bucket"

 */

public Grammar[] retrieveInitialGrammarSet(String grammarType);

Location: XMLGrammarPool.java

Content: 

/** 

 * Allows the XMLGrammarPool to store grammars when its cacheGrammars(String, Grammar[]) method is called.  This is the default state of the object.

 */

public void unlockPool();

