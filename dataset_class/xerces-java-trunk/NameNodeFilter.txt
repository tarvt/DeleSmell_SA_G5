Location: NameNodeFilter.java

Content: 

/** 

 * acceptNode determines if this filter accepts a node name or not. 

 */

public short acceptNode(Node n){

  if (fName == null || fMatch && n.getNodeName().equals(fName) || !fMatch && !n.getNodeName().equals(fName))   return FILTER_ACCEPT;

 else   return FILTER_REJECT;

}

Location: NameNodeFilter.java

Content: 

/** 

 * Return match value. 

 */

public boolean getMatch(){

  return this.fMatch;

}

Location: NameNodeFilter.java

Content: 

/** 

 * Return the name to compare with node name. If null, all node names   are successfully matched. 

 */

public String getName(){

  return this.fName;

}

Location: NameNodeFilter.java

Content: 

/** 

 * Controls whether the node name is accepted when it <b>does</b> match  the setName value, or when it <b>does not</b> match the setName value.  If the setName value is null this match value does not matter, and all names will match. If match is true, the node name is accepted when it matches.  If match is false, the node name is accepted when does not match. 

 */

public void setMatch(boolean match){

  this.fMatch=match;

}

Location: NameNodeFilter.java

Content: 

/** 

 * The name to compare with the node name. If null, all node names   are successfully matched. 

 */

public void setName(String name){

  this.fName=name;

}

