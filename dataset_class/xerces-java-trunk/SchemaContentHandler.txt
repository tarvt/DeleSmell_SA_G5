Location: SchemaContentHandler.java

Content: 

private void addNamespaceDeclarations(final int prefixCount){

  String prefix=null;

  String localpart=null;

  String rawname=null;

  String nsPrefix=null;

  String nsURI=null;

  for (int i=0; i < prefixCount; ++i) {

    nsPrefix=fNamespaceContext.getDeclaredPrefixAt(i);

    nsURI=fNamespaceContext.getURI(nsPrefix);

    if (nsPrefix.length() > 0) {

      prefix=XMLSymbols.PREFIX_XMLNS;

      localpart=nsPrefix;

      fStringBuffer.clear();

      fStringBuffer.append(prefix);

      fStringBuffer.append(':');

      fStringBuffer.append(localpart);

      rawname=fSymbolTable.addSymbol(fStringBuffer.ch,fStringBuffer.offset,fStringBuffer.length);

    }

 else {

      prefix=XMLSymbols.EMPTY_STRING;

      localpart=XMLSymbols.PREFIX_XMLNS;

      rawname=XMLSymbols.PREFIX_XMLNS;

    }

    fAttributeQName.setValues(prefix,localpart,rawname,NamespaceContext.XMLNS_URI);

    fAttributes.addAttribute(fAttributeQName,XMLSymbols.fCDATASymbol,(nsURI != null) ? nsURI : XMLSymbols.EMPTY_STRING);

  }

}

Location: SchemaContentHandler.java

Content: 

static void convertToSAXException(XNIException e) throws SAXException {

  Exception ex=e.getException();

  if (ex == null) {

    throw new SAXException(e.getMessage());

  }

  if (ex instanceof SAXException) {

    throw (SAXException)ex;

  }

  throw new SAXException(ex);

}

Location: SchemaContentHandler.java

Content: 

static void convertToSAXParseException(XMLParseException e) throws SAXException {

  Exception ex=e.getException();

  if (ex == null) {

    LocatorImpl locatorImpl=new LocatorImpl();

    locatorImpl.setPublicId(e.getPublicId());

    locatorImpl.setSystemId(e.getExpandedSystemId());

    locatorImpl.setLineNumber(e.getLineNumber());

    locatorImpl.setColumnNumber(e.getColumnNumber());

    throw new SAXParseException(e.getMessage(),locatorImpl);

  }

  if (ex instanceof SAXException) {

    throw (SAXException)ex;

  }

  throw new SAXException(ex);

}

Location: SchemaContentHandler.java

Content: 

public void reset(SchemaDOMParser schemaDOMParser,SymbolTable symbolTable,boolean namespacePrefixes,boolean stringsInternalized){

  fSchemaDOMParser=schemaDOMParser;

  fSymbolTable=symbolTable;

  fNamespacePrefixes=namespacePrefixes;

  fStringsInternalized=stringsInternalized;

}

Location: SchemaContentHandler.java

Content: 

/** 

 * <p>Constructs an SchemaContentHandler.</p>

 */

public SchemaContentHandler(){

}

