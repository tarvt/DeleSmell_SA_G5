Location: UTF16Reader.java

Content: 

/** 

 * Throws an exception for expected byte. 

 */

private void expectedTwoBytes() throws MalformedByteSequenceException {

  throw new MalformedByteSequenceException(fFormatter,fLocale,XMLMessageFormatter.XML_DOMAIN,"ExpectedByte",new Object[]{"2","2"});

}

Location: UTF16Reader.java

Content: 

/** 

 * Decodes UTF-16BE 

 */

private void processBE(final char ch[],int offset,final int count){

  int curPos=0;

  for (int i=0; i < count; ++i) {

    final int b0=fBuffer[curPos++] & 0xff;

    final int b1=fBuffer[curPos++] & 0xff;

    ch[offset++]=(char)((b0 << 8) | b1);

  }

}

Location: UTF16Reader.java

Content: 

/** 

 * Decodes UTF-16LE 

 */

private void processLE(final char ch[],int offset,final int count){

  int curPos=0;

  for (int i=0; i < count; ++i) {

    final int b0=fBuffer[curPos++] & 0xff;

    final int b1=fBuffer[curPos++] & 0xff;

    ch[offset++]=(char)((b1 << 8) | b0);

  }

}

Location: UTF16Reader.java

Content: 

/** 

 * Constructs a UTF-16 reader from the specified input stream  using the default buffer size. Primarily for testing.

 * @param inputStream The input stream.

 * @param isBigEndian The byte order.

 */

public UTF16Reader(InputStream inputStream,boolean isBigEndian){

  this(inputStream,DEFAULT_BUFFER_SIZE,isBigEndian,new XMLMessageFormatter(),Locale.getDefault());

}

Location: UTF16Reader.java

Content: 

/** 

 * Constructs a UTF-16 reader from the specified input stream  using the default buffer size and the given MessageFormatter.

 * @param inputStream The input stream.

 * @param isBigEndian The byte order.

 */

public UTF16Reader(InputStream inputStream,boolean isBigEndian,MessageFormatter messageFormatter,Locale locale){

  this(inputStream,DEFAULT_BUFFER_SIZE,isBigEndian,messageFormatter,locale);

}

Location: UTF16Reader.java

Content: 

/** 

 * Constructs a UTF-16 reader from the specified input stream,  buffer and MessageFormatter.

 * @param inputStream       The input stream.

 * @param buffer            The byte buffer.

 * @param isBigEndian       The byte order.

 * @param messageFormatter  Given MessageFormatter

 * @param locale            Locale to use for messages

 */

public UTF16Reader(InputStream inputStream,byte[] buffer,boolean isBigEndian,MessageFormatter messageFormatter,Locale locale){

  fInputStream=inputStream;

  fBuffer=buffer;

  fIsBigEndian=isBigEndian;

  fFormatter=messageFormatter;

  fLocale=locale;

}

Location: UTF16Reader.java

Content: 

/** 

 * Constructs a UTF-16 reader from the specified input stream  and buffer size and given MessageFormatter.

 * @param inputStream       The input stream.

 * @param size              The initial buffer size.

 * @param isBigEndian       The byte order.

 * @param messageFormatter  Given MessageFormatter

 * @param locale            Locale to use for messages

 */

public UTF16Reader(InputStream inputStream,int size,boolean isBigEndian,MessageFormatter messageFormatter,Locale locale){

  this(inputStream,new byte[size],isBigEndian,messageFormatter,locale);

}

