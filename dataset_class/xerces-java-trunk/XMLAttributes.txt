Location: XMLAttributes.java

Content: 

/** 

 * Adds an attribute. The attribute's non-normalized value of the attribute will have the same value as the attribute value until set using the <code>setNonNormalizedValue</code> method. Also, the added attribute will be marked as specified in the XML instance document unless set otherwise using the <code>setSpecified</code> method. <p> <strong>Note:</strong> If an attribute of the same name already exists, the old values for the attribute are replaced by the new values.

 * @param attrName  The attribute name.

 * @param attrType  The attribute type. The type name is determined bythe type specified for this attribute in the DTD. For example: "CDATA", "ID", "NMTOKEN", etc. However, attributes of type enumeration will have the type value specified as the pipe ('|') separated list of the enumeration values prefixed by an open  parenthesis and suffixed by a close parenthesis. For example: "(true|false)".

 * @param attrValue The attribute value.

 * @return Returns the attribute index.

 * @see #setNonNormalizedValue

 * @see #setSpecified

 */

public int addAttribute(QName attrName,String attrType,String attrValue);

Location: XMLAttributes.java

Content: 

/** 

 * Look up an augmentation by attribute's index.

 * @param attributeIndex The attribute index.

 * @return Augmentations

 */

public Augmentations getAugmentations(int attributeIndex);

Location: XMLAttributes.java

Content: 

/** 

 * Look up an augmentation by XML 1.0 qualified name. <p>

 * @param qName The XML 1.0 qualified name.

 * @return Augmentations

 */

public Augmentations getAugmentations(String qName);

Location: XMLAttributes.java

Content: 

/** 

 * Look up an augmentation by namespace name.

 * @param uri       The Namespace URI, or the empty string ifthe name has no Namespace URI.

 * @param localPart

 * @return Augmentations

 */

public Augmentations getAugmentations(String uri,String localPart);

Location: XMLAttributes.java

Content: 

/** 

 * Sets the fields in the given QName structure with the values of the attribute name at the specified index.

 * @param attrIndex The attribute index.

 * @param attrName  The attribute name structure to fill in.

 */

public void getName(int attrIndex,QName attrName);

Location: XMLAttributes.java

Content: 

/** 

 * Returns the non-normalized value of the attribute at the specified index. If no non-normalized value is set, this method will return the same value as the <code>getValue(int)</code> method.

 * @param attrIndex The attribute index.

 */

public String getNonNormalizedValue(int attrIndex);

Location: XMLAttributes.java

Content: 

/** 

 * Returns the prefix of the attribute at the specified index.

 * @param index The index of the attribute.

 */

public String getPrefix(int index);

Location: XMLAttributes.java

Content: 

/** 

 * Returns true if the attribute is specified in the instance document.

 * @param attrIndex The attribute index.

 */

public boolean isSpecified(int attrIndex);

Location: XMLAttributes.java

Content: 

/** 

 * Removes all of the attributes. This method will also remove all entities associated to the attributes.

 */

public void removeAllAttributes();

Location: XMLAttributes.java

Content: 

/** 

 * Sets the augmentations of the attribute at the specified index.

 * @param attrIndex The attribute index.

 * @param augs      The augmentations.

 */

public void setAugmentations(int attrIndex,Augmentations augs);

Location: XMLAttributes.java

Content: 

/** 

 * Sets the name of the attribute at the specified index.

 * @param attrIndex The attribute index.

 * @param attrName  The new attribute name.

 */

public void setName(int attrIndex,QName attrName);

Location: XMLAttributes.java

Content: 

/** 

 * Sets the non-normalized value of the attribute at the specified index.

 * @param attrIndex The attribute index.

 * @param attrValue The new non-normalized attribute value.

 */

public void setNonNormalizedValue(int attrIndex,String attrValue);

Location: XMLAttributes.java

Content: 

/** 

 * Sets whether an attribute is specified in the instance document or not.

 * @param attrIndex The attribute index.

 * @param specified True if the attribute is specified in the instancedocument.

 */

public void setSpecified(int attrIndex,boolean specified);

Location: XMLAttributes.java

Content: 

/** 

 * Sets the type of the attribute at the specified index.

 * @param attrIndex The attribute index.

 * @param attrType  The attribute type. The type name is determined bythe type specified for this attribute in the DTD. For example: "CDATA", "ID", "NMTOKEN", etc. However, attributes of type enumeration will have the type value specified as the pipe ('|') separated list of the enumeration values prefixed by an open  parenthesis and suffixed by a close parenthesis. For example: "(true|false)".

 */

public void setType(int attrIndex,String attrType);

Location: XMLAttributes.java

Content: 

/** 

 * Sets the value of the attribute at the specified index. This method will overwrite the non-normalized value of the attribute.

 * @param attrIndex The attribute index.

 * @param attrValue The new attribute value.

 * @see #setNonNormalizedValue

 */

public void setValue(int attrIndex,String attrValue);

