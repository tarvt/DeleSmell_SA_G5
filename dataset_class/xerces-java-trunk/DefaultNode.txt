Location: DefaultNode.java

Content: 

public Node appendChild(Node newChild) throws DOMException {

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public Node cloneNode(boolean deep){

  return null;

}

Location: DefaultNode.java

Content: 

public short compareDocumentPosition(Node other){

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public DefaultNode(){

}

Location: DefaultNode.java

Content: 

public NodeList getChildNodes(){

  return null;

}

Location: DefaultNode.java

Content: 

public String getLocalName(){

  return null;

}

Location: DefaultNode.java

Content: 

public short getNodeType(){

  return -1;

}

Location: DefaultNode.java

Content: 

public String getTextContent() throws DOMException {

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public Object getUserData(String key){

  return null;

}

Location: DefaultNode.java

Content: 

public Node insertBefore(Node newChild,Node refChild) throws DOMException {

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public boolean isDefaultNamespace(String namespaceURI){

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public boolean isEqualNode(Node arg){

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public boolean isSameNode(Node other){

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public boolean isSupported(String feature,String version){

  return false;

}

Location: DefaultNode.java

Content: 

public String lookupNamespaceURI(String prefix){

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public String lookupPrefix(String namespaceURI){

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public Node removeChild(Node oldChild) throws DOMException {

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public Node replaceChild(Node newChild,Node oldChild) throws DOMException {

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public void setNodeValue(String nodeValue) throws DOMException {

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public void setPrefix(String prefix) throws DOMException {

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public void setTextContent(String textContent) throws DOMException {

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

Location: DefaultNode.java

Content: 

public Object setUserData(String key,Object data,UserDataHandler handler){

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,"Method not supported");

}

