Location: DTDParser.java

Content: 

/** 

 * A referenced element in a children content model.

 * @param elementName The name of the referenced element.

 * @throws XNIException Thrown by handler to signal an error.

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_CHILDREN

 */

public void childrenElement(String elementName) throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * The end of a children group. <p> <strong>Note:</strong> This method is only called after a call to the startContentModel method where the type is TYPE_CHILDREN.

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_CHILDREN

 */

public void childrenEndGroup() throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * The occurrence count for a child in a children content model. <p> <strong>Note:</strong> This method is only called after a call to the startContentModel method where the type is TYPE_CHILDREN.

 * @param occurrence The occurrence count for the last children elementor children group.

 * @throws XNIException Thrown by handler to signal an error.

 * @see XMLDTDContentModelHandler#OCCURS_ZERO_OR_ONE

 * @see XMLDTDContentModelHandler#OCCURS_ZERO_OR_MORE

 * @see XMLDTDContentModelHandler#OCCURS_ONE_OR_MORE

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_CHILDREN

 */

public void childrenOccurrence(short occurrence) throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * The separator between choices or sequences of a children content model. <p> <strong>Note:</strong> This method is only called after a call to the startContentModel method where the type is TYPE_CHILDREN.

 * @param separator The type of children separator.

 * @throws XNIException Thrown by handler to signal an error.

 * @see XMLDTDContentModelHandler#SEPARATOR_CHOICE

 * @see XMLDTDContentModelHandler#SEPARATOR_SEQUENCE

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_CHILDREN

 */

public void childrenSeparator(short separator) throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * The start of a children group. <p> <strong>Note:</strong> This method is only called after a call to the startContentModel method where the type is TYPE_CHILDREN. <p> <strong>Note:</strong> Children groups can be nested and have associated occurrence counts.

 * @throws XNIException Thrown by handler to signal an error.

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_CHILDREN

 */

public void childrenStartGroup() throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * @param symbolTable 

 */

public DTDParser(SymbolTable symbolTable){

  super(symbolTable);

}

Location: DTDParser.java

Content: 

/** 

 * The end of a content model.

 * @throws XNIException Thrown by handler to signal an error.

 */

public void endContentModel() throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * This method notifies the end of an entity. The DTD has the pseudo-name of "[dtd]" and parameter entity names start with '%'. <p> <strong>Note:</strong> Since the DTD is an entity, the handler will be notified of the end of the DTD entity by calling the endEntity method with the entity name "[dtd]" <em>after</em> calling the endDTD method.

 * @param name The name of the entity.

 * @throws XNIException Thrown by handler to signal an error.

 */

public void endEntity(String name,Augmentations augmentations) throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * getDTDGrammar

 * @return the grammar created by this parser

 */

public DTDGrammar getDTDGrammar(){

  return null;

}

Location: DTDParser.java

Content: 

/** 

 * A referenced element in a mixed content model. If the mixed content  model only allows text content, then this method will not be called for that model. However, if this method is called for a mixed content model, then the zero or more occurrence count is implied. <p> <strong>Note:</strong> This method is only called after a call to  the startContentModel method where the type is TYPE_MIXED.

 * @param elementName The name of the referenced element. 

 * @throws XNIException Thrown by handler to signal an error.

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_MIXED

 */

public void mixedElement(String elementName) throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * The start of a content model. Depending on the type of the content model, specific methods may be called between the call to the startContentModel method and the call to the endContentModel method.

 * @param elementName The name of the element.

 * @param type        The content model type.

 * @throws XNIException Thrown by handler to signal an error.

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_EMPTY

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_ANY

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_MIXED

 * @see org.apache.xerces.impl.dtd.XMLElementDecl#TYPE_CHILDREN

 */

public void startContentModel(String elementName,short type) throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * This method notifies of the start of an entity. The DTD has the  pseudo-name of "[dtd]" and parameter entity names start with '%'. <p> <strong>Note:</strong> Since the DTD is an entity, the handler will be notified of the start of the DTD entity by calling the startEntity method with the entity name "[dtd]" <em>before</em> calling the startDTD method.

 * @param name     The name of the entity.

 * @param publicId The public identifier of the entity if the entityis external, null otherwise.

 * @param systemId The system identifier of the entity if the entityis external, null otherwise.

 * @param encoding The auto-detected IANA encoding name of the entitystream. This value will be null in those situations where the entity encoding is not auto-detected (e.g. internal parameter entities).

 * @throws XNIException Thrown by handler to signal an error.

 */

public void startEntity(String name,String publicId,String systemId,String encoding) throws XNIException {

}

Location: DTDParser.java

Content: 

/** 

 * Notifies of the presence of a TextDecl line in an entity. If present, this method will be called immediately following the startEntity call. <p> <strong>Note:</strong> This method is only called for external parameter entities referenced in the DTD.

 * @param version  The XML version, or null if not specified.

 * @param encoding The IANA encoding name of the entity.

 * @throws XNIException Thrown by handler to signal an error.

 */

public void textDecl(String version,String encoding) throws XNIException {

}

