Location: StAXValidatorHelper.java

Content: 

final XMLEvent getCurrentEvent(){

  return fCurrentEvent;

}

Location: StAXValidatorHelper.java

Content: 

final EntityDeclaration getEntityDeclaration(String name){

  return (fEntities != null) ? (EntityDeclaration)fEntities.get(name) : null;

}

Location: StAXValidatorHelper.java

Content: 

/** 

 * Copies entity declarations into a hash map. 

 */

final void processEntityDeclarations(List entityDecls){

  int size=(entityDecls != null) ? entityDecls.size() : 0;

  if (size > 0) {

    if (fEntities == null) {

      fEntities=new HashMap();

    }

    for (int i=0; i < size; ++i) {

      EntityDeclaration decl=(EntityDeclaration)entityDecls.get(i);

      fEntities.put(decl.getName(),decl);

    }

  }

}

Location: StAXValidatorHelper.java

Content: 

/** 

 * Sets up handler for <code>StAXResult</code>.

 */

private void setupStAXResultHandler(StAXResult result){

  if (result == null) {

    fStAXValidatorHandler=null;

    fSchemaValidator.setDocumentHandler(null);

    return;

  }

  XMLStreamWriter writer=result.getXMLStreamWriter();

  if (writer != null) {

    if (fStAXStreamResultBuilder == null) {

      fStAXStreamResultBuilder=new StAXStreamResultBuilder(fNamespaceContext);

    }

    fStAXValidatorHandler=fStAXStreamResultBuilder;

    fStAXStreamResultBuilder.setStAXResult(result);

  }

 else {

    if (fStAXEventResultBuilder == null) {

      fStAXEventResultBuilder=new StAXEventResultBuilder(this,fNamespaceContext);

    }

    fStAXValidatorHandler=fStAXEventResultBuilder;

    fStAXEventResultBuilder.setStAXResult(result);

  }

  fSchemaValidator.setDocumentHandler(fStAXValidatorHandler);

}

Location: StAXValidatorHelper.java

Content: 

/** 

 * Setup for validation. 

 */

final void setup(Location location,StAXResult result,boolean stringsInternalized){

  fDepth=0;

  fComponentManager.reset();

  setupStAXResultHandler(result);

  fValidationManager.setEntityState(this);

  if (fEntities != null && !fEntities.isEmpty()) {

    fEntities.clear();

  }

  fStAXLocationWrapper.setLocation(location);

  fErrorReporter.setDocumentLocator(fStAXLocationWrapper);

  fStringsInternalized=stringsInternalized;

}

Location: StAXValidatorHelper.java

Content: 

public StAXValidatorHelper(XMLSchemaValidatorComponentManager componentManager){

  fComponentManager=componentManager;

  fErrorReporter=(XMLErrorReporter)fComponentManager.getProperty(ERROR_REPORTER);

  fSchemaValidator=(XMLSchemaValidator)fComponentManager.getProperty(SCHEMA_VALIDATOR);

  fSymbolTable=(SymbolTable)fComponentManager.getProperty(SYMBOL_TABLE);

  fValidationManager=(ValidationManager)fComponentManager.getProperty(VALIDATION_MANAGER);

  fNamespaceContext=new JAXPNamespaceContextWrapper(fSymbolTable);

  fNamespaceContext.setDeclaredPrefixes(fDeclaredPrefixes);

}

