Location: UnparsedEntityCheckingTest.java

Content: 

private void checkInvalid(){

  assertError(UNDECLARED_ENTITY);

  assertValidity(ItemPSVI.VALIDITY_INVALID,fRootNode.getValidity());

  assertValidationAttempted(ItemPSVI.VALIDATION_FULL,fRootNode.getValidationAttempted());

  assertElementName("A",fRootNode.getElementDeclaration().getName());

  assertTypeName("X",fRootNode.getTypeDefinition().getName());

}

Location: UnparsedEntityCheckingTest.java

Content: 

public void testDefaultInvalid(){

  ((PSVIElementNSImpl)fRootNode).setAttributeNS(null,"unparsedEntityAttr","invalid");

  try {

    validateDocument();

  }

 catch (  Exception e) {

    Assert.fail("Validation failed: " + e.getMessage());

  }

  checkInvalid();

}

Location: UnparsedEntityCheckingTest.java

Content: 

public void testDefaultValid(){

  try {

    validateDocument();

  }

 catch (  Exception e) {

    Assert.fail("Validation failed: " + e.getMessage());

  }

  checkDefault();

}

Location: UnparsedEntityCheckingTest.java

Content: 

public void testSetFalseInvalid(){

  ((PSVIElementNSImpl)fRootNode).setAttributeNS(null,"unparsedEntityAttr","invalid");

  try {

    fValidator.setFeature(UNPARSED_ENTITY_CHECKING,false);

  }

 catch (  SAXException e) {

    Assert.fail("Error setting feature.");

  }

  try {

    validateDocument();

  }

 catch (  Exception e) {

    Assert.fail("Validation failed: " + e.getMessage());

  }

  checkDefault();

}

Location: UnparsedEntityCheckingTest.java

Content: 

public void testSetFalseValid(){

  try {

    fValidator.setFeature(UNPARSED_ENTITY_CHECKING,false);

  }

 catch (  SAXException e) {

    Assert.fail("Error setting feature.");

  }

  try {

    validateDocument();

  }

 catch (  Exception e) {

    Assert.fail("Validation failed: " + e.getMessage());

  }

  checkDefault();

}

Location: UnparsedEntityCheckingTest.java

Content: 

public void testSetTrueInvalid(){

  ((PSVIElementNSImpl)fRootNode).setAttributeNS(null,"unparsedEntityAttr","invalid");

  try {

    fValidator.setFeature(UNPARSED_ENTITY_CHECKING,true);

  }

 catch (  SAXException e) {

    Assert.fail("Error setting feature.");

  }

  try {

    validateDocument();

  }

 catch (  Exception e) {

    Assert.fail("Validation failed: " + e.getMessage());

  }

  checkInvalid();

}

Location: UnparsedEntityCheckingTest.java

Content: 

public void testSetTrueValid(){

  try {

    fValidator.setFeature(UNPARSED_ENTITY_CHECKING,true);

  }

 catch (  SAXException e) {

    Assert.fail("Error setting feature.");

  }

  try {

    validateDocument();

  }

 catch (  Exception e) {

    Assert.fail("Validation failed: " + e.getMessage());

  }

  checkDefault();

}

Location: UnparsedEntityCheckingTest.java

Content: 

public UnparsedEntityCheckingTest(String name){

  super(name);

}

