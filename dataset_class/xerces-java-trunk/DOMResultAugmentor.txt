Location: DOMResultAugmentor.java

Content: 

public void cdata(CDATASection node) throws XNIException {

}

Location: DOMResultAugmentor.java

Content: 

public void characters(Text node) throws XNIException {

}

Location: DOMResultAugmentor.java

Content: 

public void doctypeDecl(DocumentType node) throws XNIException {

}

Location: DOMResultAugmentor.java

Content: 

public DOMResultAugmentor(DOMValidatorHelper helper){

  fDOMValidatorHelper=helper;

}

Location: DOMResultAugmentor.java

Content: 

/** 

 * Returns whether the given attribute is an ID type. 

 */

private boolean processAttributePSVI(AttrImpl attr,AttributePSVI attrPSVI){

  if (fStorePSVI) {

    ((PSVIAttrNSImpl)attr).setPSVI(attrPSVI);

  }

  Object type=attrPSVI.getMemberTypeDefinition();

  if (type == null) {

    type=attrPSVI.getTypeDefinition();

    if (type != null) {

      attr.setType(type);

      return ((XSSimpleType)type).isIDType();

    }

  }

 else {

    attr.setType(type);

    return ((XSSimpleType)type).isIDType();

  }

  return false;

}

Location: DOMResultAugmentor.java

Content: 

public void setDOMResult(DOMResult result){

  fIgnoreChars=false;

  if (result != null) {

    final Node target=result.getNode();

    fDocument=(target.getNodeType() == Node.DOCUMENT_NODE) ? (Document)target : target.getOwnerDocument();

    fDocumentImpl=(fDocument instanceof CoreDocumentImpl) ? (CoreDocumentImpl)fDocument : null;

    fStorePSVI=(fDocument instanceof PSVIDocumentImpl);

    return;

  }

  fDocument=null;

  fDocumentImpl=null;

  fStorePSVI=false;

}

