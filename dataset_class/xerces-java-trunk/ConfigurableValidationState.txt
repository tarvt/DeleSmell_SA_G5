Location: ConfigurableValidationState.java

Content: 

/** 

 * Adds the IDREF, if ID/IDREF checking is enabled.

 * @param name the IDREF to add

 */

public void addIdRef(String name){

  if (fIdIdrefChecking) {

    super.addIdRef(name);

  }

}

Location: ConfigurableValidationState.java

Content: 

/** 

 * Adds the ID, if ID/IDREF checking is enabled.

 * @param name the ID to add

 */

public void addId(String name){

  if (fIdIdrefChecking) {

    super.addId(name);

  }

}

Location: ConfigurableValidationState.java

Content: 

/** 

 * Checks if all IDREFs have a corresponding ID.

 * @return null, if ID/IDREF checking is turned offotherwise, returns the value of the super implementation

 */

public Iterator checkIDRefID(){

  return (fIdIdrefChecking) ? super.checkIDRefID() : null;

}

Location: ConfigurableValidationState.java

Content: 

/** 

 * Creates a new ConfigurableValidationState. By default, error checking for both ID/IDREFs  and unparsed entities are turned on.

 */

public ConfigurableValidationState(){

  super();

  fIdIdrefChecking=true;

  fUnparsedEntityChecking=true;

}

Location: ConfigurableValidationState.java

Content: 

/** 

 * Checks if an ID has already been declared.

 * @return false, if ID/IDREF checking is turned offotherwise, returns the value of the super implementation

 */

public boolean isIdDeclared(String name){

  return (fIdIdrefChecking) ? super.isIdDeclared(name) : false;

}

Location: ConfigurableValidationState.java

Content: 

/** 

 * Turns checking for ID/IDREF errors on and off.

 * @param setting true to turn on error checking,false to turn off error checking

 */

public void setIdIdrefChecking(boolean setting){

  fIdIdrefChecking=setting;

}

Location: ConfigurableValidationState.java

Content: 

/** 

 * Turns checking for unparsed entity errors on and off.

 * @param setting true to turn on error checking,false to turn off error checking

 */

public void setUnparsedEntityChecking(boolean setting){

  fUnparsedEntityChecking=setting;

}

