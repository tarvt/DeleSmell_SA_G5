Location: XSNamedMapImpl.java

Content: 

public boolean containsKey(Object key){

  return (get(key) != null);

}

Location: XSNamedMapImpl.java

Content: 

public synchronized Set entrySet(){

  if (fEntrySet == null) {

    final int length=getLength();

    final XSNamedMapEntry[] entries=new XSNamedMapEntry[length];

    for (int i=0; i < length; ++i) {

      XSObject xso=item(i);

      entries[i]=new XSNamedMapEntry(new QName(xso.getNamespace(),xso.getName()),xso);

    }

    fEntrySet=new AbstractSet(){

      public Iterator iterator(){

        return new Iterator(){

          private int index=0;

          public boolean hasNext(){

            return (index < length);

          }

          public Object next(){

            if (index < length) {

              return entries[index++];

            }

            throw new NoSuchElementException();

          }

          public void remove(){

            throw new UnsupportedOperationException();

          }

        }

;

      }

      public int size(){

        return length;

      }

    }

;

  }

  return fEntrySet;

}

Location: XSNamedMapImpl.java

Content: 

/** 

 * Construct an XSNamedMap implementation for one namespace

 * @param namespace the namespace to which the components belong

 * @param map       the map from local names to components

 */

public XSNamedMapImpl(String namespace,SymbolHash map){

  fNamespaces=new String[]{namespace};

  fMaps=new SymbolHash[]{map};

  fNSNum=1;

}

Location: XSNamedMapImpl.java

Content: 

/** 

 * Construct an XSNamedMap implementation for a list of namespaces

 * @param namespaces the namespaces to which the components belong

 * @param maps       the maps from local names to components

 * @param num        the number of namespaces

 */

public XSNamedMapImpl(String[] namespaces,SymbolHash[] maps,int num){

  fNamespaces=namespaces;

  fMaps=maps;

  fNSNum=num;

}

Location: XSNamedMapImpl.java

Content: 

/** 

 * Construct an XSNamedMap implementation one namespace from an array

 * @param array     containing all components

 * @param length    number of components

 */

public XSNamedMapImpl(XSObject[] array,int length){

  if (length == 0) {

    fNamespaces=null;

    fMaps=null;

    fNSNum=0;

    fArray=array;

    fLength=0;

    return;

  }

  fNamespaces=new String[]{array[0].getNamespace()};

  fMaps=null;

  fNSNum=1;

  fArray=array;

  fLength=length;

}

