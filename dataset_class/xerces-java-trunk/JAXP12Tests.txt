Location: JAXP12Tests.java

Content: 

public JAXP12Tests(String name){

  super(name);

}

Location: JAXP12Tests.java

Content: 

/** 

 * Turn on DTD validation and expect an error b/c instance doc has no doctypedecl

 */

public void testDomParseNoXSD() throws Exception {

  dbf.setNamespaceAware(true);

  dbf.setValidating(true);

  DocumentBuilder mydb=dbf.newDocumentBuilder();

  ErrorHandlerCheck meh=new ErrorHandlerCheck();

  mydb.setErrorHandler(meh);

  try {

    mydb.parse(new InputData("personal-schema.xml"));

    fail("ErrorHandler.error() should have thrown a SAXParseException");

  }

 catch (  SAXException x) {

    assertEquals("Should have caused validation error.",Boolean.TRUE,meh.getStatus());

  }

}

Location: JAXP12Tests.java

Content: 

/** 

 * Check that setting schemaSource overrides xsi: hint in instance doc

 */

public void testDomParseSchemaSource() throws Exception {

  dbf.setNamespaceAware(true);

  dbf.setValidating(true);

  dbf.setAttribute(JAXP_SCHEMA_LANGUAGE,W3C_XML_SCHEMA);

  dbf.setAttribute(JAXP_SCHEMA_SOURCE,new InputData("personal.xsd"));

  DocumentBuilder mydb=dbf.newDocumentBuilder();

  mydb.setErrorHandler(new MyErrorHandler());

  mydb.parse(new InputData("personal-schema-badhint.xml"));

  mydb.parse(new InputData("personal-schema-nohint.xml"));

}

Location: JAXP12Tests.java

Content: 

/** 

 * Should not cause a validation error.  Problem is that you get same result if no validation is occurring at all.  See other tests that checks that validation actually occurs.

 */

public void testDomParseXSD() throws Exception {

  dbf.setNamespaceAware(true);

  dbf.setValidating(true);

  dbf.setAttribute(JAXP_SCHEMA_LANGUAGE,W3C_XML_SCHEMA);

  DocumentBuilder mydb=dbf.newDocumentBuilder();

  mydb.setErrorHandler(new MyErrorHandler());

  mydb.parse(new InputData("personal-schema.xml"));

}

Location: JAXP12Tests.java

Content: 

/** 

 * Should cause a validation error.  Checks that validation is indeed occurring.  Warning: does not actually check for particular validation error, but assumes any exception thrown is a validation error of the type we expect.

 */

public void testDomParseXSD2() throws Exception {

  dbf.setNamespaceAware(true);

  dbf.setValidating(true);

  dbf.setAttribute(JAXP_SCHEMA_LANGUAGE,W3C_XML_SCHEMA);

  DocumentBuilder mydb=dbf.newDocumentBuilder();

  ErrorHandlerCheck meh=new ErrorHandlerCheck();

  mydb.setErrorHandler(meh);

  try {

    mydb.parse(new InputData("personal-schema-err.xml"));

    fail("ErrorHandler.error() should have thrown a SAXParseException");

  }

 catch (  SAXException x) {

    assertEquals("Should have caused validation error.",Boolean.TRUE,meh.getStatus());

  }

}

Location: JAXP12Tests.java

Content: 

/** 

 * Turn on DTD validation and expect an error b/c instance doc has no doctypedecl

 */

public void testSaxParseNoXSD() throws Exception {

  XMLReader xr=spnv.getXMLReader();

  ErrorHandlerCheck meh=new ErrorHandlerCheck();

  xr.setErrorHandler(meh);

  try {

    xr.parse(new InputData("personal-schema.xml"));

    fail("ErrorHandler.error() should have thrown a SAXParseException");

  }

 catch (  SAXException x) {

    assertEquals("Should have caused validation error.",Boolean.TRUE,meh.getStatus());

  }

}

Location: JAXP12Tests.java

Content: 

/** 

 * Check that setting schemaSource overrides xsi: hint in instance doc

 */

public void testSaxParseSchemaSource() throws Exception {

  spnv.setProperty(JAXP_SCHEMA_LANGUAGE,W3C_XML_SCHEMA);

  spnv.setProperty(JAXP_SCHEMA_SOURCE,new InputData("personal.xsd"));

  XMLReader xr=spnv.getXMLReader();

  xr.setErrorHandler(new MyErrorHandler());

  xr.parse(new InputData("personal-schema-badhint.xml"));

  xr.parse(new InputData("personal-schema-nohint.xml"));

}

Location: JAXP12Tests.java

Content: 

/** 

 * Should not cause a validation error.  Problem is that you get same result if no validation is occurring at all.  See other tests that checks that validation actually occurs.

 */

public void testSaxParseXSD() throws Exception {

  spnv.setProperty(JAXP_SCHEMA_LANGUAGE,W3C_XML_SCHEMA);

  XMLReader xr=spnv.getXMLReader();

  xr.setErrorHandler(new MyErrorHandler());

  xr.parse(new InputData("personal-schema.xml"));

}

Location: JAXP12Tests.java

Content: 

/** 

 * Should cause a validation error.  Checks that validation is indeed occurring.  Warning: does not actually check for particular validation error, but assumes any exception thrown is a validation error of the type we expect.

 */

public void testSaxParseXSD2() throws Exception {

  spnv.setProperty(JAXP_SCHEMA_LANGUAGE,W3C_XML_SCHEMA);

  XMLReader xr=spnv.getXMLReader();

  ErrorHandlerCheck meh=new ErrorHandlerCheck();

  xr.setErrorHandler(meh);

  try {

    xr.parse(new InputData("personal-schema-err.xml"));

    fail("ErrorHandler.error() should have thrown a SAXParseException");

  }

 catch (  SAXException x) {

    assertEquals("Should have caused validation error.",Boolean.TRUE,meh.getStatus());

  }

}

