Location: XSElementDecl.java

Content: 

public void addIDConstraint(IdentityConstraint idc){

  if (fIDCPos == fIDConstraints.length) {

    fIDConstraints=resize(fIDConstraints,fIDCPos * 2);

  }

  fIDConstraints[fIDCPos++]=idc;

}

Location: XSElementDecl.java

Content: 

public IdentityConstraint[] getIDConstraints(){

  if (fIDCPos == 0) {

    return null;

  }

  if (fIDCPos < fIDConstraints.length) {

    fIDConstraints=resize(fIDConstraints,fIDCPos);

  }

  return fIDConstraints;

}

Location: XSElementDecl.java

Content: 

static final IdentityConstraint[] resize(IdentityConstraint[] oldArray,int newSize){

  IdentityConstraint[] newArray=new IdentityConstraint[newSize];

  System.arraycopy(oldArray,0,newArray,0,Math.min(oldArray.length,newSize));

  return newArray;

}

Location: XSElementDecl.java

Content: 

public void setConstraintType(short constraintType){

  fMiscFlags^=(fMiscFlags & CONSTRAINT_MASK);

  fMiscFlags|=(constraintType & CONSTRAINT_MASK);

}

Location: XSElementDecl.java

Content: 

public void setIsAbstract(){

  fMiscFlags|=ABSTRACT;

}

Location: XSElementDecl.java

Content: 

public void setIsGlobal(){

  fScope=SCOPE_GLOBAL;

}

Location: XSElementDecl.java

Content: 

public void setIsLocal(XSComplexTypeDecl enclosingCT){

  fScope=SCOPE_LOCAL;

  fEnclosingCT=enclosingCT;

}

Location: XSElementDecl.java

Content: 

public void setIsNillable(){

  fMiscFlags|=NILLABLE;

}

