Location: HTMLTableCellElementImpl.java

Content: 

public String getAbbr(){

  return getAttribute("abbr");

}

Location: HTMLTableCellElementImpl.java

Content: 

public String getAxis(){

  return getAttribute("axis");

}

Location: HTMLTableCellElementImpl.java

Content: 

public int getCellIndex(){

  Node parent;

  Node child;

  int index;

  parent=getParentNode();

  index=0;

  if (parent instanceof HTMLTableRowElement) {

    child=parent.getFirstChild();

    while (child != null) {

      if (child instanceof HTMLTableCellElement) {

        if (child == this)         return index;

        ++index;

      }

      child=child.getNextSibling();

    }

  }

  return -1;

}

Location: HTMLTableCellElementImpl.java

Content: 

public int getColSpan(){

  return getInteger(getAttribute("colspan"));

}

Location: HTMLTableCellElementImpl.java

Content: 

public String getHeaders(){

  return getAttribute("headers");

}

Location: HTMLTableCellElementImpl.java

Content: 

public boolean getNoWrap(){

  return getBinary("nowrap");

}

Location: HTMLTableCellElementImpl.java

Content: 

public int getRowSpan(){

  return getInteger(getAttribute("rowspan"));

}

Location: HTMLTableCellElementImpl.java

Content: 

/** 

 * Constructor requires owner document.

 * @param owner The owner HTML document

 */

public HTMLTableCellElementImpl(HTMLDocumentImpl owner,String name){

  super(owner,name);

}

Location: HTMLTableCellElementImpl.java

Content: 

public void setAbbr(String abbr){

  setAttribute("abbr",abbr);

}

Location: HTMLTableCellElementImpl.java

Content: 

public void setAxis(String axis){

  setAttribute("axis",axis);

}

Location: HTMLTableCellElementImpl.java

Content: 

public void setCellIndex(int cellIndex){

  Node parent;

  Node child;

  parent=getParentNode();

  if (parent instanceof HTMLTableRowElement) {

    child=parent.getFirstChild();

    while (child != null) {

      if (child instanceof HTMLTableCellElement) {

        if (cellIndex == 0) {

          if (this != child)           parent.insertBefore(this,child);

          return;

        }

        --cellIndex;

      }

      child=child.getNextSibling();

    }

  }

  parent.appendChild(this);

}

Location: HTMLTableCellElementImpl.java

Content: 

public void setColSpan(int colspan){

  setAttribute("colspan",String.valueOf(colspan));

}

Location: HTMLTableCellElementImpl.java

Content: 

public void setHeaders(String headers){

  setAttribute("headers",headers);

}

Location: HTMLTableCellElementImpl.java

Content: 

public void setNoWrap(boolean noWrap){

  setAttribute("nowrap",noWrap);

}

Location: HTMLTableCellElementImpl.java

Content: 

public void setRowSpan(int rowspan){

  setAttribute("rowspan",String.valueOf(rowspan));

}

Location: HTMLTableCellElementImpl.java

Content: 

public void setScope(String scope){

  setAttribute("scope",scope);

}

