Location: XSFacet.java

Content: 

/** 

 * If this facet is minInclusive, maxInclusive, minExclusive, or maxExclusive, then return the actual value of the facet. If this facet is length, minLength, maxLength, totalDigits, or fractionDigits, then return a BigInteger representation of the value. If this facet is whiteSpace, then return the String representation of the facet.

 */

public Object getActualFacetValue();

Location: XSFacet.java

Content: 

/** 

 * An annotation if it exists, otherwise <code>null</code>. If not null then the first [annotation] from the sequence of annotations.

 */

public XSAnnotation getAnnotation();

Location: XSFacet.java

Content: 

/** 

 * A sequence of [annotations] or an empty <code>XSObjectList</code>.

 */

public XSObjectList getAnnotations();

Location: XSFacet.java

Content: 

/** 

 * The name of the facet, e.g. <code>FACET_LENGTH, FACET_TOTALDIGITS</code> (see <code>XSSimpleTypeDefinition</code>). 

 */

public short getFacetKind();

Location: XSFacet.java

Content: 

/** 

 * [Facets]: check whether a facet is fixed. 

 */

public boolean getFixed();

Location: XSFacet.java

Content: 

/** 

 * If this facet is length, minLength, maxLength, totalDigits, or fractionDigits, and if the value can fit in "int", then return the value of the facet as an int. If the value can't fit, return -1. Use getActualFacetValue() to get the BigInteger representation. For all other facets, return 0.

 */

public int getIntFacetValue();

Location: XSFacet.java

Content: 

/** 

 * A value of this facet. 

 */

public String getLexicalFacetValue();

