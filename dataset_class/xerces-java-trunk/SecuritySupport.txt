Location: SecuritySupport.java

Content: 

static ClassLoader getContextClassLoader(){

  return (ClassLoader)AccessController.doPrivileged(new PrivilegedAction(){

    public Object run(){

      ClassLoader cl=null;

      try {

        cl=Thread.currentThread().getContextClassLoader();

      }

 catch (      SecurityException ex) {

      }

      return cl;

    }

  }

);

}

Location: SecuritySupport.java

Content: 

static boolean getFileExists(final File f){

  return ((Boolean)AccessController.doPrivileged(new PrivilegedAction(){

    public Object run(){

      return f.exists() ? Boolean.TRUE : Boolean.FALSE;

    }

  }

)).booleanValue();

}

Location: SecuritySupport.java

Content: 

static FileInputStream getFileInputStream(final File file) throws FileNotFoundException {

  try {

    return (FileInputStream)AccessController.doPrivileged(new PrivilegedExceptionAction(){

      public Object run() throws FileNotFoundException {

        return new FileInputStream(file);

      }

    }

);

  }

 catch (  PrivilegedActionException e) {

    throw (FileNotFoundException)e.getException();

  }

}

Location: SecuritySupport.java

Content: 

static long getLastModified(final File f){

  return ((Long)AccessController.doPrivileged(new PrivilegedAction(){

    public Object run(){

      return new Long(f.lastModified());

    }

  }

)).longValue();

}

Location: SecuritySupport.java

Content: 

static ClassLoader getParentClassLoader(final ClassLoader cl){

  return (ClassLoader)AccessController.doPrivileged(new PrivilegedAction(){

    public Object run(){

      ClassLoader parent=null;

      try {

        parent=cl.getParent();

      }

 catch (      SecurityException ex) {

      }

      return (parent == cl) ? null : parent;

    }

  }

);

}

Location: SecuritySupport.java

Content: 

static InputStream getResourceAsStream(final ClassLoader cl,final String name){

  return (InputStream)AccessController.doPrivileged(new PrivilegedAction(){

    public Object run(){

      InputStream ris;

      if (cl == null) {

        ris=ClassLoader.getSystemResourceAsStream(name);

      }

 else {

        ris=cl.getResourceAsStream(name);

      }

      return ris;

    }

  }

);

}

Location: SecuritySupport.java

Content: 

static ClassLoader getSystemClassLoader(){

  return (ClassLoader)AccessController.doPrivileged(new PrivilegedAction(){

    public Object run(){

      ClassLoader cl=null;

      try {

        cl=ClassLoader.getSystemClassLoader();

      }

 catch (      SecurityException ex) {

      }

      return cl;

    }

  }

);

}

Location: SecuritySupport.java

Content: 

static String getSystemProperty(final String propName){

  return (String)AccessController.doPrivileged(new PrivilegedAction(){

    public Object run(){

      return System.getProperty(propName);

    }

  }

);

}

Location: SecuritySupport.java

Content: 

private SecuritySupport(){

}

