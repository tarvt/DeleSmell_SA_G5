Location: XMLEventFactoryImpl.java

Content: 

public Attribute createAttribute(QName name,String value){

  return new AttributeImpl(name,value,"CDATA",true,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public Attribute createAttribute(String localName,String value){

  return createAttribute(new QName(localName),value);

}

Location: XMLEventFactoryImpl.java

Content: 

public Attribute createAttribute(String prefix,String namespaceURI,String localName,String value){

  return createAttribute(new QName(namespaceURI,localName,prefix),value);

}

Location: XMLEventFactoryImpl.java

Content: 

public Characters createCData(String content){

  return new CharactersImpl(content,XMLStreamConstants.CDATA,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public Characters createCharacters(String content){

  return new CharactersImpl(content,XMLStreamConstants.CHARACTERS,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public Comment createComment(String text){

  return new CommentImpl(text,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public DTD createDTD(String dtd){

  return new DTDImpl(dtd,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public EndDocument createEndDocument(){

  return new EndDocumentImpl(fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public EndElement createEndElement(QName name,Iterator namespaces){

  return new EndElementImpl(name,namespaces,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public EndElement createEndElement(String prefix,String namespaceUri,String localName){

  return createEndElement(new QName(namespaceUri,localName,prefix),null);

}

Location: XMLEventFactoryImpl.java

Content: 

public EndElement createEndElement(String prefix,String namespaceUri,String localName,Iterator namespaces){

  return createEndElement(new QName(namespaceUri,localName,prefix),namespaces);

}

Location: XMLEventFactoryImpl.java

Content: 

public EntityReference createEntityReference(String name,EntityDeclaration declaration){

  return new EntityReferenceImpl(name,declaration,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public Characters createIgnorableSpace(String content){

  return new CharactersImpl(content,XMLStreamConstants.SPACE,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public Namespace createNamespace(String namespaceURI){

  return createNamespace(XMLConstants.DEFAULT_NS_PREFIX,namespaceURI);

}

Location: XMLEventFactoryImpl.java

Content: 

public Namespace createNamespace(String prefix,String namespaceUri){

  return new NamespaceImpl(prefix,namespaceUri,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public ProcessingInstruction createProcessingInstruction(String target,String data){

  return new ProcessingInstructionImpl(target,data,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public Characters createSpace(String content){

  return createCharacters(content);

}

Location: XMLEventFactoryImpl.java

Content: 

public StartDocument createStartDocument(){

  return createStartDocument(null,null);

}

Location: XMLEventFactoryImpl.java

Content: 

public StartDocument createStartDocument(String encoding){

  return createStartDocument(encoding,null);

}

Location: XMLEventFactoryImpl.java

Content: 

public StartDocument createStartDocument(String encoding,String version){

  return new StartDocumentImpl(encoding,encoding != null,false,false,version,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public StartDocument createStartDocument(String encoding,String version,boolean standalone){

  return new StartDocumentImpl(encoding,encoding != null,standalone,true,version,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public StartElement createStartElement(QName name,Iterator attributes,Iterator namespaces){

  return createStartElement(name,attributes,namespaces,null);

}

Location: XMLEventFactoryImpl.java

Content: 

private StartElement createStartElement(QName name,Iterator attributes,Iterator namespaces,NamespaceContext context){

  return new StartElementImpl(name,attributes,namespaces,context,fLocation);

}

Location: XMLEventFactoryImpl.java

Content: 

public StartElement createStartElement(String prefix,String namespaceUri,String localName){

  return createStartElement(new QName(namespaceUri,localName,prefix),null,null);

}

Location: XMLEventFactoryImpl.java

Content: 

public StartElement createStartElement(String prefix,String namespaceUri,String localName,Iterator attributes,Iterator namespaces){

  return createStartElement(new QName(namespaceUri,localName,prefix),attributes,namespaces);

}

Location: XMLEventFactoryImpl.java

Content: 

public StartElement createStartElement(String prefix,String namespaceUri,String localName,Iterator attributes,Iterator namespaces,NamespaceContext context){

  return createStartElement(new QName(namespaceUri,localName,prefix),attributes,namespaces,context);

}

Location: XMLEventFactoryImpl.java

Content: 

public XMLEventFactoryImpl(){

}

