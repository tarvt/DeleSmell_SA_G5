Location: SerializerFactoryImpl.java

Content: 

private Serializer getSerializer(OutputFormat format){

  if (_method.equals(Method.XML)) {

    return new XMLSerializer(format);

  }

 else   if (_method.equals(Method.HTML)) {

    return new HTMLSerializer(format);

  }

 else   if (_method.equals(Method.XHTML)) {

    return new XHTMLSerializer(format);

  }

 else   if (_method.equals(Method.TEXT)) {

    return new TextSerializer();

  }

 else {

    String msg=DOMMessageFormatter.formatMessage(DOMMessageFormatter.SERIALIZER_DOMAIN,"MethodNotSupported",new Object[]{_method});

    throw new IllegalStateException(msg);

  }

}

Location: SerializerFactoryImpl.java

Content: 

protected String getSupportedMethod(){

  return _method;

}

Location: SerializerFactoryImpl.java

Content: 

public Serializer makeSerializer(OutputFormat format){

  Serializer serializer;

  serializer=getSerializer(format);

  serializer.setOutputFormat(format);

  return serializer;

}

Location: SerializerFactoryImpl.java

Content: 

public Serializer makeSerializer(OutputStream output,OutputFormat format) throws UnsupportedEncodingException {

  Serializer serializer;

  serializer=getSerializer(format);

  serializer.setOutputByteStream(output);

  return serializer;

}

Location: SerializerFactoryImpl.java

Content: 

public Serializer makeSerializer(Writer writer,OutputFormat format){

  Serializer serializer;

  serializer=getSerializer(format);

  serializer.setOutputCharStream(writer);

  return serializer;

}

Location: SerializerFactoryImpl.java

Content: 

SerializerFactoryImpl(String method){

  _method=method;

  if (!_method.equals(Method.XML) && !_method.equals(Method.HTML) && !_method.equals(Method.XHTML)&& !_method.equals(Method.TEXT)) {

    String msg=DOMMessageFormatter.formatMessage(DOMMessageFormatter.SERIALIZER_DOMAIN,"MethodNotSupported",new Object[]{method});

    throw new IllegalArgumentException(msg);

  }

}

