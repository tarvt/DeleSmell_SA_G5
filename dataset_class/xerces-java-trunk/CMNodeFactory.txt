Location: CMNodeFactory.java

Content: 

/** 

 * default constructor 

 */

public CMNodeFactory(){

}

Location: CMNodeFactory.java

Content: 

public CMNode getCMBinOpNode(int type,CMNode leftNode,CMNode rightNode){

  nodeCountCheck();

  return new XSCMBinOp(type,leftNode,rightNode);

}

Location: CMNodeFactory.java

Content: 

public CMNode getCMLeafNode(int type,Object leaf,int id,int position){

  nodeCountCheck();

  return new XSCMLeaf(type,leaf,id,position);

}

Location: CMNodeFactory.java

Content: 

public CMNode getCMRepeatingLeafNode(int type,Object leaf,int minOccurs,int maxOccurs,int id,int position){

  nodeCountCheck();

  return new XSCMRepeatingLeaf(type,leaf,minOccurs,maxOccurs,id,position);

}

Location: CMNodeFactory.java

Content: 

public CMNode getCMUniOpNode(int type,CMNode childNode){

  nodeCountCheck();

  return new XSCMUniOp(type,childNode);

}

Location: CMNodeFactory.java

Content: 

public void nodeCountCheck(){

  if (fSecurityManager != null && nodeCount++ > maxNodeLimit) {

    if (DEBUG) {

      System.out.println("nodeCount = " + nodeCount);

      System.out.println("nodeLimit = " + maxNodeLimit);

    }

    fErrorReporter.reportError(XSMessageFormatter.SCHEMA_DOMAIN,"maxOccurLimit",new Object[]{new Integer(maxNodeLimit)},XMLErrorReporter.SEVERITY_FATAL_ERROR);

    nodeCount=0;

  }

}

Location: CMNodeFactory.java

Content: 

public void resetNodeCount(){

  nodeCount=0;

}

