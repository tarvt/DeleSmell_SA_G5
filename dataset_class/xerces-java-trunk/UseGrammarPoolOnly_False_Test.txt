Location: UseGrammarPoolOnly_False_Test.java

Content: 

protected String[] getRelevantErrorIDs(){

  return new String[]{UNKNOWN_TYPE_ERROR,INVALID_DERIVATION_ERROR};

}

Location: UseGrammarPoolOnly_False_Test.java

Content: 

protected String getSchemaFile(){

  return "base.xsd";

}

Location: UseGrammarPoolOnly_False_Test.java

Content: 

protected boolean getUseGrammarPoolOnly(){

  return false;

}

Location: UseGrammarPoolOnly_False_Test.java

Content: 

protected String getXMLDocument(){

  return "otherNamespace.xml";

}

Location: UseGrammarPoolOnly_False_Test.java

Content: 

/** 

 * The purpose of this test is to check if setting the USE_GRAMMAR_POOL_ONLY feature to true causes external schemas to not be read. This functionality already existed prior to adding the new schema features for Xerces 2.8.0; however, because the class that controlled it changed,  this test simply ensures that the existing functionality did not disappear. -PM

 */

public void testUsingOnlyGrammarPool(){

  try {

    validateDocument();

  }

 catch (  Exception e) {

    Assert.fail("Validation failed: " + e.getMessage());

  }

  assertValidity(ItemPSVI.VALIDITY_VALID,fRootNode.getValidity());

  assertValidationAttempted(ItemPSVI.VALIDATION_FULL,fRootNode.getValidationAttempted());

  assertElementName("A",fRootNode.getElementDeclaration().getName());

  assertElementNamespace("xslt.unittests",fRootNode.getElementDeclaration().getNamespace());

  assertTypeName("W",fRootNode.getTypeDefinition().getName());

  assertTypeNamespace("xslt.unittests",fRootNode.getTypeDefinition().getNamespace());

}

Location: UseGrammarPoolOnly_False_Test.java

Content: 

public UseGrammarPoolOnly_False_Test(String name){

  super(name);

}

