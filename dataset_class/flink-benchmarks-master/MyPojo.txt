Location: MyPojo.java

Content: 

public void addToOperationName(java.lang.String elem){

  if (this.operationName == null) {

    this.operationName=new java.util.ArrayList<java.lang.String>();

  }

  this.operationName.add(elem);

}

Location: MyPojo.java

Content: 

public void addToOperations(MyOperation elem){

  if (this.operations == null) {

    this.operations=new java.util.ArrayList<MyOperation>();

  }

  this.operations.add(elem);

}

Location: MyPojo.java

Content: 

@Override public void clear(){

  setIdIsSet(false);

  this.id=0;

  this.name=null;

  this.operationName=null;

  this.operations=null;

  setOtherId1IsSet(false);

  this.otherId1=0;

  setOtherId2IsSet(false);

  this.otherId2=0;

  setOtherId3IsSet(false);

  this.otherId3=0;

  this.someObject=null;

}

Location: MyPojo.java

Content: 

@Override public int compareTo(MyPojo other){

  if (!getClass().equals(other.getClass())) {

    return getClass().getName().compareTo(other.getClass().getName());

  }

  int lastComparison=0;

  lastComparison=java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetId()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.id,other.id);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetName()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.name,other.name);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOperationName()).compareTo(other.isSetOperationName());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOperationName()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.operationName,other.operationName);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOperations()).compareTo(other.isSetOperations());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOperations()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.operations,other.operations);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOtherId1()).compareTo(other.isSetOtherId1());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOtherId1()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.otherId1,other.otherId1);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOtherId2()).compareTo(other.isSetOtherId2());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOtherId2()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.otherId2,other.otherId2);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOtherId3()).compareTo(other.isSetOtherId3());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOtherId3()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.otherId3,other.otherId3);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetSomeObject()).compareTo(other.isSetSomeObject());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetSomeObject()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.someObject,other.someObject);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  return 0;

}

Location: MyPojo.java

Content: 

public MyPojo deepCopy(){

  return new MyPojo(this);

}

Location: MyPojo.java

Content: 

@Override public boolean equals(java.lang.Object that){

  if (that == null)   return false;

  if (that instanceof MyPojo)   return this.equals((MyPojo)that);

  return false;

}

Location: MyPojo.java

Content: 

public boolean equals(MyPojo that){

  if (that == null)   return false;

  if (this == that)   return true;

  boolean this_present_id=true;

  boolean that_present_id=true;

  if (this_present_id || that_present_id) {

    if (!(this_present_id && that_present_id))     return false;

    if (this.id != that.id)     return false;

  }

  boolean this_present_name=true && this.isSetName();

  boolean that_present_name=true && that.isSetName();

  if (this_present_name || that_present_name) {

    if (!(this_present_name && that_present_name))     return false;

    if (!this.name.equals(that.name))     return false;

  }

  boolean this_present_operationName=true && this.isSetOperationName();

  boolean that_present_operationName=true && that.isSetOperationName();

  if (this_present_operationName || that_present_operationName) {

    if (!(this_present_operationName && that_present_operationName))     return false;

    if (!this.operationName.equals(that.operationName))     return false;

  }

  boolean this_present_operations=true && this.isSetOperations();

  boolean that_present_operations=true && that.isSetOperations();

  if (this_present_operations || that_present_operations) {

    if (!(this_present_operations && that_present_operations))     return false;

    if (!this.operations.equals(that.operations))     return false;

  }

  boolean this_present_otherId1=true;

  boolean that_present_otherId1=true;

  if (this_present_otherId1 || that_present_otherId1) {

    if (!(this_present_otherId1 && that_present_otherId1))     return false;

    if (this.otherId1 != that.otherId1)     return false;

  }

  boolean this_present_otherId2=true;

  boolean that_present_otherId2=true;

  if (this_present_otherId2 || that_present_otherId2) {

    if (!(this_present_otherId2 && that_present_otherId2))     return false;

    if (this.otherId2 != that.otherId2)     return false;

  }

  boolean this_present_otherId3=true;

  boolean that_present_otherId3=true;

  if (this_present_otherId3 || that_present_otherId3) {

    if (!(this_present_otherId3 && that_present_otherId3))     return false;

    if (this.otherId3 != that.otherId3)     return false;

  }

  boolean this_present_someObject=true && this.isSetSomeObject();

  boolean that_present_someObject=true && that.isSetSomeObject();

  if (this_present_someObject || that_present_someObject) {

    if (!(this_present_someObject && that_present_someObject))     return false;

    if (!this.someObject.equals(that.someObject))     return false;

  }

  return true;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public _Fields fieldForId(int fieldId){

  return _Fields.findByThriftId(fieldId);

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.lang.Object getFieldValue(_Fields field){

switch (field) {

case ID:

    return getId();

case NAME:

  return getName();

case OPERATION_NAME:

return getOperationName();

case OPERATIONS:

return getOperations();

case OTHER_ID1:

return getOtherId1();

case OTHER_ID2:

return getOtherId2();

case OTHER_ID3:

return getOtherId3();

case SOME_OBJECT:

return getSomeObject();

}

throw new java.lang.IllegalStateException();

}

Location: MyPojo.java

Content: 

public int getId(){

  return this.id;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.lang.String getName(){

  return this.name;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.util.List<java.lang.String> getOperationName(){

  return this.operationName;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.util.Iterator<java.lang.String> getOperationNameIterator(){

  return (this.operationName == null) ? null : this.operationName.iterator();

}

Location: MyPojo.java

Content: 

public int getOperationNameSize(){

  return (this.operationName == null) ? 0 : this.operationName.size();

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.util.List<MyOperation> getOperations(){

  return this.operations;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.util.Iterator<MyOperation> getOperationsIterator(){

  return (this.operations == null) ? null : this.operations.iterator();

}

Location: MyPojo.java

Content: 

public int getOperationsSize(){

  return (this.operations == null) ? 0 : this.operations.size();

}

Location: MyPojo.java

Content: 

public int getOtherId1(){

  return this.otherId1;

}

Location: MyPojo.java

Content: 

public int getOtherId2(){

  return this.otherId2;

}

Location: MyPojo.java

Content: 

public int getOtherId3(){

  return this.otherId3;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.lang.String getSomeObject(){

  return this.someObject;

}

Location: MyPojo.java

Content: 

@Override public int hashCode(){

  int hashCode=1;

  hashCode=hashCode * 8191 + id;

  hashCode=hashCode * 8191 + ((isSetName()) ? 131071 : 524287);

  if (isSetName())   hashCode=hashCode * 8191 + name.hashCode();

  hashCode=hashCode * 8191 + ((isSetOperationName()) ? 131071 : 524287);

  if (isSetOperationName())   hashCode=hashCode * 8191 + operationName.hashCode();

  hashCode=hashCode * 8191 + ((isSetOperations()) ? 131071 : 524287);

  if (isSetOperations())   hashCode=hashCode * 8191 + operations.hashCode();

  hashCode=hashCode * 8191 + otherId1;

  hashCode=hashCode * 8191 + otherId2;

  hashCode=hashCode * 8191 + otherId3;

  hashCode=hashCode * 8191 + ((isSetSomeObject()) ? 131071 : 524287);

  if (isSetSomeObject())   hashCode=hashCode * 8191 + someObject.hashCode();

  return hashCode;

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise 

 */

public boolean isSet(_Fields field){

  if (field == null) {

    throw new java.lang.IllegalArgumentException();

  }

switch (field) {

case ID:

    return isSetId();

case NAME:

  return isSetName();

case OPERATION_NAME:

return isSetOperationName();

case OPERATIONS:

return isSetOperations();

case OTHER_ID1:

return isSetOtherId1();

case OTHER_ID2:

return isSetOtherId2();

case OTHER_ID3:

return isSetOtherId3();

case SOME_OBJECT:

return isSetSomeObject();

}

throw new java.lang.IllegalStateException();

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field id is set (has been assigned a value) and false otherwise 

 */

public boolean isSetId(){

  return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield,__ID_ISSET_ID);

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field name is set (has been assigned a value) and false otherwise 

 */

public boolean isSetName(){

  return this.name != null;

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field operationName is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOperationName(){

  return this.operationName != null;

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field operations is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOperations(){

  return this.operations != null;

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field otherId1 is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOtherId1(){

  return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield,__OTHERID1_ISSET_ID);

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field otherId2 is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOtherId2(){

  return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield,__OTHERID2_ISSET_ID);

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field otherId3 is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOtherId3(){

  return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield,__OTHERID3_ISSET_ID);

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field someObject is set (has been assigned a value) and false otherwise 

 */

public boolean isSetSomeObject(){

  return this.someObject != null;

}

Location: MyPojo.java

Content: 

public MyPojo(){

}

Location: MyPojo.java

Content: 

public MyPojo(int id,java.lang.String name,java.util.List<java.lang.String> operationName,java.util.List<MyOperation> operations,int otherId1,int otherId2,int otherId3){

  this();

  this.id=id;

  setIdIsSet(true);

  this.name=name;

  this.operationName=operationName;

  this.operations=operations;

  this.otherId1=otherId1;

  setOtherId1IsSet(true);

  this.otherId2=otherId2;

  setOtherId2IsSet(true);

  this.otherId3=otherId3;

  setOtherId3IsSet(true);

}

Location: MyPojo.java

Content: 

/** 

 * Performs a deep copy on <i>other</i>.

 */

public MyPojo(MyPojo other){

  __isset_bitfield=other.__isset_bitfield;

  this.id=other.id;

  if (other.isSetName()) {

    this.name=other.name;

  }

  if (other.isSetOperationName()) {

    java.util.List<java.lang.String> __this__operationName=new java.util.ArrayList<java.lang.String>(other.operationName);

    this.operationName=__this__operationName;

  }

  if (other.isSetOperations()) {

    java.util.List<MyOperation> __this__operations=new java.util.ArrayList<MyOperation>(other.operations.size());

    for (    MyOperation other_element : other.operations) {

      __this__operations.add(new MyOperation(other_element));

    }

    this.operations=__this__operations;

  }

  this.otherId1=other.otherId1;

  this.otherId2=other.otherId2;

  this.otherId3=other.otherId3;

  if (other.isSetSomeObject()) {

    this.someObject=other.someObject;

  }

}

Location: MyPojo.java

Content: 

private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {

  try {

    __isset_bitfield=0;

    read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));

  }

 catch (  org.apache.thrift.TException te) {

    throw new java.io.IOException(te);

  }

}

Location: MyPojo.java

Content: 

public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {

  scheme(iprot).read(iprot,this);

}

Location: MyPojo.java

Content: 

private static <S extends org.apache.thrift.scheme.IScheme>S scheme(org.apache.thrift.protocol.TProtocol proto){

  return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();

}

Location: MyPojo.java

Content: 

public void setFieldValue(_Fields field,@org.apache.thrift.annotation.Nullable java.lang.Object value){

switch (field) {

case ID:

    if (value == null) {

      unsetId();

    }

 else {

      setId((java.lang.Integer)value);

    }

  break;

case NAME:

if (value == null) {

  unsetName();

}

 else {

  setName((java.lang.String)value);

}

break;

case OPERATION_NAME:

if (value == null) {

unsetOperationName();

}

 else {

setOperationName((java.util.List<java.lang.String>)value);

}

break;

case OPERATIONS:

if (value == null) {

unsetOperations();

}

 else {

setOperations((java.util.List<MyOperation>)value);

}

break;

case OTHER_ID1:

if (value == null) {

unsetOtherId1();

}

 else {

setOtherId1((java.lang.Integer)value);

}

break;

case OTHER_ID2:

if (value == null) {

unsetOtherId2();

}

 else {

setOtherId2((java.lang.Integer)value);

}

break;

case OTHER_ID3:

if (value == null) {

unsetOtherId3();

}

 else {

setOtherId3((java.lang.Integer)value);

}

break;

case SOME_OBJECT:

if (value == null) {

unsetSomeObject();

}

 else {

setSomeObject((java.lang.String)value);

}

break;

}

}

Location: MyPojo.java

Content: 

public void setIdIsSet(boolean value){

  __isset_bitfield=org.apache.thrift.EncodingUtils.setBit(__isset_bitfield,__ID_ISSET_ID,value);

}

Location: MyPojo.java

Content: 

public MyPojo setId(int id){

  this.id=id;

  setIdIsSet(true);

  return this;

}

Location: MyPojo.java

Content: 

public void setNameIsSet(boolean value){

  if (!value) {

    this.name=null;

  }

}

Location: MyPojo.java

Content: 

public MyPojo setName(@org.apache.thrift.annotation.Nullable java.lang.String name){

  this.name=name;

  return this;

}

Location: MyPojo.java

Content: 

public void setOperationNameIsSet(boolean value){

  if (!value) {

    this.operationName=null;

  }

}

Location: MyPojo.java

Content: 

public MyPojo setOperationName(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> operationName){

  this.operationName=operationName;

  return this;

}

Location: MyPojo.java

Content: 

public void setOperationsIsSet(boolean value){

  if (!value) {

    this.operations=null;

  }

}

Location: MyPojo.java

Content: 

public MyPojo setOperations(@org.apache.thrift.annotation.Nullable java.util.List<MyOperation> operations){

  this.operations=operations;

  return this;

}

Location: MyPojo.java

Content: 

public void setOtherId1IsSet(boolean value){

  __isset_bitfield=org.apache.thrift.EncodingUtils.setBit(__isset_bitfield,__OTHERID1_ISSET_ID,value);

}

Location: MyPojo.java

Content: 

public MyPojo setOtherId1(int otherId1){

  this.otherId1=otherId1;

  setOtherId1IsSet(true);

  return this;

}

Location: MyPojo.java

Content: 

public void setOtherId2IsSet(boolean value){

  __isset_bitfield=org.apache.thrift.EncodingUtils.setBit(__isset_bitfield,__OTHERID2_ISSET_ID,value);

}

Location: MyPojo.java

Content: 

public MyPojo setOtherId2(int otherId2){

  this.otherId2=otherId2;

  setOtherId2IsSet(true);

  return this;

}

Location: MyPojo.java

Content: 

public void setOtherId3IsSet(boolean value){

  __isset_bitfield=org.apache.thrift.EncodingUtils.setBit(__isset_bitfield,__OTHERID3_ISSET_ID,value);

}

Location: MyPojo.java

Content: 

public MyPojo setOtherId3(int otherId3){

  this.otherId3=otherId3;

  setOtherId3IsSet(true);

  return this;

}

Location: MyPojo.java

Content: 

public void setSomeObjectIsSet(boolean value){

  if (!value) {

    this.someObject=null;

  }

}

Location: MyPojo.java

Content: 

public MyPojo setSomeObject(@org.apache.thrift.annotation.Nullable java.lang.String someObject){

  this.someObject=someObject;

  return this;

}

Location: MyPojo.java

Content: 

@Override public java.lang.String toString(){

  java.lang.StringBuilder sb=new java.lang.StringBuilder("MyPojo(");

  boolean first=true;

  sb.append("id:");

  sb.append(this.id);

  first=false;

  if (!first)   sb.append(", ");

  sb.append("name:");

  if (this.name == null) {

    sb.append("null");

  }

 else {

    sb.append(this.name);

  }

  first=false;

  if (!first)   sb.append(", ");

  sb.append("operationName:");

  if (this.operationName == null) {

    sb.append("null");

  }

 else {

    sb.append(this.operationName);

  }

  first=false;

  if (!first)   sb.append(", ");

  sb.append("operations:");

  if (this.operations == null) {

    sb.append("null");

  }

 else {

    sb.append(this.operations);

  }

  first=false;

  if (!first)   sb.append(", ");

  sb.append("otherId1:");

  sb.append(this.otherId1);

  first=false;

  if (!first)   sb.append(", ");

  sb.append("otherId2:");

  sb.append(this.otherId2);

  first=false;

  if (!first)   sb.append(", ");

  sb.append("otherId3:");

  sb.append(this.otherId3);

  first=false;

  if (isSetSomeObject()) {

    if (!first)     sb.append(", ");

    sb.append("someObject:");

    if (this.someObject == null) {

      sb.append("null");

    }

 else {

      sb.append(this.someObject);

    }

    first=false;

  }

  sb.append(")");

  return sb.toString();

}

Location: MyPojo.java

Content: 

public void unsetId(){

  __isset_bitfield=org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield,__ID_ISSET_ID);

}

Location: MyPojo.java

Content: 

public void unsetName(){

  this.name=null;

}

Location: MyPojo.java

Content: 

public void unsetOperationName(){

  this.operationName=null;

}

Location: MyPojo.java

Content: 

public void unsetOperations(){

  this.operations=null;

}

Location: MyPojo.java

Content: 

public void unsetOtherId1(){

  __isset_bitfield=org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield,__OTHERID1_ISSET_ID);

}

Location: MyPojo.java

Content: 

public void unsetOtherId2(){

  __isset_bitfield=org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield,__OTHERID2_ISSET_ID);

}

Location: MyPojo.java

Content: 

public void unsetOtherId3(){

  __isset_bitfield=org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield,__OTHERID3_ISSET_ID);

}

Location: MyPojo.java

Content: 

public void unsetSomeObject(){

  this.someObject=null;

}

Location: MyPojo.java

Content: 

public void validate() throws org.apache.thrift.TException {

}

Location: MyPojo.java

Content: 

private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {

  try {

    write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));

  }

 catch (  org.apache.thrift.TException te) {

    throw new java.io.IOException(te);

  }

}

Location: MyPojo.java

Content: 

public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {

  scheme(oprot).write(oprot,this);

}

Location: MyPojo.java

Content: 

public void addToOperationName(java.lang.String elem){

  if (this.operationName == null) {

    this.operationName=new java.util.ArrayList<java.lang.String>();

  }

  this.operationName.add(elem);

}

Location: MyPojo.java

Content: 

public void addToOperations(MyOperation elem){

  if (this.operations == null) {

    this.operations=new java.util.ArrayList<MyOperation>();

  }

  this.operations.add(elem);

}

Location: MyPojo.java

Content: 

@Override public void clear(){

  setIdIsSet(false);

  this.id=0;

  this.name=null;

  this.operationName=null;

  this.operations=null;

  setOtherId1IsSet(false);

  this.otherId1=0;

  setOtherId2IsSet(false);

  this.otherId2=0;

  setOtherId3IsSet(false);

  this.otherId3=0;

  this.someObject=null;

}

Location: MyPojo.java

Content: 

@Override public int compareTo(MyPojo other){

  if (!getClass().equals(other.getClass())) {

    return getClass().getName().compareTo(other.getClass().getName());

  }

  int lastComparison=0;

  lastComparison=java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetId()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.id,other.id);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetName()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.name,other.name);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOperationName()).compareTo(other.isSetOperationName());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOperationName()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.operationName,other.operationName);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOperations()).compareTo(other.isSetOperations());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOperations()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.operations,other.operations);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOtherId1()).compareTo(other.isSetOtherId1());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOtherId1()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.otherId1,other.otherId1);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOtherId2()).compareTo(other.isSetOtherId2());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOtherId2()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.otherId2,other.otherId2);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetOtherId3()).compareTo(other.isSetOtherId3());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetOtherId3()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.otherId3,other.otherId3);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  lastComparison=java.lang.Boolean.valueOf(isSetSomeObject()).compareTo(other.isSetSomeObject());

  if (lastComparison != 0) {

    return lastComparison;

  }

  if (isSetSomeObject()) {

    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.someObject,other.someObject);

    if (lastComparison != 0) {

      return lastComparison;

    }

  }

  return 0;

}

Location: MyPojo.java

Content: 

public MyPojo deepCopy(){

  return new MyPojo(this);

}

Location: MyPojo.java

Content: 

@Override public boolean equals(java.lang.Object that){

  if (that == null)   return false;

  if (that instanceof MyPojo)   return this.equals((MyPojo)that);

  return false;

}

Location: MyPojo.java

Content: 

public boolean equals(MyPojo that){

  if (that == null)   return false;

  if (this == that)   return true;

  boolean this_present_id=true;

  boolean that_present_id=true;

  if (this_present_id || that_present_id) {

    if (!(this_present_id && that_present_id))     return false;

    if (this.id != that.id)     return false;

  }

  boolean this_present_name=true && this.isSetName();

  boolean that_present_name=true && that.isSetName();

  if (this_present_name || that_present_name) {

    if (!(this_present_name && that_present_name))     return false;

    if (!this.name.equals(that.name))     return false;

  }

  boolean this_present_operationName=true && this.isSetOperationName();

  boolean that_present_operationName=true && that.isSetOperationName();

  if (this_present_operationName || that_present_operationName) {

    if (!(this_present_operationName && that_present_operationName))     return false;

    if (!this.operationName.equals(that.operationName))     return false;

  }

  boolean this_present_operations=true && this.isSetOperations();

  boolean that_present_operations=true && that.isSetOperations();

  if (this_present_operations || that_present_operations) {

    if (!(this_present_operations && that_present_operations))     return false;

    if (!this.operations.equals(that.operations))     return false;

  }

  boolean this_present_otherId1=true;

  boolean that_present_otherId1=true;

  if (this_present_otherId1 || that_present_otherId1) {

    if (!(this_present_otherId1 && that_present_otherId1))     return false;

    if (this.otherId1 != that.otherId1)     return false;

  }

  boolean this_present_otherId2=true;

  boolean that_present_otherId2=true;

  if (this_present_otherId2 || that_present_otherId2) {

    if (!(this_present_otherId2 && that_present_otherId2))     return false;

    if (this.otherId2 != that.otherId2)     return false;

  }

  boolean this_present_otherId3=true;

  boolean that_present_otherId3=true;

  if (this_present_otherId3 || that_present_otherId3) {

    if (!(this_present_otherId3 && that_present_otherId3))     return false;

    if (this.otherId3 != that.otherId3)     return false;

  }

  boolean this_present_someObject=true && this.isSetSomeObject();

  boolean that_present_someObject=true && that.isSetSomeObject();

  if (this_present_someObject || that_present_someObject) {

    if (!(this_present_someObject && that_present_someObject))     return false;

    if (!this.someObject.equals(that.someObject))     return false;

  }

  return true;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public _Fields fieldForId(int fieldId){

  return _Fields.findByThriftId(fieldId);

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.lang.Object getFieldValue(_Fields field){

switch (field) {

case ID:

    return getId();

case NAME:

  return getName();

case OPERATION_NAME:

return getOperationName();

case OPERATIONS:

return getOperations();

case OTHER_ID1:

return getOtherId1();

case OTHER_ID2:

return getOtherId2();

case OTHER_ID3:

return getOtherId3();

case SOME_OBJECT:

return getSomeObject();

}

throw new java.lang.IllegalStateException();

}

Location: MyPojo.java

Content: 

public int getId(){

  return this.id;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.lang.String getName(){

  return this.name;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.util.List<java.lang.String> getOperationName(){

  return this.operationName;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.util.Iterator<java.lang.String> getOperationNameIterator(){

  return (this.operationName == null) ? null : this.operationName.iterator();

}

Location: MyPojo.java

Content: 

public int getOperationNameSize(){

  return (this.operationName == null) ? 0 : this.operationName.size();

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.util.List<MyOperation> getOperations(){

  return this.operations;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.util.Iterator<MyOperation> getOperationsIterator(){

  return (this.operations == null) ? null : this.operations.iterator();

}

Location: MyPojo.java

Content: 

public int getOperationsSize(){

  return (this.operations == null) ? 0 : this.operations.size();

}

Location: MyPojo.java

Content: 

public int getOtherId1(){

  return this.otherId1;

}

Location: MyPojo.java

Content: 

public int getOtherId2(){

  return this.otherId2;

}

Location: MyPojo.java

Content: 

public int getOtherId3(){

  return this.otherId3;

}

Location: MyPojo.java

Content: 

@org.apache.thrift.annotation.Nullable public java.lang.String getSomeObject(){

  return this.someObject;

}

Location: MyPojo.java

Content: 

@Override public int hashCode(){

  int hashCode=1;

  hashCode=hashCode * 8191 + id;

  hashCode=hashCode * 8191 + ((isSetName()) ? 131071 : 524287);

  if (isSetName())   hashCode=hashCode * 8191 + name.hashCode();

  hashCode=hashCode * 8191 + ((isSetOperationName()) ? 131071 : 524287);

  if (isSetOperationName())   hashCode=hashCode * 8191 + operationName.hashCode();

  hashCode=hashCode * 8191 + ((isSetOperations()) ? 131071 : 524287);

  if (isSetOperations())   hashCode=hashCode * 8191 + operations.hashCode();

  hashCode=hashCode * 8191 + otherId1;

  hashCode=hashCode * 8191 + otherId2;

  hashCode=hashCode * 8191 + otherId3;

  hashCode=hashCode * 8191 + ((isSetSomeObject()) ? 131071 : 524287);

  if (isSetSomeObject())   hashCode=hashCode * 8191 + someObject.hashCode();

  return hashCode;

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise 

 */

public boolean isSet(_Fields field){

  if (field == null) {

    throw new java.lang.IllegalArgumentException();

  }

switch (field) {

case ID:

    return isSetId();

case NAME:

  return isSetName();

case OPERATION_NAME:

return isSetOperationName();

case OPERATIONS:

return isSetOperations();

case OTHER_ID1:

return isSetOtherId1();

case OTHER_ID2:

return isSetOtherId2();

case OTHER_ID3:

return isSetOtherId3();

case SOME_OBJECT:

return isSetSomeObject();

}

throw new java.lang.IllegalStateException();

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field id is set (has been assigned a value) and false otherwise 

 */

public boolean isSetId(){

  return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield,__ID_ISSET_ID);

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field name is set (has been assigned a value) and false otherwise 

 */

public boolean isSetName(){

  return this.name != null;

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field operationName is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOperationName(){

  return this.operationName != null;

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field operations is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOperations(){

  return this.operations != null;

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field otherId1 is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOtherId1(){

  return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield,__OTHERID1_ISSET_ID);

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field otherId2 is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOtherId2(){

  return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield,__OTHERID2_ISSET_ID);

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field otherId3 is set (has been assigned a value) and false otherwise 

 */

public boolean isSetOtherId3(){

  return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield,__OTHERID3_ISSET_ID);

}

Location: MyPojo.java

Content: 

/** 

 * Returns true if field someObject is set (has been assigned a value) and false otherwise 

 */

public boolean isSetSomeObject(){

  return this.someObject != null;

}

Location: MyPojo.java

Content: 

public MyPojo(){

}

Location: MyPojo.java

Content: 

public MyPojo(int id,java.lang.String name,java.util.List<java.lang.String> operationName,java.util.List<MyOperation> operations,int otherId1,int otherId2,int otherId3){

  this();

  this.id=id;

  setIdIsSet(true);

  this.name=name;

  this.operationName=operationName;

  this.operations=operations;

  this.otherId1=otherId1;

  setOtherId1IsSet(true);

  this.otherId2=otherId2;

  setOtherId2IsSet(true);

  this.otherId3=otherId3;

  setOtherId3IsSet(true);

}

Location: MyPojo.java

Content: 

/** 

 * Performs a deep copy on <i>other</i>.

 */

public MyPojo(MyPojo other){

  __isset_bitfield=other.__isset_bitfield;

  this.id=other.id;

  if (other.isSetName()) {

    this.name=other.name;

  }

  if (other.isSetOperationName()) {

    java.util.List<java.lang.String> __this__operationName=new java.util.ArrayList<java.lang.String>(other.operationName);

    this.operationName=__this__operationName;

  }

  if (other.isSetOperations()) {

    java.util.List<MyOperation> __this__operations=new java.util.ArrayList<MyOperation>(other.operations.size());

    for (    MyOperation other_element : other.operations) {

      __this__operations.add(new MyOperation(other_element));

    }

    this.operations=__this__operations;

  }

  this.otherId1=other.otherId1;

  this.otherId2=other.otherId2;

  this.otherId3=other.otherId3;

  if (other.isSetSomeObject()) {

    this.someObject=other.someObject;

  }

}

Location: MyPojo.java

Content: 

private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {

  try {

    __isset_bitfield=0;

    read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));

  }

 catch (  org.apache.thrift.TException te) {

    throw new java.io.IOException(te);

  }

}

Location: MyPojo.java

Content: 

public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {

  scheme(iprot).read(iprot,this);

}

Location: MyPojo.java

Content: 

private static <S extends org.apache.thrift.scheme.IScheme>S scheme(org.apache.thrift.protocol.TProtocol proto){

  return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();

}

Location: MyPojo.java

Content: 

public void setFieldValue(_Fields field,@org.apache.thrift.annotation.Nullable java.lang.Object value){

switch (field) {

case ID:

    if (value == null) {

      unsetId();

    }

 else {

      setId((java.lang.Integer)value);

    }

  break;

case NAME:

if (value == null) {

  unsetName();

}

 else {

  setName((java.lang.String)value);

}

break;

case OPERATION_NAME:

if (value == null) {

unsetOperationName();

}

 else {

setOperationName((java.util.List<java.lang.String>)value);

}

break;

case OPERATIONS:

if (value == null) {

unsetOperations();

}

 else {

setOperations((java.util.List<MyOperation>)value);

}

break;

case OTHER_ID1:

if (value == null) {

unsetOtherId1();

}

 else {

setOtherId1((java.lang.Integer)value);

}

break;

case OTHER_ID2:

if (value == null) {

unsetOtherId2();

}

 else {

setOtherId2((java.lang.Integer)value);

}

break;

case OTHER_ID3:

if (value == null) {

unsetOtherId3();

}

 else {

setOtherId3((java.lang.Integer)value);

}

break;

case SOME_OBJECT:

if (value == null) {

unsetSomeObject();

}

 else {

setSomeObject((java.lang.String)value);

}

break;

}

}

Location: MyPojo.java

Content: 

public void setIdIsSet(boolean value){

  __isset_bitfield=org.apache.thrift.EncodingUtils.setBit(__isset_bitfield,__ID_ISSET_ID,value);

}

Location: MyPojo.java

Content: 

public MyPojo setId(int id){

  this.id=id;

  setIdIsSet(true);

  return this;

}

Location: MyPojo.java

Content: 

public void setNameIsSet(boolean value){

  if (!value) {

    this.name=null;

  }

}

Location: MyPojo.java

Content: 

public MyPojo setName(@org.apache.thrift.annotation.Nullable java.lang.String name){

  this.name=name;

  return this;

}

Location: MyPojo.java

Content: 

public void setOperationNameIsSet(boolean value){

  if (!value) {

    this.operationName=null;

  }

}

Location: MyPojo.java

Content: 

public MyPojo setOperationName(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> operationName){

  this.operationName=operationName;

  return this;

}

Location: MyPojo.java

Content: 

public void setOperationsIsSet(boolean value){

  if (!value) {

    this.operations=null;

  }

}

Location: MyPojo.java

Content: 

public MyPojo setOperations(@org.apache.thrift.annotation.Nullable java.util.List<MyOperation> operations){

  this.operations=operations;

  return this;

}

Location: MyPojo.java

Content: 

public void setOtherId1IsSet(boolean value){

  __isset_bitfield=org.apache.thrift.EncodingUtils.setBit(__isset_bitfield,__OTHERID1_ISSET_ID,value);

}

Location: MyPojo.java

Content: 

public MyPojo setOtherId1(int otherId1){

  this.otherId1=otherId1;

  setOtherId1IsSet(true);

  return this;

}

Location: MyPojo.java

Content: 

public void setOtherId2IsSet(boolean value){

  __isset_bitfield=org.apache.thrift.EncodingUtils.setBit(__isset_bitfield,__OTHERID2_ISSET_ID,value);

}

Location: MyPojo.java

Content: 

public MyPojo setOtherId2(int otherId2){

  this.otherId2=otherId2;

  setOtherId2IsSet(true);

  return this;

}

Location: MyPojo.java

Content: 

public void setOtherId3IsSet(boolean value){

  __isset_bitfield=org.apache.thrift.EncodingUtils.setBit(__isset_bitfield,__OTHERID3_ISSET_ID,value);

}

Location: MyPojo.java

Content: 

public MyPojo setOtherId3(int otherId3){

  this.otherId3=otherId3;

  setOtherId3IsSet(true);

  return this;

}

Location: MyPojo.java

Content: 

public void setSomeObjectIsSet(boolean value){

  if (!value) {

    this.someObject=null;

  }

}

Location: MyPojo.java

Content: 

public MyPojo setSomeObject(@org.apache.thrift.annotation.Nullable java.lang.String someObject){

  this.someObject=someObject;

  return this;

}

Location: MyPojo.java

Content: 

@Override public java.lang.String toString(){

  java.lang.StringBuilder sb=new java.lang.StringBuilder("MyPojo(");

  boolean first=true;

  sb.append("id:");

  sb.append(this.id);

  first=false;

  if (!first)   sb.append(", ");

  sb.append("name:");

  if (this.name == null) {

    sb.append("null");

  }

 else {

    sb.append(this.name);

  }

  first=false;

  if (!first)   sb.append(", ");

  sb.append("operationName:");

  if (this.operationName == null) {

    sb.append("null");

  }

 else {

    sb.append(this.operationName);

  }

  first=false;

  if (!first)   sb.append(", ");

  sb.append("operations:");

  if (this.operations == null) {

    sb.append("null");

  }

 else {

    sb.append(this.operations);

  }

  first=false;

  if (!first)   sb.append(", ");

  sb.append("otherId1:");

  sb.append(this.otherId1);

  first=false;

  if (!first)   sb.append(", ");

  sb.append("otherId2:");

  sb.append(this.otherId2);

  first=false;

  if (!first)   sb.append(", ");

  sb.append("otherId3:");

  sb.append(this.otherId3);

  first=false;

  if (isSetSomeObject()) {

    if (!first)     sb.append(", ");

    sb.append("someObject:");

    if (this.someObject == null) {

      sb.append("null");

    }

 else {

      sb.append(this.someObject);

    }

    first=false;

  }

  sb.append(")");

  return sb.toString();

}

Location: MyPojo.java

Content: 

public void unsetId(){

  __isset_bitfield=org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield,__ID_ISSET_ID);

}

Location: MyPojo.java

Content: 

public void unsetName(){

  this.name=null;

}

Location: MyPojo.java

Content: 

public void unsetOperationName(){

  this.operationName=null;

}

Location: MyPojo.java

Content: 

public void unsetOperations(){

  this.operations=null;

}

Location: MyPojo.java

Content: 

public void unsetOtherId1(){

  __isset_bitfield=org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield,__OTHERID1_ISSET_ID);

}

Location: MyPojo.java

Content: 

public void unsetOtherId2(){

  __isset_bitfield=org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield,__OTHERID2_ISSET_ID);

}

Location: MyPojo.java

Content: 

public void unsetOtherId3(){

  __isset_bitfield=org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield,__OTHERID3_ISSET_ID);

}

Location: MyPojo.java

Content: 

public void unsetSomeObject(){

  this.someObject=null;

}

Location: MyPojo.java

Content: 

public void validate() throws org.apache.thrift.TException {

}

Location: MyPojo.java

Content: 

private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {

  try {

    write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));

  }

 catch (  org.apache.thrift.TException te) {

    throw new java.io.IOException(te);

  }

}

Location: MyPojo.java

Content: 

public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {

  scheme(oprot).write(oprot,this);

}

