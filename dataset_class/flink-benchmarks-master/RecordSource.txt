Location: RecordSource.java

Content: 

@Override public SplitEnumerator<EmptySplit,EmptyEnumeratorState> createEnumerator(SplitEnumeratorContext<EmptySplit> enumContext){

  return new EmptySplitSplitEnumerator();

}

Location: RecordSource.java

Content: 

@Override public SourceReader<Record,EmptySplit> createReader(SourceReaderContext readerContext){

  return new RecordSourceReader(minCheckpoints,recordSize);

}

Location: RecordSource.java

Content: 

@Override public Boundedness getBoundedness(){

  return Boundedness.CONTINUOUS_UNBOUNDED;

}

Location: RecordSource.java

Content: 

@Override public SimpleVersionedSerializer<EmptyEnumeratorState> getEnumeratorCheckpointSerializer(){

  return new EnumeratorVersionedSerializer();

}

Location: RecordSource.java

Content: 

@Override public SimpleVersionedSerializer<EmptySplit> getSplitSerializer(){

  return new SplitVersionedSerializer();

}

Location: RecordSource.java

Content: 

public RecordSource(int minCheckpoints){

  this(minCheckpoints,DEFAULT_PAYLOAD_SIZE);

}

Location: RecordSource.java

Content: 

public RecordSource(int minCheckpoints,int recordSize){

  this.minCheckpoints=minCheckpoints;

  this.recordSize=recordSize;

}

Location: RecordSource.java

Content: 

@Override public SplitEnumerator<EmptySplit,EmptyEnumeratorState> restoreEnumerator(SplitEnumeratorContext<EmptySplit> enumContext,EmptyEnumeratorState state){

  return new EmptySplitSplitEnumerator();

}

Location: RecordSource.java

Content: 

@Override public SplitEnumerator<EmptySplit,EmptyEnumeratorState> createEnumerator(SplitEnumeratorContext<EmptySplit> enumContext){

  return new EmptySplitSplitEnumerator();

}

Location: RecordSource.java

Content: 

@Override public SourceReader<Record,EmptySplit> createReader(SourceReaderContext readerContext){

  return new RecordSourceReader(minCheckpoints,recordSize);

}

Location: RecordSource.java

Content: 

@Override public Boundedness getBoundedness(){

  return Boundedness.CONTINUOUS_UNBOUNDED;

}

Location: RecordSource.java

Content: 

@Override public SimpleVersionedSerializer<EmptyEnumeratorState> getEnumeratorCheckpointSerializer(){

  return new EnumeratorVersionedSerializer();

}

Location: RecordSource.java

Content: 

@Override public SimpleVersionedSerializer<EmptySplit> getSplitSerializer(){

  return new SplitVersionedSerializer();

}

Location: RecordSource.java

Content: 

public RecordSource(int minCheckpoints){

  this(minCheckpoints,DEFAULT_PAYLOAD_SIZE);

}

Location: RecordSource.java

Content: 

public RecordSource(int minCheckpoints,int recordSize){

  this.minCheckpoints=minCheckpoints;

  this.recordSize=recordSize;

}

Location: RecordSource.java

Content: 

@Override public SplitEnumerator<EmptySplit,EmptyEnumeratorState> restoreEnumerator(SplitEnumeratorContext<EmptySplit> enumContext,EmptyEnumeratorState state){

  return new EmptySplitSplitEnumerator();

}

