Location: StringSerializationBenchmark.java

Content: 

private String generate(char[] charset,int length){

  char[] buffer=new char[length];

  Random random=new Random();

  for (int i=0; i < length; i++) {

    buffer[i]=charset[random.nextInt(charset.length)];

  }

  return new String(buffer);

}

Location: StringSerializationBenchmark.java

Content: 

@Benchmark public String stringRead() throws IOException {

  serializedBuffer.reset();

  return serializer.deserialize(serializedStream);

}

Location: StringSerializationBenchmark.java

Content: 

@Benchmark public byte[] stringWrite() throws IOException {

  ByteArrayOutputStream buffer=new ByteArrayOutputStream();

  DataOutputView out=new DataOutputViewStreamWrapper(buffer);

  serializer.serialize(input,out);

  return buffer.toByteArray();

}

Location: StringSerializationBenchmark.java

Content: 

private String generate(char[] charset,int length){

  char[] buffer=new char[length];

  Random random=new Random();

  for (int i=0; i < length; i++) {

    buffer[i]=charset[random.nextInt(charset.length)];

  }

  return new String(buffer);

}

Location: StringSerializationBenchmark.java

Content: 

@Benchmark public String stringRead() throws IOException {

  serializedBuffer.reset();

  return serializer.deserialize(serializedStream);

}

Location: StringSerializationBenchmark.java

Content: 

@Benchmark public byte[] stringWrite() throws IOException {

  ByteArrayOutputStream buffer=new ByteArrayOutputStream();

  DataOutputView out=new DataOutputViewStreamWrapper(buffer);

  serializer.serialize(input,out);

  return buffer.toByteArray();

}

