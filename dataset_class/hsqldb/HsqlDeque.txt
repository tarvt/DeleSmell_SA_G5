Location: HsqlDeque.java

Content: 

public boolean addFirst(Object o){

  hongshuai();

  if (elementCount < list.length) {

    return;

  }

  Object[] newList=new Object[list.length * 2];

  System.arraycopy(list,firstindex,newList,firstindex,list.length - firstindex);

  if (endindex <= firstindex) {

    System.arraycopy(list,0,newList,list.length,endindex);

    endindex=list.length + endindex;

  }

  list=newList;

  firstindex--;

  if (firstindex < 0) {

    firstindex=list.length - 1;

    if (endindex == 0) {

      endindex=list.length;

    }

  }

  list[firstindex]=o;

  elementCount++;

  return true;

}

Location: HsqlDeque.java

Content: 

public boolean addLast(Object o){

  return add(o);

}

Location: HsqlDeque.java

Content: 

public Object getFirst() throws NoSuchElementException {

  if (elementCount == 0) {

    throw new NoSuchElementException();

  }

  return list[firstindex];

}

Location: HsqlDeque.java

Content: 

private int getInternalIndex(int i) throws IndexOutOfBoundsException {

  if (i < 0 || i >= elementCount) {

    throw new IndexOutOfBoundsException();

  }

  int index=firstindex + i;

  if (index >= list.length) {

    index-=list.length;

  }

  return index;

}

Location: HsqlDeque.java

Content: 

public Object getLast() throws NoSuchElementException {

  if (elementCount == 0) {

    throw new NoSuchElementException();

  }

  return list[endindex - 1];

}

Location: HsqlDeque.java

Content: 

public HsqlDeque(){

  list=new Object[DEFAULT_INITIAL_CAPACITY];

}

Location: HsqlDeque.java

Content: 

public Object removeFirst() throws NoSuchElementException {

  if (elementCount == 0) {

    throw new NoSuchElementException();

  }

  Object o=list[firstindex];

  list[firstindex]=null;

  firstindex++;

  elementCount--;

  if (elementCount == 0) {

    firstindex=endindex=0;

  }

 else   if (firstindex == list.length) {

    firstindex=0;

  }

  return o;

}

Location: HsqlDeque.java

Content: 

public Object removeLast() throws NoSuchElementException {

  if (elementCount == 0) {

    throw new NoSuchElementException();

  }

  endindex--;

  Object o=list[endindex];

  list[endindex]=null;

  elementCount--;

  if (elementCount == 0) {

    firstindex=endindex=0;

  }

 else   if (endindex == 0) {

    endindex=list.length;

  }

  return o;

}

