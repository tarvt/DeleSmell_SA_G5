Location: MainInvoker.java

Content: 

/** 

 * Invokes the static main(String[]) method from each specified class.

 */

public static void invoke(String className,String[] args) throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException {

  Class c;

  Method method;

  Class[] stringArrayCA={emptyStringArray.getClass()};

  Object[] objectArray={(args == null) ? emptyStringArray : args};

  c=Class.forName(className);

  method=c.getMethod("main",stringArrayCA);

  method.invoke(null,objectArray);

}

Location: MainInvoker.java

Content: 

/** 

 * Invokes the static main(String[]) method from each specified class. This method <b>will System.exit()</b> if any invocation fails. Note that multiple class invocations are delimited by empty-string parameters.  How the user supplies these empty strings is determined entirely by the caller's environment.  From Windows this can generally be accomplished with double-quotes like "".  From all popular UNIX shells, this can be accomplished with single or double-quotes:  '' or "".

 * @param sa Run java org.hsqldb.util.MainInvoker --help for syntax help

 */

public static void main(String[] sa){

  if (sa.length > 0 && sa[0].equals("--help")) {

    System.err.println(SYNTAX_MSG);

    System.exit(0);

  }

  ArrayList outList=new ArrayList();

  int curInArg=-1;

  try {

    while (++curInArg < sa.length) {

      if (sa[curInArg].length() < 1) {

        if (outList.size() < 1) {

          syntaxFailure();

        }

        invoke((String)outList.remove(0),(String[])outList.toArray(emptyStringArray));

        outList.clear();

      }

 else {

        outList.add(sa[curInArg]);

      }

    }

    if (outList.size() < 1) {

      syntaxFailure();

    }

    invoke((String)outList.remove(0),(String[])outList.toArray(emptyStringArray));

  }

 catch (  Exception e) {

    e.printStackTrace();

    System.exit(1);

  }

}

Location: MainInvoker.java

Content: 

private static void syntaxFailure(){

  System.err.println(SYNTAX_MSG);

  System.exit(2);

}

