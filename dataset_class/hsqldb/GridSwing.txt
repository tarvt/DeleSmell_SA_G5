Location: GridSwing.java

Content: 

/** 

 * Append a tuple to the end of the table.

 */

public void addRow(Object[] r){

  Object[] row=new Object[r.length];

  for (int i=0; i < r.length; i++) {

    row[i]=r[i];

    if (row[i] == null) {

    }

  }

  rows.addElement(row);

}

Location: GridSwing.java

Content: 

public static void autoSizeTableColumns(JTable table){

  TableModel model=table.getModel();

  TableColumn column=null;

  Component comp=null;

  int headerWidth=0;

  int maxCellWidth=Integer.MIN_VALUE;

  int cellWidth=0;

  TableCellRenderer headerRenderer=table.getTableHeader().getDefaultRenderer();

  for (int i=0; i < table.getColumnCount(); i++) {

    column=table.getColumnModel().getColumn(i);

    comp=headerRenderer.getTableCellRendererComponent(table,column.getHeaderValue(),false,false,0,0);

    headerWidth=comp.getPreferredSize().width + 10;

    maxCellWidth=Integer.MIN_VALUE;

    for (int j=0; j < Math.min(model.getRowCount(),30); j++) {

      TableCellRenderer r=table.getCellRenderer(j,i);

      comp=r.getTableCellRendererComponent(table,model.getValueAt(j,i),false,false,j,i);

      cellWidth=comp.getPreferredSize().width;

      if (cellWidth >= maxCellWidth) {

        maxCellWidth=cellWidth;

      }

    }

    column.setPreferredWidth(Math.max(headerWidth,maxCellWidth) + 10);

  }

}

Location: GridSwing.java

Content: 

public void fireTableChanged(TableModelEvent e){

  super.fireTableChanged(e);

  autoSizeTableColumns(jtable);

}

Location: GridSwing.java

Content: 

/** 

 * Get the current table data. Each row is represented as a <code>String[]</code> with a single non-null value in the 0-relative column position. <p>The first row is at offset 0, the nth row at offset n etc.

 */

public Vector getData(){

  return rows;

}

Location: GridSwing.java

Content: 

/** 

 * Get the current column headings.

 */

public Object[] getHead(){

  return headers;

}

Location: GridSwing.java

Content: 

/** 

 * Default constructor.

 */

public GridSwing(){

  super();

  headers=new Object[0];

  rows=new Vector();

}

Location: GridSwing.java

Content: 

/** 

 * Set the name of the column headings.

 */

public void setHead(Object[] h){

  headers=new Object[h.length];

  for (int i=0; i < h.length; i++) {

    headers[i]=h[i];

  }

}

Location: GridSwing.java

Content: 

public void setJTable(JTable table){

  jtable=table;

}

