Location: CachedObjectBase.java

Content: 

public int getAccessCount(){

  return accessCount;

}

Location: CachedObjectBase.java

Content: 

public int getStorageSize(){

  return storageSize;

}

Location: CachedObjectBase.java

Content: 

public boolean hasChanged(){

  return hasChanged;

}

Location: CachedObjectBase.java

Content: 

public final boolean isBlock(){

  return true;

}

Location: CachedObjectBase.java

Content: 

public boolean isInMemory(){

  return isInMemory;

}

Location: CachedObjectBase.java

Content: 

public final boolean isInvariable(){

  return false;

}

Location: CachedObjectBase.java

Content: 

public boolean isKeepInMemory(){

  return keepCount > 0;

}

Location: CachedObjectBase.java

Content: 

public boolean isNew(){

  return false;

}

Location: CachedObjectBase.java

Content: 

public boolean keepInMemory(boolean keep){

  if (!isInMemory) {

    return false;

  }

  if (keep) {

    keepCount++;

  }

 else {

    if (keepCount == 0) {

      throw Error.runtimeError(ErrorCode.U_S0500,"CachedObjectBase - keep count");

    }

    keepCount--;

  }

  return true;

}

Location: CachedObjectBase.java

Content: 

public void restore(){

}

Location: CachedObjectBase.java

Content: 

public final void setChanged(boolean flag){

  hasChanged=flag;

}

Location: CachedObjectBase.java

Content: 

public void setInMemory(boolean in){

  isInMemory=in;

}

Location: CachedObjectBase.java

Content: 

public void setPos(long pos){

  position=pos;

}

Location: CachedObjectBase.java

Content: 

public void updateAccessCount(int count){

  accessCount=count;

}

