Location: CommonSwing.java

Content: 

public static void errorMessage(Exception exceptionMsg){

  errorMessage(exceptionMsg,false);

}

Location: CommonSwing.java

Content: 

public static void errorMessage(Exception exceptionMsg,boolean quiet){

  Object[] options={"OK"};

  JOptionPane.showOptionDialog(null,exceptionMsg,messagerHeader,JOptionPane.DEFAULT_OPTION,JOptionPane.ERROR_MESSAGE,null,options,options[0]);

  if (!quiet) {

    exceptionMsg.printStackTrace();

  }

}

Location: CommonSwing.java

Content: 

protected static void errorMessage(String errorMessage){

  Object[] options={"OK"};

  JOptionPane.showOptionDialog(null,errorMessage,messagerHeader,JOptionPane.DEFAULT_OPTION,JOptionPane.WARNING_MESSAGE,null,options,options[0]);

}

Location: CommonSwing.java

Content: 

static Image getIcon(String target){

  if (target.equalsIgnoreCase("SystemCursor")) {

    return (new ImageIcon(CommonSwing.class.getResource("Hourglass.gif")).getImage());

  }

 else   if (target.equalsIgnoreCase("Frame")) {

    return (new ImageIcon(CommonSwing.class.getResource("hsqldb.gif")).getImage());

  }

 else   if (target.equalsIgnoreCase("Execute")) {

    return (new ImageIcon(CommonSwing.class.getResource("run_exc.gif")).getImage());

  }

 else   if (target.equalsIgnoreCase("StatusRunning")) {

    return (new ImageIcon(CommonSwing.class.getResource("RedCircle.gif")).getImage());

  }

 else   if (target.equalsIgnoreCase("StatusReady")) {

    return (new ImageIcon(CommonSwing.class.getResource("GreenCircle.gif")).getImage());

  }

 else   if (target.equalsIgnoreCase("Clear")) {

    return (new ImageIcon(CommonSwing.class.getResource("Clear.png")).getImage());

  }

 else   if (target.equalsIgnoreCase("Problem")) {

    return (new ImageIcon(CommonSwing.class.getResource("problems.gif")).getImage());

  }

 else   if (target.equalsIgnoreCase("BoldFont")) {

    return (new ImageIcon(CommonSwing.class.getResource("Bold.gif")).getImage());

  }

 else   if (target.equalsIgnoreCase("ItalicFont")) {

    return (new ImageIcon(CommonSwing.class.getResource("Italic.gif")).getImage());

  }

 else   if (target.equalsIgnoreCase("ColorSelection")) {

    return (new ImageIcon(CommonSwing.class.getResource("Colors.png")).getImage());

  }

 else   if (target.equalsIgnoreCase("Close")) {

    return (new ImageIcon(CommonSwing.class.getResource("Close.png")).getImage());

  }

 else {

    return (null);

  }

}

Location: CommonSwing.java

Content: 

static void setFramePositon(JFrame inTargetFrame){

  Dimension d=Toolkit.getDefaultToolkit().getScreenSize();

  Dimension size=inTargetFrame.getSize();

  if (d.width >= 640) {

    inTargetFrame.setLocation((d.width - size.width) / 2,(d.height - size.height) / 2);

  }

 else {

    inTargetFrame.setLocation(0,0);

    inTargetFrame.setSize(d);

  }

}

Location: CommonSwing.java

Content: 

static void setSwingLAF(java.awt.Component comp,String targetTheme){

  try {

    if (targetTheme.equalsIgnoreCase(Native)) {

      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

    }

 else     if (targetTheme.equalsIgnoreCase(Java)) {

      UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());

    }

 else     if (targetTheme.equalsIgnoreCase(Motif)) {

      UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");

    }

    SwingUtilities.updateComponentTreeUI(comp);

    if (comp instanceof java.awt.Frame) {

      ((java.awt.Frame)comp).pack();

    }

  }

 catch (  Exception e) {

    errorMessage(e);

  }

}

