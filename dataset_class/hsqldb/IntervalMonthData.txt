Location: IntervalMonthData.java

Content: 

public int compareTo(IntervalMonthData b){

  if (units > b.units) {

    return 1;

  }

 else   if (units < b.units) {

    return -1;

  }

 else {

    return 0;

  }

}

Location: IntervalMonthData.java

Content: 

public int getMonths(){

  return units;

}

Location: IntervalMonthData.java

Content: 

public IntervalMonthData(long months){

  this.units=(int)months;

}

Location: IntervalMonthData.java

Content: 

public IntervalMonthData(long months,IntervalType type){

  if (months >= type.getIntervalValueLimit()) {

    throw Error.error(ErrorCode.X_22006);

  }

  if (type.typeCode == Types.SQL_INTERVAL_YEAR) {

    months-=(months % 12);

  }

  this.units=(int)months;

}

Location: IntervalMonthData.java

Content: 

public static IntervalMonthData newIntervalMonth(long months,IntervalType type){

  return new IntervalMonthData(months,type);

}

Location: IntervalMonthData.java

Content: 

public static IntervalMonthData newIntervalYear(long years,IntervalType type){

  return new IntervalMonthData(years * 12,type);

}

