Location: TestKarl.java

Content: 

private static void copy(String src,String dest) throws IOException {

  File inputFile=new File(src);

  File outputFile=new File(dest);

  if (!inputFile.exists()) {

    return;

  }

  FileInputStream in=new FileInputStream(inputFile);

  FileOutputStream out=new FileOutputStream(outputFile);

  int c;

  while ((c=in.read()) != -1) {

    out.write(c);

  }

  in.close();

  out.close();

}

Location: TestKarl.java

Content: 

/** 

 * @param p_connection

 * @throws SQLException

 */

private static void doCreateTableTest(Connection p_connection) throws SQLException {

  System.out.println("CREATE TESTTABLE START ...");

  Statement st=p_connection.createStatement();

  st.executeUpdate("DROP TABLE TEST IF EXISTS");

  st.executeUpdate("CREATE TABLE TEST (TEST INTEGER)");

  st.close();

  System.out.println("END CREATE TESTTABLE");

  System.out.println("INSERT INTO TESTTABLE START ...");

  PreparedStatement p=p_connection.prepareStatement("INSERT INTO TEST (TEST) values (?)");

  p.setInt(1,123);

  p.execute();

  p.close();

  System.out.println("END INSERT INTO TESTTABLE");

}

Location: TestKarl.java

Content: 

/** 

 * @param p_connection

 * @throws SQLException

 */

private static void doUpdateInsertDeleteWaehler(Connection p_connection) throws SQLException {

  System.out.println("UPDATE WAEHLER START ...");

  PreparedStatement p=p_connection.prepareStatement("UPDATE WAEHLER SET AUSTRITTSDATUM=? WHERE NAME=?");

  p.setDate(1,null);

  p.setString(2,"Muster1");

  p.execute();

  p.close();

  System.out.println("END UPDATE WAEHLER");

  System.out.println("INSERT INTO WAEHLER START ...");

  p=p_connection.prepareStatement("INSERT INTO WAEHLER (NAME, AUSTRITTSDATUM) VALUES (?,?)");

  Calendar cal=GregorianCalendar.getInstance();

  p.setString(1,"Muster3");

  p.setDate(2,new Date(cal.getTimeInMillis()),cal);

  p.execute();

  p.close();

  System.out.println("END INSERT INTO WAEHLER");

  System.out.println("DELETE FROM WAEHLER START ...");

  p=p_connection.prepareStatement("DELETE FROM WAEHLER WHERE NAME = ?");

  p.setString(1,"Muster2");

  p.execute();

  p.close();

  System.out.println("END DELETE FROM WAEHLER");

}

Location: TestKarl.java

Content: 

/** 

 * @param p_connection

 * @throws SQLException

 */

private static void printMeta(Connection p_connection) throws SQLException {

  System.out.println("GET METADATA START ...");

  ResultSet rs=p_connection.getMetaData().getTables(null,null,null,null);

  System.out.println(rs.toString());

  int col_count=rs.getMetaData().getColumnCount();

  for (int i=1; i <= col_count; i++) {

    System.out.print(rs.getMetaData().getColumnLabel(i) + "\t");

  }

  System.out.println("");

  while (rs.next()) {

    for (int i=1; i <= col_count; i++) {

      System.out.print(rs.getObject(i));

      System.out.print("\t");

    }

    System.out.println("");

  }

  System.out.println("END GET METADATA");

}

Location: TestKarl.java

Content: 

/** 

 * @param p_connection

 * @param p_table

 * @throws SQLException

 */

private static void printTable(Connection p_connection,String p_table) throws SQLException {

  System.out.println("GET TABLE " + p_table + " START ...");

  Statement st=p_connection.createStatement();

  ResultSet rs=st.executeQuery("SELECT * FROM " + p_table);

  int col_count=rs.getMetaData().getColumnCount();

  for (int i=1; i <= col_count; i++) {

    System.out.print(rs.getMetaData().getColumnLabel(i) + "\t");

  }

  System.out.println("");

  while (rs.next()) {

    for (int i=1; i <= col_count; i++) {

      System.out.print(rs.getObject(i));

      System.out.print("\t");

    }

    System.out.println("");

  }

  st.close();

  System.out.println("... END GET TABLE " + p_table);

}

