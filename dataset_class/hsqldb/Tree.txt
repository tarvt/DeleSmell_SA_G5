Location: Tree.java

Content: 

/** 

 * Method declaration

 * @param key

 * @param value

 */

public void addRow(String key,String value){

  addRow(key,value,null,0);

}

Location: Tree.java

Content: 

/** 

 * Method declaration

 * @param key

 * @param value

 * @param state

 * @param color

 */

public void addRow(String key,String value,String state,int color){

  String[] row=new String[4];

  if (value == null) {

    value="";

  }

  row[0]=key;

  row[1]=value;

  row[2]=state;

  row[3]=String.valueOf(color);

  vData.addElement(row);

  int len=fMetrics.stringWidth(value);

  if (len > iMaxTextLength) {

    iMaxTextLength=len;

  }

  iRowCount++;

}

Location: Tree.java

Content: 

/** 

 * Method declaration

 * @param e

 * @param x

 * @param y

 */

public boolean mouseDown(Event e,int x,int y){

  if (iRowHeight == 0 || x > iWidth || y > iHeight) {

    return true;

  }

  y+=iRowHeight / 2;

  String[] root=new String[100];

  root[0]="";

  int currentindent=0;

  int cy=iRowHeight;

  boolean closed=false;

  int i=0;

  y+=iY;

  for (; i < iRowCount; i++) {

    String[] s=(String[])vData.elementAt(i);

    String key=s[0];

    String folder=s[2];

    int ci=currentindent;

    for (; ci > 0; ci--) {

      if (key.startsWith(root[ci])) {

        break;

      }

    }

    if (root[ci].length() < key.length()) {

      ci++;

    }

    if (closed && ci > currentindent) {

      continue;

    }

    if (cy <= y && cy + iRowHeight > y) {

      break;

    }

    root[ci]=key;

    closed=folder != null && folder.equals("+");

    currentindent=ci;

    cy+=iRowHeight;

  }

  if (i >= 0 && i < iRowCount) {

    String[] s=(String[])vData.elementAt(i);

    String folder=s[2];

    if (folder != null && folder.equals("+")) {

      folder="-";

    }

 else     if (folder != null && folder.equals("-")) {

      folder="+";

    }

    s[2]=folder;

    vData.setElementAt(s,i);

    repaint();

  }

  return true;

}

Location: Tree.java

Content: 

/** 

 * Method declaration

 */

public void removeAll(){

  vData=new Vector();

  iRowCount=0;

  adjustScroll();

  iMaxTextLength=10;

  repaint();

}

Location: Tree.java

Content: 

/** 

 * Constructor declaration

 */

Tree(){

  super();

  vData=new Vector();

  setLayout(null);

  sbHoriz=new Scrollbar(Scrollbar.HORIZONTAL);

  add(sbHoriz);

  sbVert=new Scrollbar(Scrollbar.VERTICAL);

  add(sbVert);

}

