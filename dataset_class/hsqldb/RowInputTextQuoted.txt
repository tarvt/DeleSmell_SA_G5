Location: RowInputTextQuoted.java

Content: 

protected String getField(String sep,int sepLen,boolean isEnd){

  String s=null;

  if (next >= charLength || text.charAt(next) != quoteChar) {

    return super.getField(sep,sepLen,isEnd);

  }

  try {

    field++;

    StringBuffer sb=new StringBuffer();

    boolean done=false;

    int state=NORMAL_FIELD;

    int end=-1;

    if (!isEnd) {

      end=text.indexOf(sep,next);

    }

    for (; next < charLength; next++) {

switch (state) {

case NORMAL_FIELD:

default :

        if (next == end) {

          next+=sepLen;

          done=true;

        }

 else         if (text.charAt(next) == quoteChar) {

          state=NEED_END_QUOTE;

        }

 else {

          sb.append(text.charAt(next));

        }

      break;

case NEED_END_QUOTE:

    if (text.charAt(next) == quoteChar) {

      state=FOUND_QUOTE;

    }

 else {

      sb.append(text.charAt(next));

    }

  break;

case FOUND_QUOTE:

if (text.charAt(next) == quoteChar) {

  sb.append(text.charAt(next));

  state=NEED_END_QUOTE;

}

 else {

  if (!isEnd) {

    end=text.indexOf(sep,next);

    if (end < 0) {

      end=charLength;

    }

    sb.append(text,next,end);

    next=end + sepLen;

    done=true;

  }

 else {

    next+=sepLen - 1;

    state=NORMAL_FIELD;

  }

}

break;

}

if (done) {

break;

}

}

s=sb.toString();

}

 catch (Exception e) {

String message=String.valueOf(field);

throw Error.error(e,ErrorCode.M_TEXT_SOURCE_FIELD_ERROR,message);

}

return s;

}

Location: RowInputTextQuoted.java

Content: 

public RowInputTextQuoted(TextFileSettings textFileSettings){

  super(textFileSettings);

  this.quoteChar=textFileSettings.quoteChar;

}

Location: RowInputTextQuoted.java

Content: 

public void setSource(String text,long pos,int byteSize){

  super.setSource(text,pos,byteSize);

  charLength=text.length();

  for (int i=charLength - 1; i > -1; i--) {

    if (text.charAt(i) == TextFileSettings.CR_CHAR || text.charAt(i) == TextFileSettings.LF_CHAR) {

      charLength--;

    }

 else {

      break;

    }

  }

}

