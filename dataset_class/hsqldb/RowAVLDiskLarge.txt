Location: RowAVLDiskLarge.java

Content: 

/** 

 * Constructor when read from the disk into the Cache.

 * @param t table

 * @param in data source

 * @throws IOException

 */

public RowAVLDiskLarge(PersistentStore store,RowInputInterface in) throws IOException {

  super(store.getTable());

  position=in.getFilePosition();

  storageSize=in.getSize();

  int indexcount=store.getAccessorKeys().length;

  nPrimaryNode=new NodeAVLDiskLarge(this,in,0);

  NodeAVL n=nPrimaryNode;

  for (int i=1; i < indexcount; i++) {

    n.nNext=new NodeAVLDiskLarge(this,in,i);

    n=n.nNext;

  }

  rowData=in.readData(table.getColumnTypes());

}

Location: RowAVLDiskLarge.java

Content: 

/** 

 * Constructor for new Rows.  Variable hasDataChanged is set to true in order to indicate the data needs saving.

 * @param t table

 * @param o row data

 */

public RowAVLDiskLarge(TableBase t,Object[] o,PersistentStore store){

  super(t,o,store);

}

