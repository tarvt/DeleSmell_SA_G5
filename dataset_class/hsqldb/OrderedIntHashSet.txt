Location: OrderedIntHashSet.java

Content: 

public boolean addAll(OrderedIntHashSet set){

  int oldSize=size();

  int setSize=set.size();

  for (int i=0; i < setSize; i++) {

    int value=set.get(i);

    add(value);

  }

  return oldSize != size();

}

Location: OrderedIntHashSet.java

Content: 

public boolean add(int key){

  int oldSize=size();

  super.addOrRemove(key,0,null,null,false);

  return oldSize != size();

}

Location: OrderedIntHashSet.java

Content: 

public boolean contains(int key){

  return super.containsKey(key);

}

Location: OrderedIntHashSet.java

Content: 

public int getIndex(int value){

  return getLookup(value);

}

Location: OrderedIntHashSet.java

Content: 

public int getOrderedStartMatchCount(int[] array){

  int i=0;

  for (; i < array.length; i++) {

    if (i >= size() || get(i) != array[i]) {

      break;

    }

  }

  return i;

}

Location: OrderedIntHashSet.java

Content: 

public int getStartMatchCount(int[] array){

  int i=0;

  for (; i < array.length; i++) {

    if (!super.containsKey(array[i])) {

      break;

    }

  }

  return i;

}

Location: OrderedIntHashSet.java

Content: 

public OrderedIntHashSet(){

  this(8);

}

Location: OrderedIntHashSet.java

Content: 

public OrderedIntHashSet(int initialCapacity) throws IllegalArgumentException {

  super(initialCapacity,BaseHashMap.intKeyOrValue,BaseHashMap.noKeyOrValue,false);

  isList=true;

}

