Location: RowSetNavigatorDataTable.java

Content: 

public void copy(RowSetNavigatorData other,int[] rightColumnIndexes){

  while (other.next()) {

    Object[] currentData=other.getCurrent();

    addAdjusted(currentData,rightColumnIndexes);

  }

  other.release();

}

Location: RowSetNavigatorDataTable.java

Content: 

public RowSetNavigatorDataTable(Session session,QueryExpression queryExpression){

  super(session);

  table=queryExpression.resultTable.duplicate();

  visibleColumnCount=table.getColumnCount();

  store=session.sessionData.getNewResultRowStore(table,true);

  table.store=store;

  mainIndex=queryExpression.mainIndex;

  fullIndex=queryExpression.fullIndex;

}

Location: RowSetNavigatorDataTable.java

Content: 

public RowSetNavigatorDataTable(Session session,QuerySpecification select){

  super(session);

  rangePosition=select.resultRangePosition;

  visibleColumnCount=select.indexLimitVisible;

  table=select.resultTable.duplicate();

  store=session.sessionData.getNewResultRowStore(table,!select.isAggregated);

  table.store=store;

  isAggregate=select.isAggregated;

  isSimpleAggregate=select.isAggregated && !select.isGrouped;

  reindexTable=select.isGrouped;

  mainIndex=select.mainIndex;

  fullIndex=select.fullIndex;

  orderIndex=select.orderIndex;

  groupIndex=select.groupIndex;

  idIndex=select.idIndex;

  tempRowData=new Object[1];

}

Location: RowSetNavigatorDataTable.java

Content: 

public RowSetNavigatorDataTable(Session session,QuerySpecification select,RowSetNavigatorData navigator){

  this(session,select);

  navigator.reset();

  while (navigator.next()) {

    add(navigator.getCurrent());

  }

}

Location: RowSetNavigatorDataTable.java

Content: 

public RowSetNavigatorDataTable(Session session,Table table){

  super(session);

  this.table=table;

  visibleColumnCount=table.getColumnCount();

  mainIndex=table.getPrimaryIndex();

  fullIndex=table.getFullIndex(session);

  store=table.getRowStore(session);

  this.size=(int)mainIndex.size(session,store);

  reset();

}

