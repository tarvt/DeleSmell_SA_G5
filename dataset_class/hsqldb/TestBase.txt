Location: TestBase.java

Content: 

protected Connection newConnection() throws SQLException {

  return DriverManager.getConnection(url,user,password);

}

Location: TestBase.java

Content: 

public void runWithResult(){

  TestResult result=run();

  String testName=this.getClass().getName();

  if (testName.startsWith("org.hsqldb.test.")) {

    testName=testName.substring(16);

  }

  testName+="." + getName();

  int failureCount=result.failureCount();

  System.out.println(testName + " failure count: " + failureCount);

  java.util.Enumeration failures=result.failures();

  while (failures.hasMoreElements()) {

    System.err.println(failures.nextElement());

  }

}

Location: TestBase.java

Content: 

public static void runWithResult(Class testCaseClass,String testName){

  try {

    Constructor ctor=testCaseClass.getConstructor(new Class[]{String.class});

    TestBase theTest=(TestBase)ctor.newInstance(new Object[]{testName});

    theTest.runWithResult();

  }

 catch (  Exception ex) {

    System.err.println("couldn't execute test:");

    ex.printStackTrace(System.err);

  }

}

Location: TestBase.java

Content: 

public TestBase(String name){

  super(name);

}

Location: TestBase.java

Content: 

public TestBase(String name,boolean isNetwork,boolean isHTTP){

  super(name);

  this.isNetwork=isNetwork;

  this.isHTTP=isHTTP;

}

Location: TestBase.java

Content: 

public TestBase(String name,String url,boolean isNetwork,boolean isHTTP){

  super(name);

  if (url != null) {

    this.url=url;

  }

  this.isNetwork=isNetwork;

  this.isHTTP=isHTTP;

}

