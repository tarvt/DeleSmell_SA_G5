Location: OdbcPreparedStatement.java

Content: 

/** 

 * Associates an StatementPortal with OdbcPreparedStatement.

 */

public void addPortal(StatementPortal portal){

  portals.add(portal);

}

Location: OdbcPreparedStatement.java

Content: 

protected OdbcPreparedStatement(OdbcPreparedStatement other){

  this.handle=other.handle;

  this.ackResult=other.ackResult;

}

Location: OdbcPreparedStatement.java

Content: 

/** 

 * Instantiates an proxy OdbcPreparedStatement object for the Connection Session, and adds the new instance to the specified map.

 */

public OdbcPreparedStatement(String handle,String query,Map containingMap,Session session) throws RecoverableOdbcFailure {

  this.handle=handle;

  this.query=query;

  this.containingMap=containingMap;

  this.session=session;

  Result psResult=Result.newPrepareStatementRequest();

  psResult.setPrepareOrExecuteProperties(query,0,0,0,0,ResultProperties.defaultPropsValue,Statement.NO_GENERATED_KEYS,null,null);

  ackResult=session.execute(psResult);

switch (ackResult.getType()) {

case ResultConstants.PREPARE_ACK:

    break;

case ResultConstants.ERROR:

  throw new RecoverableOdbcFailure(ackResult);

default :

throw new RecoverableOdbcFailure("Output Result from Statement prep is of " + "unexpected type: " + ackResult.getType());

}

containingMap.put(handle,this);

}

