Location: ExpressionTable.java

Content: 

/** 

 * Creates an UNNEST ARRAY or MULTISET expression

 */

ExpressionTable(Expression[] e,boolean ordinality){

  super(OpTypes.TABLE);

  nodes=e;

  this.ordinality=ordinality;

}

Location: ExpressionTable.java

Content: 

public Object[] getRowValue(Session session){

switch (opType) {

case OpTypes.TABLE:

{

      return table.queryExpression.getValues(session);

    }

default :

  throw Error.runtimeError(ErrorCode.U_S0500,"Expression");

}

}

Location: ExpressionTable.java

Content: 

Object getValue(Session session,Type type){

switch (opType) {

case OpTypes.TABLE:

{

      materialise(session);

      Object[] value=table.getValues(session);

      if (value.length == 1) {

        return value[0];

      }

      return value;

    }

default :

  throw Error.runtimeError(ErrorCode.U_S0500,"Expression");

}

}

Location: ExpressionTable.java

Content: 

private void insertArrayValues(Session session,PersistentStore store){

  Object[][] array=new Object[nodes.length][];

  for (int i=0; i < array.length; i++) {

    Object[] values=(Object[])nodes[i].getValue(session);

    if (values == null) {

      values=ValuePool.emptyObjectArray;

    }

    array[i]=values;

  }

  for (int i=0; ; i++) {

    boolean isRow=false;

    Object[] data=new Object[nodeDataTypes.length];

    for (int arrayIndex=0; arrayIndex < array.length; arrayIndex++) {

      if (i < array[arrayIndex].length) {

        data[arrayIndex]=array[arrayIndex][i];

        isRow=true;

      }

    }

    if (!isRow) {

      break;

    }

    if (ordinality) {

      data[nodes.length]=ValuePool.getInt(i + 1);

    }

    Row row=(Row)store.getNewCachedObject(session,data,false);

    try {

      store.indexRow(session,row);

    }

 catch (    HsqlException e) {

    }

  }

}

Location: ExpressionTable.java

Content: 

private void insertTableValues(Session session,PersistentStore store){

  Result result=nodes[LEFT].getResult(session);

  RowSetNavigator nav=result.navigator;

  while (nav.next()) {

    Object[] data=nav.getCurrent();

    Object[] newdata=(Object[])ArrayUtil.duplicateArray(data);

    Row row=(Row)store.getNewCachedObject(session,newdata,false);

    try {

      store.indexRow(session,row);

    }

 catch (    HsqlException e) {

    }

  }

}

Location: ExpressionTable.java

Content: 

void insertValuesIntoSubqueryTable(Session session,PersistentStore store){

  if (isTable) {

    insertTableValues(session,store);

  }

 else {

    insertArrayValues(session,store);

  }

}

