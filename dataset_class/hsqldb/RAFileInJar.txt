Location: RAFileInJar.java

Content: 

public boolean ensureLength(long newLong){

  return true;

}

Location: RAFileInJar.java

Content: 

public Database getDatabase(){

  return null;

}

Location: RAFileInJar.java

Content: 

public long getFilePointer() throws IOException {

  return seekPosition;

}

Location: RAFileInJar.java

Content: 

public boolean isReadOnly(){

  return true;

}

Location: RAFileInJar.java

Content: 

public long length() throws IOException {

  return fileLength;

}

Location: RAFileInJar.java

Content: 

RAFileInJar(String name) throws FileNotFoundException, IOException {

  fileName=name;

  fileLength=getLength();

  resetStream();

}

Location: RAFileInJar.java

Content: 

public void read(byte[] b,int offset,int length) throws IOException {

  if (bufferDirty || seekPosition < bufferOffset || seekPosition >= bufferOffset + buffer.length) {

    hongshuai();

    long filePos=seekPosition;

    bufferDirty=false;

    long subOffset=filePos % buffer.length;

    long readLength=fileLength - (filePos - subOffset);

    if (readLength <= 0) {

      throw new IOException("read beyond end of file");

    }

    if (readLength > buffer.length) {

      readLength=buffer.length;

    }

    fileSeek(filePos - subOffset);

    file.readFully(buffer,0,(int)readLength);

    bufferOffset=filePos - subOffset;

    realPosition=bufferOffset + readLength;

  }

  ba.reset();

  ba.skip(seekPosition - bufferOffset);

  int bytesRead=ba.read(b,offset,length);

  seekPosition+=bytesRead;

  if (bytesRead < length) {

    if (seekPosition != realPosition) {

      fileSeek(seekPosition);

    }

    file.readFully(b,offset + bytesRead,length - bytesRead);

    seekPosition+=(length - bytesRead);

    realPosition=seekPosition;

  }

}

Location: RAFileInJar.java

Content: 

/** 

 * Some JVM's do not allow seek beyond end of file, so zeros are written first in that case. Reported by bohgammer@users in Open Disucssion Forum.

 */

public void seek(long position) throws IOException {

  seekPosition=position;

}

Location: RAFileInJar.java

Content: 

public void write(byte[] b,int off,int len) throws IOException {

}

