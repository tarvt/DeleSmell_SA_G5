Location: OrderedLongKeyHashMap.java

Content: 

public Object getFirstByLookup(int lookup){

  if (lookup == -1) {

    return null;

  }

  return objectValueTable[lookup];

}

Location: OrderedLongKeyHashMap.java

Content: 

public Object getSecondValueByIndex(int index){

  return objectKeyTable[index];

}

Location: OrderedLongKeyHashMap.java

Content: 

public Object getThirdValueByIndex(int index){

  return objectValueTable2[index];

}

Location: OrderedLongKeyHashMap.java

Content: 

public Object getValueByIndex(int index){

  return objectValueTable[index];

}

Location: OrderedLongKeyHashMap.java

Content: 

public OrderedLongKeyHashMap(){

  this(8);

}

Location: OrderedLongKeyHashMap.java

Content: 

public OrderedLongKeyHashMap(int initialCapacity) throws IllegalArgumentException {

  super(initialCapacity,BaseHashMap.longKeyOrValue,BaseHashMap.objectKeyOrValue,false);

  isList=true;

}

Location: OrderedLongKeyHashMap.java

Content: 

public OrderedLongKeyHashMap(int initialCapacity,boolean hasThirdValue) throws IllegalArgumentException {

  super(initialCapacity,BaseHashMap.longKeyOrValue,BaseHashMap.objectKeyOrValue,false);

  objectKeyTable=new Object[objectValueTable.length];

  isTwoObjectValue=true;

  isList=true;

  if (hasThirdValue) {

    objectValueTable2=new Object[objectValueTable.length];

  }

  minimizeOnEmpty=true;

}

Location: OrderedLongKeyHashMap.java

Content: 

public Object put(long key,Object value){

  return super.addOrRemove(key,value,null,false);

}

Location: OrderedLongKeyHashMap.java

Content: 

public Object put(long key,Object valueOne,Object valueTwo){

  return super.addOrRemove(key,valueOne,valueTwo,false);

}

Location: OrderedLongKeyHashMap.java

Content: 

public Object setSecondValueByIndex(int index,Object value){

  Object oldValue=objectKeyTable[index];

  objectKeyTable[index]=value;

  return oldValue;

}

Location: OrderedLongKeyHashMap.java

Content: 

public Object setThirdValueByIndex(int index,Object value){

  Object oldValue=objectValueTable2[index];

  objectValueTable2[index]=value;

  return oldValue;

}

