Location: Option.java

Content: 

public static boolean isBackup(int options){

  return ((options & BACKUP) != 0);

}

Location: Option.java

Content: 

public static boolean isDefault(int options){

  return options == DEFAULT;

}

Location: Option.java

Content: 

public static boolean isFilter(int options){

  return ((options & FILTER) != 0);

}

Location: Option.java

Content: 

public static boolean isIndent(int options){

  return ((options & INDENT) != 0);

}

Location: Option.java

Content: 

public static boolean isTestOnly(int options){

  return ((options & TEST_ONLY) != 0);

}

Location: Option.java

Content: 

public static boolean isVerbose(int options){

  return ((options & VERBOSE) != 0);

}

Location: Option.java

Content: 

private Option(){

}

Location: Option.java

Content: 

public static int setBackup(int options,boolean backup){

  return (backup) ? (options | BACKUP) : (options & ~BACKUP);

}

Location: Option.java

Content: 

public static int setDefault(int options,boolean _default){

  return (_default) ? DEFAULT : options;

}

Location: Option.java

Content: 

public static int setFilter(int options,boolean filter){

  return (filter) ? (options | FILTER) : (options & ~FILTER);

}

Location: Option.java

Content: 

public static int setIndent(int options,boolean indent){

  return (indent) ? (options | INDENT) : (options & ~INDENT);

}

Location: Option.java

Content: 

public static int setTestOnly(int options,boolean testOnly){

  return (testOnly) ? (options | TEST_ONLY) : (options & ~TEST_ONLY);

}

Location: Option.java

Content: 

public static int setVerbose(int options,boolean verbose){

  return (verbose) ? (options | VERBOSE) : (options & ~VERBOSE);

}

