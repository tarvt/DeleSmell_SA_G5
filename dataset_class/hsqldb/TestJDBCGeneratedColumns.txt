Location: TestJDBCGeneratedColumns.java

Content: 

public void testBatchInsert(){

  boolean successPrepared=false;

  boolean successDirect=false;

  try {

    Connection c=newConnection();

    Statement st=c.createStatement();

    String s="DROP TABLE T IF EXISTS";

    st.execute(s);

    s="CREATE TABLE T (I INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 33), C CHARACTER(10))";

    st.execute(s);

    s="INSERT INTO T (C) VALUES('TEST')";

    PreparedStatement ps=c.prepareStatement(s,Statement.RETURN_GENERATED_KEYS);

    ps.addBatch();

    ps.addBatch();

    ps.executeBatch();

    ResultSet rs=ps.getGeneratedKeys();

    int val=33;

    while (rs.next()) {

      System.out.println("" + rs.getInt(1));

      successPrepared=rs.getInt(1) == val;

      val++;

    }

    ps.close();

    ps=c.prepareStatement(s,new int[]{1});

    ps.addBatch();

    ps.addBatch();

    ps.executeBatch();

    rs=ps.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("" + rs.getInt(1));

      successPrepared&=rs.getInt(1) == val;

      val++;

    }

    ps.close();

    ps=c.prepareStatement(s,new String[]{"I"});

    ps.addBatch();

    ps.addBatch();

    ps.executeBatch();

    rs=ps.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("" + rs.getInt(1));

      successPrepared&=rs.getInt(1) == val;

      successPrepared&=rs.getBigDecimal(1).intValue() == val;

      val++;

    }

    ps.close();

    ps=c.prepareStatement(s,new String[]{"I","C"});

    ps.addBatch();

    ps.addBatch();

    ps.executeBatch();

    rs=ps.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("" + rs.getInt(1));

      successPrepared&=rs.getInt("I") == val;

      successPrepared&=rs.getBigDecimal(1).intValue() == val;

      successPrepared&=rs.getString("C").startsWith("TEST");

      val++;

    }

    ps.close();

    ps=c.prepareStatement(s,new String[]{"C","I"});

    ps.addBatch();

    ps.addBatch();

    ps.executeBatch();

    rs=ps.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("" + rs.getInt(2));

      successPrepared&=rs.getInt(2) == val;

      successPrepared&=rs.getBigDecimal(2).intValue() == val;

      successPrepared&=rs.getString(1).startsWith("TEST");

      val++;

    }

    ps.close();

  }

 catch (  Exception e) {

    System.out.print(e);

  }

  assertTrue(successPrepared);

}

Location: TestJDBCGeneratedColumns.java

Content: 

public void testInsert(){

  boolean successPrepared=false;

  boolean successDirect=false;

  try {

    Connection c=newConnection();

    Statement st=c.createStatement();

    String s="DROP TABLE T IF EXISTS";

    st.execute(s);

    s="CREATE TABLE T (I INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 33), C CHARACTER(10))";

    st.execute(s);

    s="INSERT INTO T (C) VALUES('TEST')";

    st.execute(s,Statement.RETURN_GENERATED_KEYS);

    ResultSet rs=st.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("generated: " + rs.getInt(1));

      successDirect=rs.getInt(1) == 33;

    }

    PreparedStatement ps=c.prepareStatement(s,Statement.RETURN_GENERATED_KEYS);

    ps.execute();

    rs=ps.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("" + rs.getInt(1));

      successPrepared=rs.getInt(1) == 34;

    }

    ps.close();

    ps=c.prepareStatement(s,new int[]{1});

    ps.execute();

    rs=ps.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("" + rs.getInt(1));

      successPrepared&=rs.getInt(1) == 35;

    }

    ps.close();

    ps=c.prepareStatement(s,new String[]{"I"});

    ps.execute();

    rs=ps.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("" + rs.getInt(1));

      successPrepared&=rs.getInt(1) == 36;

      successPrepared&=rs.getBigDecimal(1).intValue() == 36;

    }

    ps.close();

    ps=c.prepareStatement(s,new String[]{"I","C"});

    ps.execute();

    rs=ps.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("" + rs.getInt(1));

      successPrepared&=rs.getInt(1) == 37;

      successPrepared&=rs.getBigDecimal(1).intValue() == 37;

      successPrepared&=rs.getString(2).startsWith("TEST");

    }

    ps.close();

    ps=c.prepareStatement(s,new String[]{"C","I"});

    ps.execute();

    rs=ps.getGeneratedKeys();

    while (rs.next()) {

      System.out.println("" + rs.getInt(2));

      successPrepared&=rs.getInt(2) == 38;

      successPrepared&=rs.getBigDecimal(2).intValue() == 38;

      successPrepared&=rs.getString(1).startsWith("TEST");

    }

    ps.close();

  }

 catch (  Exception e) {

    System.out.print(e);

  }

  assertTrue(successPrepared);

  assertTrue(successDirect);

}

Location: TestJDBCGeneratedColumns.java

Content: 

public TestJDBCGeneratedColumns(String name){

  super(name);

}

