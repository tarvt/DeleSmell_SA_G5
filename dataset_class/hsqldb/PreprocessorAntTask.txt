Location: PreprocessorAntTask.java

Content: 

private void checkTargetDir() throws BuildException {

  if (targetDir == null) {

    throw new BuildException("Target directory required.");

  }

}

Location: PreprocessorAntTask.java

Content: 

public void execute() throws BuildException {

  if (!isActive()) {

    return;

  }

  checkTargetDir();

  this.sourceDir=getProject().resolveFile("" + this.sourceDir);

  IResolver resolver=new AntResolver(getProject());

  String[] files=getFiles();

  log("Preprocessing " + files.length + " file(s)");

  try {

    Preprocessor.preprocessBatch(this.sourceDir,this.targetDir,files,this.altExt,this.encoding,this.options,this.defines,resolver);

  }

 catch (  Exception ex) {

    ex.printStackTrace();

    throw new BuildException("Preprocessing failed: " + ex,ex);

  }

}

Location: PreprocessorAntTask.java

Content: 

private String[] getFiles(){

  return getDirectoryScanner(sourceDir).getIncludedFiles();

}

Location: PreprocessorAntTask.java

Content: 

public void init(){

  super.init();

}

Location: PreprocessorAntTask.java

Content: 

public boolean isActive(){

  return (this.ifExpr == null || getProject().getProperty(this.ifExpr) != null || this.unlessExpr == null || getProject().getProperty(this.unlessExpr) == null);

}

Location: PreprocessorAntTask.java

Content: 

public void setAltext(final String ext){

  this.altExt=ext;

}

Location: PreprocessorAntTask.java

Content: 

public void setBackup(final boolean backup){

  options=Option.setBackup(options,backup);

}

Location: PreprocessorAntTask.java

Content: 

public void setEncoding(final String encoding){

  this.encoding=encoding;

}

Location: PreprocessorAntTask.java

Content: 

public void setFilter(final boolean filter){

  options=Option.setFilter(options,filter);

}

Location: PreprocessorAntTask.java

Content: 

public void setIf(final String expr){

  this.ifExpr=expr;

}

Location: PreprocessorAntTask.java

Content: 

public void setIndent(final boolean indent){

  options=Option.setIndent(options,indent);

}

Location: PreprocessorAntTask.java

Content: 

public void setSrcdir(final File value){

  sourceDir=value;

}

Location: PreprocessorAntTask.java

Content: 

public void setSymbols(final String value){

  defines=value;

}

Location: PreprocessorAntTask.java

Content: 

public void setTargetdir(final File value){

  targetDir=value;

}

Location: PreprocessorAntTask.java

Content: 

public void setTestonly(final boolean testOnly){

  options=Option.setTestOnly(options,testOnly);

}

Location: PreprocessorAntTask.java

Content: 

public void setUnless(final String expr){

  this.unlessExpr=expr;

}

Location: PreprocessorAntTask.java

Content: 

public void setVerbose(final boolean verbose){

  options=Option.setVerbose(options,verbose);

}

