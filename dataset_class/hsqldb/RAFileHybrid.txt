Location: RAFileHybrid.java

Content: 

void newStore(long requiredPosition) throws IOException {

  long currentPosition=0;

  if (store == null) {

    preNio=requiredPosition <= database.logger.propNioMaxSize;

  }

 else {

    currentPosition=store.getFilePointer();

    store.synch();

    store.close();

  }

  if (preNio && initialMaxLength <= requiredPosition) {

    try {

      store=new RAFileNIO(database.logger,fileName,isReadOnly,requiredPosition,database.logger.propNioMaxSize);

      store.seek(currentPosition);

      preNio=false;

      isNio=true;

      return;

    }

 catch (    Throwable e) {

      preNio=false;

    }

  }

  isNio=false;

  store=new RAFile(database.logger,fileName,isReadOnly,true,false);

  store.seek(currentPosition);

}

Location: RAFileHybrid.java

Content: 

public RAFileHybrid(Database database,String name,boolean readOnly) throws IOException {

  this.database=database;

  this.fileName=name;

  this.isReadOnly=readOnly;

  long fileLength;

  java.io.File fi=new java.io.File(name);

  fileLength=fi.length();

  newStore(fileLength);

}

