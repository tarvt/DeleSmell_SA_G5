Location: JavaObjectData.java

Content: 

public byte[] getBytes(){

  return data;

}

Location: JavaObjectData.java

Content: 

public int getBytesLength(){

  return data.length;

}

Location: JavaObjectData.java

Content: 

/** 

 * This method is called from classes implementing the JDBC interfaces. Inside the engine it is used for conversion from a value of type OTHER to another type. It will throw if the OTHER is an instance of a class that is not available.

 */

public Object getObject(){

  try {

    return InOutUtil.deserialize(data);

  }

 catch (  Exception e) {

    throw Error.error(ErrorCode.X_22521,e.toString());

  }

}

Location: JavaObjectData.java

Content: 

JavaObjectData(){

}

Location: JavaObjectData.java

Content: 

/** 

 * Constructor used inside the engine when an already serialized Object is read from a file (.log, .script, .data or text table source).

 */

public JavaObjectData(byte[] data){

  this.data=data;

}

Location: JavaObjectData.java

Content: 

/** 

 * Constructor used inside the engine to convert an Object into an object of type OTHER. Used also with JDBC setParameter(). If parameter serialize is true, the Object is serialized for storage.

 */

public JavaObjectData(Serializable o){

  try {

    data=InOutUtil.serialize(o);

  }

 catch (  Exception e) {

    throw Error.error(ErrorCode.X_22521,e.toString());

  }

}

