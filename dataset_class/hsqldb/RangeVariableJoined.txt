Location: RangeVariableJoined.java

Content: 

public RangeVariable[] getBaseRangeVariables(){

  return rangeArray;

}

Location: RangeVariableJoined.java

Content: 

public RangeVariableJoined(Table table,SimpleName alias,OrderedHashSet columnList,SimpleName[] columnNameList,CompileContext compileContext){

  super(table,alias,columnList,columnNameList,compileContext);

  setParameters();

}

Location: RangeVariableJoined.java

Content: 

public void replaceColumnReference(RangeVariable range,Expression[] list){

}

Location: RangeVariableJoined.java

Content: 

private void setParameters(){

  namedJoinColumnExpressions=new HashMap();

  QuerySpecification qs=(QuerySpecification)this.rangeTable.getQueryExpression();

  this.rangeArray=qs.rangeVariables;

  for (int i=0; i < rangeArray.length; i++) {

    if (rangeArray[i].isLeftJoin) {

      hasLeftJoin=true;

    }

    if (rangeArray[i].isRightJoin) {

      hasRightJoin=true;

    }

    if (rangeArray[i].isLateral) {

      hasLateral=true;

    }

    if (rangeArray[i].namedJoinColumnExpressions != null) {

      namedJoinColumnExpressions.putAll(rangeArray[i].namedJoinColumnExpressions);

    }

  }

}

