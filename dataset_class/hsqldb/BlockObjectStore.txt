Location: BlockObjectStore.java

Content: 

public void add(CachedObject object,boolean keep){

  int size=object.getRealSize(cache.rowOut);

  if (size > storageSize) {

    throw Error.runtimeError(ErrorCode.U_S0500,"BlockObjectStore");

  }

  object.setStorageSize(storageSize);

  long pos=spaceManager.getFilePosition(storageSize,true);

  object.setPos(pos);

  cache.add(object,keep);

}

Location: BlockObjectStore.java

Content: 

public void add(Session session,CachedObject object,boolean tx){

  throw Error.runtimeError(ErrorCode.U_S0500,"BlockObjectStore");

}

Location: BlockObjectStore.java

Content: 

public BlockObjectStore(DataFileCache cache,TableSpaceManager tableSpaceManager,Class objectClass,int storageSize,int blockSize){

  this.cache=cache;

  this.spaceManager=tableSpaceManager;

  this.objectClass=objectClass;

  this.blockSize=blockSize;

  this.storageSize=storageSize;

  try {

    this.constructor=objectClass.getConstructor(int.class);

  }

 catch (  Exception e) {

    throw Error.runtimeError(ErrorCode.U_S0500,"BlockObjectStore");

  }

}

Location: BlockObjectStore.java

Content: 

private CachedObject getNewInstance(){

  try {

    CachedObject object=(CachedObject)constructor.newInstance(new Object[]{Integer.valueOf(blockSize)});

    return object;

  }

 catch (  Exception e) {

    return null;

  }

}

Location: BlockObjectStore.java

Content: 

public CachedObject getNewInstance(int size){

  throw Error.runtimeError(ErrorCode.U_S0500,"BlockObjectStore");

}

Location: BlockObjectStore.java

Content: 

public CachedObject get(CachedObject object,boolean keep){

  return cache.get(object,this,keep);

}

Location: BlockObjectStore.java

Content: 

public CachedObject get(long i){

  return cache.get(i,storageSize,this,false);

}

Location: BlockObjectStore.java

Content: 

public CachedObject get(long i,boolean keep){

  return cache.get(i,storageSize,this,keep);

}

Location: BlockObjectStore.java

Content: 

public CachedObject get(RowInputInterface in){

  CachedObject object=getNewInstance();

  object.read(in);

  int size=object.getRealSize(cache.rowOut);

  if (size > storageSize) {

    throw Error.runtimeError(ErrorCode.U_S0500,"BlockObjectStore");

  }

  object.setStorageSize(storageSize);

  return object;

}

