Location: JDBCPooledConnection.java

Content: 

public void addConnectionEventListener(ConnectionEventListener listener){

  listeners.add(listener);

}

Location: JDBCPooledConnection.java

Content: 

public void addStatementEventListener(StatementEventListener listener){

}

Location: JDBCPooledConnection.java

Content: 

synchronized public void connectionClosed(){

  ConnectionEvent event=new ConnectionEvent(this);

  userConnection=null;

  reset();

  for (int i=0; i < listeners.size(); i++) {

    ConnectionEventListener connectionEventListener=(ConnectionEventListener)listeners.get(i);

    connectionEventListener.connectionClosed(event);

  }

}

Location: JDBCPooledConnection.java

Content: 

synchronized public void connectionErrorOccurred(SQLException e){

  ConnectionEvent event=new ConnectionEvent(this,e);

  reset();

  for (int i=0; i < listeners.size(); i++) {

    ConnectionEventListener connectionEventListener=(ConnectionEventListener)listeners.get(i);

    connectionEventListener.connectionErrorOccurred(event);

  }

}

Location: JDBCPooledConnection.java

Content: 

/** 

 * Returns true if getConnection() has been called and a leas has been given.

 * @return boolean

 */

synchronized public boolean isInUse(){

  return isInUse;

}

Location: JDBCPooledConnection.java

Content: 

public JDBCPooledConnection(JDBCConnection connection){

  this.connection=connection;

}

Location: JDBCPooledConnection.java

Content: 

public void removeConnectionEventListener(ConnectionEventListener listener){

  listeners.remove(listener);

}

Location: JDBCPooledConnection.java

Content: 

public void removeStatementEventListener(StatementEventListener listener){

}

