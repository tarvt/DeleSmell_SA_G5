Location: AuthUtils.java

Content: 

/** 

 * Do not instantiate an AuthUtils, because the only purpose of this class is to provide static methods.

 */

private AuthUtils(){

}

Location: AuthUtils.java

Content: 

static Set getEnabledRoles(Connection c) throws SQLException {

  Set roles=new HashSet<String>();

  Statement st=c.createStatement();

  ResultSet rs=null;

  try {

    rs=st.executeQuery("SELECT * FROM information_schema.enabled_roles");

    while (rs.next())     roles.add(rs.getString(1));

  }

  finally {

    if (rs != null)     try {

      rs.close();

    }

 catch (    SQLException se) {

      logger.error("Failed to close ResultSet for retrieving db name");

    }

    rs=null;

    try {

      st.close();

    }

 catch (    SQLException se) {

      logger.error("Failed to close Statement for retrieving db name");

    }

    st=null;

  }

  return roles;

}

Location: AuthUtils.java

Content: 

static String getInitialSchema(Connection c) throws SQLException {

  Statement st=c.createStatement();

  ResultSet rs=null;

  try {

    rs=st.executeQuery("SELECT initial_schema FROM information_schema.system_users\n" + "WHERE user_name = current_user");

    if (!rs.next()) {

      throw new IllegalStateException("Failed to retrieve initial_schema for current user");

    }

    return rs.getString(1);

  }

  finally {

    if (rs != null)     try {

      rs.close();

    }

 catch (    SQLException se) {

      logger.error("Failed " + "to close ResultSet for retrieving initial schema");

    }

    rs=null;

    try {

      st.close();

    }

 catch (    SQLException se) {

      logger.error("Failed to close Statement for retrieving db name");

    }

    st=null;

  }

}

