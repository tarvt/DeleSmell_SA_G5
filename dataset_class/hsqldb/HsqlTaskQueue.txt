Location: HsqlTaskQueue.java

Content: 

protected synchronized void clearThread(){

  try {

    taskRunnerThread.setContextClassLoader(null);

  }

 catch (  Throwable t) {

  }

  taskRunnerThread=null;

}

Location: HsqlTaskQueue.java

Content: 

public void execute(Runnable command) throws RuntimeException {

  if (!isShutdown) {

synchronized (queue) {

      queue.addLast(command);

    }

    restart();

  }

}

Location: HsqlTaskQueue.java

Content: 

public synchronized Thread getTaskRunnerThread(){

  return taskRunnerThread;

}

Location: HsqlTaskQueue.java

Content: 

public HsqlTaskQueue(){

}

Location: HsqlTaskQueue.java

Content: 

public boolean isShutdown(){

  return isShutdown;

}

Location: HsqlTaskQueue.java

Content: 

public synchronized void restart(){

  if (taskRunnerThread == null && !isShutdown) {

    taskRunnerThread=new Thread(taskRunner);

    taskRunnerThread.start();

  }

}

Location: HsqlTaskQueue.java

Content: 

public synchronized void shutdownAfterCurrent(){

  isShutdown=true;

synchronized (queue) {

    queue.clear();

    queue.addLast(SHUTDOWNTASK);

  }

}

Location: HsqlTaskQueue.java

Content: 

public synchronized void shutdownAfterQueued(){

  if (!isShutdown) {

synchronized (queue) {

      queue.addLast(SHUTDOWNTASK);

    }

  }

}

Location: HsqlTaskQueue.java

Content: 

public synchronized void shutdownImmediately(){

  isShutdown=true;

  if (taskRunnerThread != null) {

    taskRunnerThread.interrupt();

  }

synchronized (queue) {

    queue.clear();

    queue.addLast(SHUTDOWNTASK);

  }

}

