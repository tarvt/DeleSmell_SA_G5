Location: TestQuotes.java

Content: 

public TestQuotes(String testName){

  super(testName);

}

Location: TestQuotes.java

Content: 

public void testSetString(){

  Connection connection=null;

  Statement statement=null;

  PreparedStatement pStatement=null;

  ResultSet rs1=null;

  ResultSet rs2=null;

  try {

    DriverManager.registerDriver(new org.hsqldb.jdbc.JDBCDriver());

    connection=DriverManager.getConnection("jdbc:hsqldb:mem:.","sa","");

    statement=connection.createStatement();

    statement.executeUpdate(CREATETABLE);

    pStatement=connection.prepareStatement(TESTSTRING);

    pStatement.setString(1,NOQUOTES);

    pStatement.executeUpdate();

    rs1=statement.executeQuery(RESULT);

    rs1.next();

    String result1=rs1.getString(1);

    assertTrue("result1 is -" + result1 + "- not -"+ NOQUOTES+ "-",NOQUOTES.equals(result1));

    statement.executeUpdate(DELETE);

    pStatement.setString(1,QUOTES);

    pStatement.executeUpdate();

    rs2=statement.executeQuery(RESULT);

    rs2.next();

    String result2=rs2.getString(1);

    assertTrue("result2 is " + result2,QUOTES.equals(result2));

  }

 catch (  SQLException sqle) {

    fail(sqle.getMessage());

  }

 finally {

    if (rs2 != null) {

      try {

        rs2.close();

      }

 catch (      SQLException sqle) {

        sqle.printStackTrace();

      }

    }

    if (rs1 != null) {

      try {

        rs1.close();

      }

 catch (      SQLException sqle) {

        sqle.printStackTrace();

      }

    }

    if (statement != null) {

      try {

        statement.close();

      }

 catch (      SQLException sqle) {

        sqle.printStackTrace();

      }

    }

    if (pStatement != null) {

      try {

        pStatement.close();

      }

 catch (      SQLException sqle) {

        sqle.printStackTrace();

      }

    }

    if (connection != null) {

      try {

        connection.close();

      }

 catch (      SQLException sqle) {

        sqle.printStackTrace();

      }

    }

  }

}

