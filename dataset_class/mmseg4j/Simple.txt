Location: Simple.java

Content: 

protected Seg getSeg(){

  return new SimpleSeg(dic);

}

Location: Simple.java

Content: 

public static void main(String[] args) throws IOException {

  new Simple().run();

}

Location: Simple.java

Content: 

private void printlnHelp(){

  System.out.println("\n\t);

  System.out.print("\nmmseg4j-" + this.getClass().getSimpleName().toLowerCase() + ">");

}

Location: Simple.java

Content: 

protected void run() throws IOException {

  String[] arr={str1,str2,str3,str4,str5,str6,str7,str8,str9,str10};

  for (  String str : arr) {

    System.out.println(segWords(str,"|"));

  }

  printlnHelp();

  String inputStr=null;

  BufferedReader br=new BufferedReader(new InputStreamReader(System.in));

  while ((inputStr=br.readLine()) != null) {

    if (inputStr.equals("QUIT") || inputStr.equals("EXIT")) {

      System.exit(0);

    }

 else     if ("".equals(inputStr)) {

      printlnHelp();

    }

 else {

      System.out.println(segWords(inputStr,"/"));

      System.out.print("\nmmseg4j-" + this.getClass().getSimpleName().toLowerCase() + ">");

    }

  }

}

Location: Simple.java

Content: 

public String segWords(Reader input,String wordSpilt) throws IOException {

  StringBuilder sb=new StringBuilder();

  Seg seg=getSeg();

  MMSeg mmSeg=new MMSeg(input,seg);

  Word word;

  boolean first=true;

  while ((word=mmSeg.next()) != null) {

    System.out.println(word.getStartOffset() + "|" + word.getLength()+ "|"+ word.getEndOffset()+ "|"+ word.getWordOffset()+ "|"+ word.getString()+ "|"+ word.getType());

    if (!first) {

      sb.append(wordSpilt);

    }

    String w=word.getString();

    sb.append(w);

    first=false;

  }

  return sb.toString();

}

Location: Simple.java

Content: 

public String segWords(String txt,String wordSpilt) throws IOException {

  return segWords(new StringReader(txt),wordSpilt);

}

Location: Simple.java

Content: 

public Simple(){

  dic=Dictionary.getInstance();

}

