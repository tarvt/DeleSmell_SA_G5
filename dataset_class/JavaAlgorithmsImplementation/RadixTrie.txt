Location: RadixTrie.java

Content: 

/** 

 * {@inheritDoc}

 */

@Override public PatriciaTrie.Node createNewNode(PatriciaTrie.Node parent,char[] seq,boolean type){

  return (new RadixNode<K,V>(parent,seq,type));

}

Location: RadixTrie.java

Content: 

public RadixTrie(){

  trie=new PatriciaTrie<K>(this);

}

Location: RadixTrie.java

Content: 

private boolean validate(PatriciaTrie.Node node,String string,java.util.Set<K> keys){

  if (!(node instanceof RadixNode))   return false;

  RadixNode<K,V> tmn=(RadixNode<K,V>)node;

  StringBuilder builder=new StringBuilder(string);

  if (tmn.string != null)   builder.append(tmn.string);

  String s=builder.toString();

  if (tmn.type == PatriciaTrie.WHITE) {

    K k=(K)s;

    V v=tmn.value;

    if (k == null || v == null)     return false;

    if (keys.contains(k))     return false;

    keys.add(k);

  }

  for (int i=0; i < tmn.childrenSize; i++) {

    PatriciaTrie.Node n=tmn.getChild(i);

    if (n != null && !validate(n,s,keys))     return false;

  }

  return true;

}

