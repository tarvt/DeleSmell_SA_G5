Location: TextColumn.java

Content: 

public void add(String text){

  blocks.addElement(new TextBlock(width,text));

}

Location: TextColumn.java

Content: 

public TextColumn join(TextColumn right){

  return join(right,columnSeparator);

}

Location: TextColumn.java

Content: 

public TextColumn join(TextColumn right,String columnSeparator){

  int nleft=size();

  int nright=right.size();

  int n=Math.min(nleft,nright);

  TextColumn combined=new TextColumn(width + columnSeparator.length() + right.width);

  for (int i=0; i < n; i++)   combined.blocks.addElement(((TextBlock)blocks.elementAt(i)).join(((TextBlock)right.blocks.elementAt(i)),columnSeparator));

  if (nleft < nright) {

    TextBlock empty=new TextBlock(width);

    for (int i=n; i < nright; i++)     combined.blocks.addElement(empty.join(((TextBlock)right.blocks.elementAt(i)),columnSeparator));

  }

 else {

    TextBlock empty=new TextBlock(right.width);

    for (int i=n; i < nleft; i++)     combined.blocks.addElement(((TextBlock)blocks.elementAt(i)).join(empty,columnSeparator));

  }

  return combined;

}

Location: TextColumn.java

Content: 

public TextBlock merge(){

  TextBlock merged=new TextBlock(width);

  for (Enumeration e=blocks.elements(); e.hasMoreElements(); )   merged.add((TextBlock)e.nextElement());

  return merged;

}

Location: TextColumn.java

Content: 

public int size(){

  return blocks.size();

}

Location: TextColumn.java

Content: 

public TextColumn(int width){

  this.width=width;

}

Location: TextColumn.java

Content: 

public TextColumn(int width,String text){

  this(width);

  add(text);

}

