Location: Transaction.java

Content: 

static Transaction getInstance(Class transactionClass,Company company,short warehouseID){

  Transaction t=null;

  try {

    Constructor ctor=transactionClass.getConstructor(transactionConstructorSignature);

    Object[] args=new Object[2];

    args[0]=company;

    args[1]=new Short(warehouseID);

    t=(Transaction)ctor.newInstance(args);

  }

 catch (  Exception e) {

    JBButil.getLog().log(Level.WARNING,"Exception: " + e.getMessage(),e);

  }

  return t;

}

Location: Transaction.java

Content: 

public static void invalidateRun(){

  validRun=false;

}

Location: Transaction.java

Content: 

public static boolean isRunValid(){

  return validRun;

}

Location: Transaction.java

Content: 

public static void setLogWrite(boolean onoff){

  enableLogWrite=onoff;

}

Location: Transaction.java

Content: 

public static void setOrderLineCount(int count){

  aveOrderlines=count;

  minOrderlines=aveOrderlines - 5;

  maxOrderlines=aveOrderlines + 5;

}

Location: Transaction.java

Content: 

public static void setSteadyState(boolean onoff){

  steadyStateMem=onoff;

}

Location: Transaction.java

Content: 

public static void setValidation(boolean onoff){

  validationFlag=onoff;

}

Location: Transaction.java

Content: 

public static void validateRun(){

  validRun=true;

}

