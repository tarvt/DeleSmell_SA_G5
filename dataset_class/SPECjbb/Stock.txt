Location: Stock.java

Content: 

public synchronized void changeQuantity(int delta){

  quantity+=delta;

}

Location: Stock.java

Content: 

public synchronized String getData(){

  String temp=new String(data);

  return temp;

}

Location: Stock.java

Content: 

public synchronized String getDistrictInfo(byte districtId){

  return district_text[districtId - 1];

}

Location: Stock.java

Content: 

public synchronized void incrementOrderCount(){

  ++orderCount;

}

Location: Stock.java

Content: 

public synchronized void incrementRemoteCount(){

  ++remoteCount;

}

Location: Stock.java

Content: 

public synchronized void incrementYTD(short ol_quantity){

  ytd.add(BigInteger.valueOf(ol_quantity));

}

Location: Stock.java

Content: 

public void initStock(Company inCompany,int itemId,short wId){

  int district;

  short maxDistricts;

  Integer hit;

  quantity=(int)JBButil.random(10,100,wId);

  ytd=BigInteger.ZERO;

  orderCount=0;

  remoteCount=0;

  hit=new Integer(0);

  data=new String(JBButil.create_a_string_with_original(26,50,10f,hit,wId));

  company=inCompany;

  id=itemId;

  warehouseId=wId;

  maxDistricts=company.getMaxDistrictsPerWarehouse();

  district_text=new String[maxDistricts];

  for (district=0; district < maxDistricts; district++) {

    district_text[district]=new String(JBButil.create_random_a_string(25,25,warehouseId));

  }

}

Location: Stock.java

Content: 

public Stock(Company inCompany,int itemId,short wId){

  this.initStock(inCompany,itemId,wId);

}

