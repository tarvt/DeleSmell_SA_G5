Location: XmlStreamReaderException.java

Content: 

/** 

 * Returns the BOM encoding found in the InputStream.

 * @return the BOM encoding, null if none.

 */

public String getBomEncoding(){

  return bomEncoding;

}

Location: XmlStreamReaderException.java

Content: 

/** 

 * Returns the encoding in the content-type used to attempt determining the encoding.

 * @return the encoding in the content-type, null if there was notcontent-type, no encoding in it or the encoding detection did not involve HTTP.

 */

public String getContentTypeEncoding(){

  return contentTypeEncoding;

}

Location: XmlStreamReaderException.java

Content: 

/** 

 * Returns the MIME type in the content-type used to attempt determining the encoding.

 * @return the MIME type in the content-type, null if there was notcontent-type or the encoding detection did not involve HTTP.

 */

public String getContentTypeMime(){

  return contentTypeMime;

}

Location: XmlStreamReaderException.java

Content: 

/** 

 * Returns the unconsumed InputStream to allow the application to do an alternate encoding detection on the InputStream.

 * @return the unconsumed InputStream.

 */

public InputStream getInputStream(){

  return inputStream;

}

Location: XmlStreamReaderException.java

Content: 

/** 

 * Returns the encoding found in the XML prolog of the InputStream.

 * @return the encoding of the XML prolog, null if none.

 */

public String getXmlEncoding(){

  return xmlEncoding;

}

Location: XmlStreamReaderException.java

Content: 

/** 

 * Returns the encoding guess based on the first bytes of the InputStream.

 * @return the encoding guess, null if it couldn't be guessed.

 */

public String getXmlGuessEncoding(){

  return xmlGuessEncoding;

}

Location: XmlStreamReaderException.java

Content: 

/** 

 * Creates an exception instance if the charset encoding could not be determined. <p> Instances of this exception are thrown by the XmlStreamReader. </p>

 * @param msg message describing the reason for the exception.

 * @param bomEnc BOM encoding.

 * @param xmlGuessEnc XML guess encoding.

 * @param xmlEnc XML prolog encoding.

 */

public XmlStreamReaderException(final String msg,final String bomEnc,final String xmlGuessEnc,final String xmlEnc){

  this(msg,null,null,bomEnc,xmlGuessEnc,xmlEnc);

}

Location: XmlStreamReaderException.java

Content: 

/** 

 * Creates an exception instance if the charset encoding could not be determined. <p> Instances of this exception are thrown by the XmlStreamReader.

 * @param msg message describing the reason for the exception.

 * @param bomEnc BOM encoding.

 * @param xmlGuessEnc XML guess encoding.

 * @param xmlEnc XML prolog encoding.

 * @param is the unconsumed InputStream.

 */

public XmlStreamReaderException(final String msg,final String bomEnc,final String xmlGuessEnc,final String xmlEnc,final InputStream is){

  this(msg,null,null,bomEnc,xmlGuessEnc,xmlEnc,is);

}

Location: XmlStreamReaderException.java

Content: 

/** 

 * Creates an exception instance if the charset encoding could not be determined. <p> Instances of this exception are thrown by the XmlStreamReader. </p>

 * @param msg message describing the reason for the exception.

 * @param ctMime MIME type in the content-type.

 * @param ctEnc encoding in the content-type.

 * @param bomEnc BOM encoding.

 * @param xmlGuessEnc XML guess encoding.

 * @param xmlEnc XML prolog encoding.

 */

public XmlStreamReaderException(final String msg,final String ctMime,final String ctEnc,final String bomEnc,final String xmlGuessEnc,final String xmlEnc){

  super(msg);

  contentTypeMime=ctMime;

  contentTypeEncoding=ctEnc;

  bomEncoding=bomEnc;

  xmlGuessEncoding=xmlGuessEnc;

  xmlEncoding=xmlEnc;

}

Location: XmlStreamReaderException.java

Content: 

/** 

 * Creates an exception instance if the charset encoding could not be determined. <p> Instances of this exception are thrown by the XmlStreamReader.

 * @param msg message describing the reason for the exception.

 * @param ctMime MIME type in the content-type.

 * @param ctEnc encoding in the content-type.

 * @param bomEnc BOM encoding.

 * @param xmlGuessEnc XML guess encoding.

 * @param xmlEnc XML prolog encoding.

 * @param inputStream the unconsumed InputStream.

 */

public XmlStreamReaderException(final String msg,final String ctMime,final String ctEnc,final String bomEnc,final String xmlGuessEnc,final String xmlEnc,final InputStream inputStream){

  super(msg,ctMime,ctEnc,bomEnc,xmlGuessEnc,xmlEnc);

  this.inputStream=inputStream;

}

