Location: UncheckedFilterInputStreamTest.java

Content: 

@Test public void testReadByteArray(){

  try (final UncheckedFilterInputStream uncheckedReader=UncheckedFilterInputStream.on(stringInputStream)){

    final byte[] array=new byte[1];

    assertEquals(1,uncheckedReader.read(array));

    assertEquals('0',array[0]);

    array[0]=0;

    assertEquals(1,uncheckedReader.read(array));

    assertEquals('1',array[0]);

    array[0]=0;

    assertEquals(IOUtils.EOF,uncheckedReader.read(array));

    assertEquals(0,array[0]);

    assertEquals(IOUtils.EOF,uncheckedReader.read(array));

    assertEquals(0,array[0]);

  }

 }

Location: UncheckedFilterInputStreamTest.java

Content: 

@Test public void testReadByteArrayIndexed(){

  try (final UncheckedFilterInputStream uncheckedReader=UncheckedFilterInputStream.on(stringInputStream)){

    final byte[] array=new byte[1];

    assertEquals(1,uncheckedReader.read(array,0,1));

    assertEquals('0',array[0]);

    array[0]=0;

    assertEquals(1,uncheckedReader.read(array,0,1));

    assertEquals('1',array[0]);

    array[0]=0;

    assertEquals(IOUtils.EOF,uncheckedReader.read(array,0,1));

    assertEquals(0,array[0]);

    assertEquals(IOUtils.EOF,uncheckedReader.read(array,0,1));

    assertEquals(0,array[0]);

  }

 }

Location: UncheckedFilterInputStreamTest.java

Content: 

@Test public void testReadByteArrayIndexedThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenInputStream.read(new byte[1],0,1)).getCause());

}

Location: UncheckedFilterInputStreamTest.java

Content: 

@Test public void testReadByteArrayThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenInputStream.read(new byte[1])).getCause());

}

