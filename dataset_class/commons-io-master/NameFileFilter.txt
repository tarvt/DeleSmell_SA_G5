Location: NameFileFilter.java

Content: 

private boolean acceptBaseName(final String baseName){

  for (  final String testName : names) {

    if (ioCase.checkEquals(baseName,testName)) {

      return true;

    }

  }

  return false;

}

Location: NameFileFilter.java

Content: 

/** 

 * Constructs a new case-sensitive name file filter for a list of names.

 * @param names  the names to allow, must not be null

 * @throws IllegalArgumentException if the name list is null

 * @throws ClassCastException if the list does not contain Strings

 */

public NameFileFilter(final List<String> names){

  this(names,null);

}

Location: NameFileFilter.java

Content: 

/** 

 * Constructs a new name file filter for a list of names specifying case-sensitivity.

 * @param names  the names to allow, must not be null

 * @param ioCase  how to handle case sensitivity, null means case-sensitive

 * @throws IllegalArgumentException if the name list is null

 * @throws ClassCastException if the list does not contain Strings

 */

public NameFileFilter(final List<String> names,final IOCase ioCase){

  requireNonNull(names,"names");

  this.names=names.toArray(EMPTY_STRING_ARRAY);

  this.ioCase=toIOCase(ioCase);

}

Location: NameFileFilter.java

Content: 

/** 

 * Constructs a new case-sensitive name file filter for an array of names. <p> The array is not cloned, so could be changed after constructing the instance. This would be inadvisable however. </p>

 * @param names  the names to allow, must not be null

 * @throws IllegalArgumentException if the names array is null

 */

public NameFileFilter(final String... names){

  this(names,IOCase.SENSITIVE);

}

Location: NameFileFilter.java

Content: 

/** 

 * Constructs a new name file filter for an array of names specifying case-sensitivity.

 * @param names  the names to allow, must not be null

 * @param ioCase  how to handle case sensitivity, null means case-sensitive

 * @throws IllegalArgumentException if the names array is null

 */

public NameFileFilter(final String[] names,final IOCase ioCase){

  if (names == null) {

    throw new IllegalArgumentException("The array of names must not be null");

  }

  this.names=names.clone();

  this.ioCase=toIOCase(ioCase);

}

Location: NameFileFilter.java

Content: 

private IOCase toIOCase(final IOCase ioCase){

  return IOCase.value(ioCase,IOCase.SENSITIVE);

}

