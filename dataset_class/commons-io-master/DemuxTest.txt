Location: DemuxTest.java

Content: 

private void doJoin() throws Exception {

  for (  final String name : threadMap.keySet()) {

    final Thread thread=threadMap.get(name);

    thread.join();

  }

}

Location: DemuxTest.java

Content: 

private void doStart(){

  for (  final String name : threadMap.keySet()) {

    final Thread thread=threadMap.get(name);

    thread.start();

  }

}

Location: DemuxTest.java

Content: 

private String getInput(final String threadName){

  final ReaderThread thread=(ReaderThread)threadMap.get(threadName);

  assertNotNull(thread,"getInput()");

  return thread.getData();

}

Location: DemuxTest.java

Content: 

private String getOutput(final String threadName){

  final ByteArrayOutputStream output=outputMap.get(threadName);

  assertNotNull(output,"getOutput()");

  return output.toString(StandardCharsets.UTF_8);

}

Location: DemuxTest.java

Content: 

private void startReader(final String name,final String data,final DemuxInputStream demux){

  final InputStream input=new StringInputStream(data);

  final ReaderThread thread=new ReaderThread(name,input,demux);

  threadMap.put(name,thread);

}

Location: DemuxTest.java

Content: 

private void startWriter(final String name,final String data,final DemuxOutputStream demux){

  final ByteArrayOutputStream output=new ByteArrayOutputStream();

  outputMap.put(name,output);

  final WriterThread thread=new WriterThread(name,data,output,demux);

  threadMap.put(name,thread);

}

Location: DemuxTest.java

Content: 

@Test public void testInputStream() throws Exception {

  final DemuxInputStream input=new DemuxInputStream();

  startReader(T1,DATA1,input);

  startReader(T2,DATA2,input);

  startReader(T3,DATA3,input);

  startReader(T4,DATA4,input);

  doStart();

  doJoin();

  assertEquals(DATA1,getInput(T1),"Data1");

  assertEquals(DATA2,getInput(T2),"Data2");

  assertEquals(DATA3,getInput(T3),"Data3");

  assertEquals(DATA4,getInput(T4),"Data4");

}

Location: DemuxTest.java

Content: 

@Test public void testOutputStream() throws Exception {

  final DemuxOutputStream output=new DemuxOutputStream();

  startWriter(T1,DATA1,output);

  startWriter(T2,DATA2,output);

  startWriter(T3,DATA3,output);

  startWriter(T4,DATA4,output);

  doStart();

  doJoin();

  assertEquals(DATA1,getOutput(T1),"Data1");

  assertEquals(DATA2,getOutput(T2),"Data2");

  assertEquals(DATA3,getOutput(T3),"Data3");

  assertEquals(DATA4,getOutput(T4),"Data4");

}

