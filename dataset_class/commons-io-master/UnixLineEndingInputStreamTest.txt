Location: UnixLineEndingInputStreamTest.java

Content: 

@Test public void crAtEnd() throws Exception {

  assertEquals("a\n",roundtrip("a\r"));

}

Location: UnixLineEndingInputStreamTest.java

Content: 

@Test public void crOnlyEnsureAtEof() throws Exception {

  assertEquals("a\nb\n",roundtrip("a\rb"));

}

Location: UnixLineEndingInputStreamTest.java

Content: 

@Test public void crOnlyNotAtEof() throws Exception {

  assertEquals("a\nb",roundtrip("a\rb",false));

}

Location: UnixLineEndingInputStreamTest.java

Content: 

@Test public void inTheMiddleOfTheLine() throws Exception {

  assertEquals("a\nbc\n",roundtrip("a\r\nbc"));

}

Location: UnixLineEndingInputStreamTest.java

Content: 

@Test public void multipleBlankLines() throws Exception {

  assertEquals("a\n\nbc\n",roundtrip("a\r\n\r\nbc"));

}

Location: UnixLineEndingInputStreamTest.java

Content: 

@Test public void retainLineFeed() throws Exception {

  assertEquals("a\n\n",roundtrip("a\r\n\r\n",false));

  assertEquals("a",roundtrip("a",false));

}

Location: UnixLineEndingInputStreamTest.java

Content: 

private String roundtrip(final String msg) throws IOException {

  return roundtrip(msg,true);

}

Location: UnixLineEndingInputStreamTest.java

Content: 

private String roundtrip(final String msg,final boolean ensure) throws IOException {

  final ByteArrayInputStream baos=new ByteArrayInputStream(msg.getBytes(StandardCharsets.UTF_8));

  final UnixLineEndingInputStream lf=new UnixLineEndingInputStream(baos,ensure);

  final byte[] buf=new byte[100];

  final int read=lf.read(buf);

  lf.close();

  return new String(buf,0,read,StandardCharsets.UTF_8);

}

Location: UnixLineEndingInputStreamTest.java

Content: 

@Test public void simpleString() throws Exception {

  assertEquals("abc\n",roundtrip("abc"));

}

Location: UnixLineEndingInputStreamTest.java

Content: 

@Test public void twoLinesAtEnd() throws Exception {

  assertEquals("a\n\n",roundtrip("a\r\n\r\n"));

}

