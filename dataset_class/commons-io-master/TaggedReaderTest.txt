Location: TaggedReaderTest.java

Content: 

@Test public void testBrokenReader(){

  final IOException exception=new IOException("test exception");

  final TaggedReader reader=new TaggedReader(new BrokenReader(exception));

  try {

    reader.ready();

    fail("Expected exception not thrown.");

  }

 catch (  final IOException e) {

    assertTrue(reader.isCauseOf(e));

    try {

      reader.throwIfCauseOf(e);

      fail("Expected exception not thrown.");

    }

 catch (    final IOException e2) {

      assertEquals(exception,e2);

    }

  }

  try {

    reader.read();

    fail("Expected exception not thrown.");

  }

 catch (  final IOException e) {

    assertTrue(reader.isCauseOf(e));

    try {

      reader.throwIfCauseOf(e);

      fail("Expected exception not thrown.");

    }

 catch (    final IOException e2) {

      assertEquals(exception,e2);

    }

  }

  try {

    reader.close();

    fail("Expected exception not thrown.");

  }

 catch (  final IOException e) {

    assertTrue(reader.isCauseOf(e));

    try {

      reader.throwIfCauseOf(e);

      fail("Expected exception not thrown.");

    }

 catch (    final IOException e2) {

      assertEquals(exception,e2);

    }

  }

}

Location: TaggedReaderTest.java

Content: 

@Test public void testEmptyReader() throws IOException {

  try (final Reader reader=new TaggedReader(ClosedReader.INSTANCE)){

    assertFalse(reader.ready());

    assertEquals(-1,reader.read());

    assertEquals(-1,reader.read(new char[1]));

    assertEquals(-1,reader.read(new char[1],0,1));

  }

 }

Location: TaggedReaderTest.java

Content: 

@Test public void testNormalReader() throws IOException {

  try (final Reader reader=new TaggedReader(new StringReader("abc"))){

    assertTrue(reader.ready());

    assertEquals('a',reader.read());

    final char[] buffer=new char[1];

    assertEquals(1,reader.read(buffer));

    assertEquals('b',buffer[0]);

    assertEquals(1,reader.read(buffer,0,1));

    assertEquals('c',buffer[0]);

    assertEquals(-1,reader.read());

  }

 }

