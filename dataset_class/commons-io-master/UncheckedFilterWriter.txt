Location: UncheckedFilterWriter.java

Content: 

/** 

 * Calls this method's super and rethrow  {@link IOException} as {@link UncheckedIOException}.

 */

@Override public Writer append(final char c) throws UncheckedIOException {

  try {

    return super.append(c);

  }

 catch (  final IOException e) {

    throw uncheck(e);

  }

}

Location: UncheckedFilterWriter.java

Content: 

/** 

 * Calls this method's super and rethrow  {@link IOException} as {@link UncheckedIOException}.

 */

@Override public Writer append(final CharSequence csq) throws UncheckedIOException {

  try {

    return super.append(csq);

  }

 catch (  final IOException e) {

    throw uncheck(e);

  }

}

Location: UncheckedFilterWriter.java

Content: 

/** 

 * Calls this method's super and rethrow  {@link IOException} as {@link UncheckedIOException}.

 */

@Override public Writer append(final CharSequence csq,final int start,final int end) throws UncheckedIOException {

  try {

    return super.append(csq,start,end);

  }

 catch (  final IOException e) {

    throw uncheck(e);

  }

}

Location: UncheckedFilterWriter.java

Content: 

/** 

 * Creates a new filtered writer.

 * @param writer a Writer object providing the underlying stream.

 * @return a new UncheckedFilterReader.

 * @throws NullPointerException if {@code writer} is {@code null}.

 */

public static UncheckedFilterWriter on(final Writer writer){

  return new UncheckedFilterWriter(writer);

}

Location: UncheckedFilterWriter.java

Content: 

/** 

 * Creates a new filtered writer.

 * @param writer a Writer object providing the underlying stream.

 * @throws NullPointerException if {@code writer} is {@code null}.

 */

protected UncheckedFilterWriter(final Writer writer){

  super(writer);

}

Location: UncheckedFilterWriter.java

Content: 

private UncheckedIOException uncheck(final IOException e){

  return new UncheckedIOException(e);

}

Location: UncheckedFilterWriter.java

Content: 

/** 

 * Calls this method's super and rethrow  {@link IOException} as {@link UncheckedIOException}.

 */

@Override public void write(final char[] cbuf) throws UncheckedIOException {

  try {

    super.write(cbuf);

  }

 catch (  final IOException e) {

    throw uncheck(e);

  }

}

Location: UncheckedFilterWriter.java

Content: 

/** 

 * Calls this method's super and rethrow  {@link IOException} as {@link UncheckedIOException}.

 */

@Override public void write(final char[] cbuf,final int off,final int len) throws UncheckedIOException {

  try {

    super.write(cbuf,off,len);

  }

 catch (  final IOException e) {

    throw uncheck(e);

  }

}

Location: UncheckedFilterWriter.java

Content: 

/** 

 * Calls this method's super and rethrow  {@link IOException} as {@link UncheckedIOException}.

 */

@Override public void write(final String str) throws UncheckedIOException {

  try {

    super.write(str);

  }

 catch (  final IOException e) {

    throw uncheck(e);

  }

}

Location: UncheckedFilterWriter.java

Content: 

/** 

 * Calls this method's super and rethrow  {@link IOException} as {@link UncheckedIOException}.

 */

@Override public void write(final String str,final int off,final int len) throws UncheckedIOException {

  try {

    super.write(str,off,len);

  }

 catch (  final IOException e) {

    throw uncheck(e);

  }

}

