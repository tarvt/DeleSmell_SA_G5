Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testBigIntegerCounterEquals(){

  testEquals(Counters.bigIntegerCounter(),Counters.bigIntegerCounter());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testBigIntegerHashCode(){

  testHashCodes(Counters.bigIntegerCounter(),Counters.bigIntegerCounter());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

private void testEqualsByteCounters(final PathCounters counter1,final PathCounters counter2){

  Assertions.assertEquals(counter1,counter2);

  counter1.getByteCounter().increment();

  Assertions.assertNotEquals(counter1,counter2);

  counter2.getByteCounter().increment();

  Assertions.assertEquals(counter1,counter2);

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

private void testEqualsDirectoryCounters(final PathCounters counter1,final PathCounters counter2){

  Assertions.assertEquals(counter1,counter2);

  counter1.getDirectoryCounter().increment();

  Assertions.assertNotEquals(counter1,counter2);

  counter2.getDirectoryCounter().increment();

  Assertions.assertEquals(counter1,counter2);

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

private void testEqualsFileCounters(final PathCounters counter1,final PathCounters counter2){

  Assertions.assertEquals(counter1,counter2);

  counter1.getFileCounter().increment();

  Assertions.assertNotEquals(counter1,counter2);

  counter2.getFileCounter().increment();

  Assertions.assertEquals(counter1,counter2);

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

private void testEquals(final Counter counter1,final Counter counter2){

  Assertions.assertEquals(counter1,counter2);

  counter1.increment();

  Assertions.assertNotEquals(counter1,counter2);

  counter2.increment();

  Assertions.assertEquals(counter1,counter2);

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

private void testHashCodeFileCounters(final PathCounters counter1,final PathCounters counter2){

  Assertions.assertEquals(counter1.hashCode(),counter2.hashCode());

  counter1.getFileCounter().increment();

  Assertions.assertNotEquals(counter1.hashCode(),counter2.hashCode());

  counter2.getFileCounter().increment();

  Assertions.assertEquals(counter1.hashCode(),counter2.hashCode());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

private void testHashCodes(final Counter counter1,final Counter counter2){

  Assertions.assertEquals(counter1.hashCode(),counter2.hashCode());

  counter1.increment();

  Assertions.assertNotEquals(counter1.hashCode(),counter2.hashCode());

  counter2.increment();

  Assertions.assertEquals(counter1.hashCode(),counter2.hashCode());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testLongCounterEquals(){

  testEquals(Counters.longCounter(),Counters.longCounter());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testLongCounterHashCodes(){

  testHashCodes(Counters.longCounter(),Counters.longCounter());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testLongCounterMixEquals(){

  testEquals(Counters.longCounter(),Counters.bigIntegerCounter());

  testEquals(Counters.bigIntegerCounter(),Counters.longCounter());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testLongPathCountersEqualsByteCounters(){

  testEqualsByteCounters(Counters.longPathCounters(),Counters.longPathCounters());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testLongPathCountersEqualsDirectoryCounters(){

  testEqualsDirectoryCounters(Counters.longPathCounters(),Counters.longPathCounters());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testLongPathCountersEqualsFileCounters(){

  testEqualsFileCounters(Counters.longPathCounters(),Counters.longPathCounters());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testLongPathCountersHashCodeFileCounters(){

  testHashCodeFileCounters(Counters.longPathCounters(),Counters.longPathCounters());

}

Location: CountersEqualsAndHashCodeTest.java

Content: 

@Test public void testMix(){

  testHashCodeFileCounters(Counters.longPathCounters(),Counters.bigIntegerPathCounters());

}

