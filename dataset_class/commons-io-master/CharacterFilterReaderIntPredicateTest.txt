Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testInputSize0FilterAll() throws IOException {

  final StringReader input=new StringReader(StringUtils.EMPTY);

  try (CharacterFilterReader reader=new CharacterFilterReader(input,ch -> true)){

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testInputSize1FilterAll() throws IOException {

  try (StringReader input=new StringReader("a");CharacterFilterReader reader=new CharacterFilterReader(input,ch -> true)){

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testInputSize2FilterAll() throws IOException {

  final StringReader input=new StringReader("aa");

  try (CharacterFilterReader reader=new CharacterFilterReader(input,ch -> true)){

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testInputSize2FilterFirst() throws IOException {

  final StringReader input=new StringReader("ab");

  try (CharacterFilterReader reader=new CharacterFilterReader(input,ch -> ch == 'a')){

    assertEquals('b',reader.read());

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testInputSize2FilterLast() throws IOException {

  final StringReader input=new StringReader("ab");

  try (CharacterFilterReader reader=new CharacterFilterReader(input,ch -> ch == 'b')){

    assertEquals('a',reader.read());

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testInputSize5FilterWhitespace() throws IOException {

  final StringReader input=new StringReader(" a b ");

  try (CharacterFilterReader reader=new CharacterFilterReader(input,Character::isWhitespace)){

    assertEquals('a',reader.read());

    assertEquals('b',reader.read());

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testReadIntoBuffer() throws IOException {

  final StringReader input=new StringReader("ababcabcd");

  try (CharacterFilterReader reader=new CharacterFilterReader(input,ch -> ch == 'b')){

    final char[] buff=new char[9];

    final int charCount=reader.read(buff);

    assertEquals(6,charCount);

    assertEquals("aacacd",new String(buff,0,charCount));

  }

 }

Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testReadIntoBufferFilterWhitespace() throws IOException {

  final StringReader input=new StringReader(" a b a b c a b c d ");

  try (CharacterFilterReader reader=new CharacterFilterReader(input,Character::isWhitespace)){

    final char[] buff=new char[19];

    final int charCount=reader.read(buff);

    assertEquals(9,charCount);

    assertEquals("ababcabcd",new String(buff,0,charCount));

  }

 }

Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testReadUsingReader() throws IOException {

  final StringReader input=new StringReader("ababcabcd");

  try (StringBuilderWriter output=new StringBuilderWriter();CharacterFilterReader reader=new CharacterFilterReader(input,ch -> ch == 'b')){

    IOUtils.copy(reader,output);

    assertEquals("aacacd",output.toString());

  }

 }

Location: CharacterFilterReaderIntPredicateTest.java

Content: 

@Test public void testReadUsingReaderFilterWhitespace() throws IOException {

  final StringReader input=new StringReader(" a b a b c a b c d ");

  try (StringBuilderWriter output=new StringBuilderWriter();CharacterFilterReader reader=new CharacterFilterReader(input,Character::isWhitespace)){

    IOUtils.copy(reader,output);

    assertEquals("ababcabcd",output.toString());

  }

 }

