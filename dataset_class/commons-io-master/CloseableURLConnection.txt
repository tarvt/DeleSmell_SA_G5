Location: CloseableURLConnection.java

Content: 

@Override public void addRequestProperty(final String key,final String value){

  urlConnection.addRequestProperty(key,value);

}

Location: CloseableURLConnection.java

Content: 

CloseableURLConnection(final URLConnection urlConnection){

  super(Objects.requireNonNull(urlConnection,"urlConnection").getURL());

  this.urlConnection=urlConnection;

}

Location: CloseableURLConnection.java

Content: 

@Override public void connect() throws IOException {

  urlConnection.connect();

}

Location: CloseableURLConnection.java

Content: 

@Override public boolean getAllowUserInteraction(){

  return urlConnection.getAllowUserInteraction();

}

Location: CloseableURLConnection.java

Content: 

@Override public int getConnectTimeout(){

  return urlConnection.getConnectTimeout();

}

Location: CloseableURLConnection.java

Content: 

@Override public Object getContent() throws IOException {

  return urlConnection.getContent();

}

Location: CloseableURLConnection.java

Content: 

@Override public String getContentEncoding(){

  return urlConnection.getContentEncoding();

}

Location: CloseableURLConnection.java

Content: 

@Override public int getContentLength(){

  return urlConnection.getContentLength();

}

Location: CloseableURLConnection.java

Content: 

@Override public long getContentLengthLong(){

  return urlConnection.getContentLengthLong();

}

Location: CloseableURLConnection.java

Content: 

@Override public String getContentType(){

  return urlConnection.getContentType();

}

Location: CloseableURLConnection.java

Content: 

@Override public Object getContent(final Class[] classes) throws IOException {

  return urlConnection.getContent(classes);

}

Location: CloseableURLConnection.java

Content: 

@Override public long getDate(){

  return urlConnection.getDate();

}

Location: CloseableURLConnection.java

Content: 

@Override public boolean getDefaultUseCaches(){

  return urlConnection.getDefaultUseCaches();

}

Location: CloseableURLConnection.java

Content: 

@Override public boolean getDoInput(){

  return urlConnection.getDoInput();

}

Location: CloseableURLConnection.java

Content: 

@Override public boolean getDoOutput(){

  return urlConnection.getDoOutput();

}

Location: CloseableURLConnection.java

Content: 

@Override public long getExpiration(){

  return urlConnection.getExpiration();

}

Location: CloseableURLConnection.java

Content: 

@Override public long getHeaderFieldDate(final String name,final long Default){

  return urlConnection.getHeaderFieldDate(name,Default);

}

Location: CloseableURLConnection.java

Content: 

@Override public int getHeaderFieldInt(final String name,final int Default){

  return urlConnection.getHeaderFieldInt(name,Default);

}

Location: CloseableURLConnection.java

Content: 

@Override public String getHeaderFieldKey(final int n){

  return urlConnection.getHeaderFieldKey(n);

}

Location: CloseableURLConnection.java

Content: 

@Override public long getHeaderFieldLong(final String name,final long Default){

  return urlConnection.getHeaderFieldLong(name,Default);

}

Location: CloseableURLConnection.java

Content: 

@Override public Map<String,List<String>> getHeaderFields(){

  return urlConnection.getHeaderFields();

}

Location: CloseableURLConnection.java

Content: 

@Override public String getHeaderField(final int n){

  return urlConnection.getHeaderField(n);

}

Location: CloseableURLConnection.java

Content: 

@Override public String getHeaderField(final String name){

  return urlConnection.getHeaderField(name);

}

Location: CloseableURLConnection.java

Content: 

@Override public long getIfModifiedSince(){

  return urlConnection.getIfModifiedSince();

}

Location: CloseableURLConnection.java

Content: 

@Override public OutputStream getOutputStream() throws IOException {

  return urlConnection.getOutputStream();

}

Location: CloseableURLConnection.java

Content: 

@Override public Permission getPermission() throws IOException {

  return urlConnection.getPermission();

}

Location: CloseableURLConnection.java

Content: 

@Override public int getReadTimeout(){

  return urlConnection.getReadTimeout();

}

Location: CloseableURLConnection.java

Content: 

@Override public Map<String,List<String>> getRequestProperties(){

  return urlConnection.getRequestProperties();

}

Location: CloseableURLConnection.java

Content: 

@Override public String getRequestProperty(final String key){

  return urlConnection.getRequestProperty(key);

}

Location: CloseableURLConnection.java

Content: 

@Override public URL getURL(){

  return urlConnection.getURL();

}

Location: CloseableURLConnection.java

Content: 

@Override public boolean getUseCaches(){

  return urlConnection.getUseCaches();

}

Location: CloseableURLConnection.java

Content: 

static CloseableURLConnection open(final URI uri) throws IOException {

  return open(Objects.requireNonNull(uri,"uri").toURL());

}

Location: CloseableURLConnection.java

Content: 

static CloseableURLConnection open(final URL url) throws IOException {

  return new CloseableURLConnection(url.openConnection());

}

Location: CloseableURLConnection.java

Content: 

@Override public void setAllowUserInteraction(final boolean allowuserinteraction){

  urlConnection.setAllowUserInteraction(allowuserinteraction);

}

Location: CloseableURLConnection.java

Content: 

@Override public void setConnectTimeout(final int timeout){

  urlConnection.setConnectTimeout(timeout);

}

Location: CloseableURLConnection.java

Content: 

@Override public void setDefaultUseCaches(final boolean defaultusecaches){

  urlConnection.setDefaultUseCaches(defaultusecaches);

}

Location: CloseableURLConnection.java

Content: 

@Override public void setDoInput(final boolean doinput){

  urlConnection.setDoInput(doinput);

}

Location: CloseableURLConnection.java

Content: 

@Override public void setDoOutput(final boolean dooutput){

  urlConnection.setDoOutput(dooutput);

}

Location: CloseableURLConnection.java

Content: 

@Override public void setIfModifiedSince(final long ifmodifiedsince){

  urlConnection.setIfModifiedSince(ifmodifiedsince);

}

Location: CloseableURLConnection.java

Content: 

@Override public void setReadTimeout(final int timeout){

  urlConnection.setReadTimeout(timeout);

}

Location: CloseableURLConnection.java

Content: 

@Override public void setRequestProperty(final String key,final String value){

  urlConnection.setRequestProperty(key,value);

}

Location: CloseableURLConnection.java

Content: 

@Override public void setUseCaches(final boolean usecaches){

  urlConnection.setUseCaches(usecaches);

}

