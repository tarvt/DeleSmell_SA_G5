Location: SequenceReaderTest.java

Content: 

private void checkReadEof(final Reader reader) throws IOException {

  for (int i=0; i < 10; i++) {

    assertEquals(-1,reader.read());

  }

}

Location: SequenceReaderTest.java

Content: 

@Test public void testReadClosedReader() throws IOException {

  @SuppressWarnings("resource") final Reader reader=new SequenceReader(new CharSequenceReader("FooBar"));

  reader.close();

  checkReadEof(reader);

}

Location: SequenceReaderTest.java

Content: 

@Test public void testReadCollection() throws IOException {

  final Collection<Reader> readers=new ArrayList<>();

  readers.add(new StringReader("F"));

  readers.add(new StringReader("B"));

  try (final Reader reader=new SequenceReader(readers)){

    assertEquals('F',reader.read());

    assertEquals('B',reader.read());

    checkReadEof(reader);

  }

 }

Location: SequenceReaderTest.java

Content: 

@Test public void testReadIterable() throws IOException {

  final Collection<Reader> readers=new ArrayList<>();

  readers.add(new StringReader("F"));

  readers.add(new StringReader("B"));

  final Iterable<Reader> iterable=readers;

  try (final Reader reader=new SequenceReader(iterable)){

    assertEquals('F',reader.read());

    assertEquals('B',reader.read());

    checkReadEof(reader);

  }

 }

Location: SequenceReaderTest.java

Content: 

@Test public void testReadLength0Readers() throws IOException {

  try (final Reader reader=new SequenceReader(new StringReader(StringUtils.EMPTY),new StringReader(StringUtils.EMPTY),new StringReader(StringUtils.EMPTY))){

    checkReadEof(reader);

  }

 }

Location: SequenceReaderTest.java

Content: 

@Test public void testReadLength1Readers() throws IOException {

  try (final Reader reader=new SequenceReader(new StringReader("0"),new StringReader("1"),new StringReader("2"),new StringReader("3"))){

    assertEquals('0',reader.read());

    assertEquals('1',reader.read());

    assertEquals('2',reader.read());

    assertEquals('3',reader.read());

  }

 }

Location: SequenceReaderTest.java

Content: 

@Test public void testReadList() throws IOException {

  final List<Reader> readers=new ArrayList<>();

  readers.add(new StringReader("F"));

  readers.add(new StringReader("B"));

  try (final Reader reader=new SequenceReader(readers)){

    assertEquals('F',reader.read());

    assertEquals('B',reader.read());

    checkReadEof(reader);

  }

 }

