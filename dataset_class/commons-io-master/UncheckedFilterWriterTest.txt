Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testAppendCharSequenceIndexedThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.append("01",0,1)).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testAppendCharSequenceThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.append("01")).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testAppendCharThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.append('1')).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testCloseThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.close()).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test @Disabled("What should happen here?") public void testEqualsThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.equals(null)).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testFlushThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.flush()).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test @Disabled("What should happen here?") public void testHashCodeThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.hashCode()).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test @Disabled("What should happen here?") public void testToStringThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.toString()).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testWriteCharArrayIndexedThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.write(new char[1],0,1)).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testWriteCharArrayThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.write(new char[1])).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testWriteIntThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.write(1)).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testWriteStringIndexedThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.write("01",0,1)).getCause());

}

Location: UncheckedFilterWriterTest.java

Content: 

@Test public void testWriteStringThrows(){

  assertEquals(exception,assertThrows(UncheckedIOException.class,() -> brokenWriter.write("01")).getCause());

}

