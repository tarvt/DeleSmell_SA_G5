Location: RegexFileFilter.java

Content: 

/** 

 * Compiles the given pattern source.

 * @param pattern the source pattern.

 * @param flags the compilation flags.

 * @return a new Pattern.

 */

private static Pattern compile(final String pattern,final int flags){

  requireNonNull(pattern,"pattern");

  return Pattern.compile(pattern,flags);

}

Location: RegexFileFilter.java

Content: 

/** 

 * Constructs a new regular expression filter for a compiled regular expression

 * @param pattern regular expression to match.

 * @throws IllegalArgumentException if the pattern is null.

 */

public RegexFileFilter(final Pattern pattern){

  this(pattern,p -> p.getFileName().toString());

}

Location: RegexFileFilter.java

Content: 

/** 

 * Constructs a new regular expression filter for a compiled regular expression

 * @param pattern regular expression to match.

 * @param pathToString How convert a path to a string.

 * @throws IllegalArgumentException if the pattern is null.

 * @since 2.10.0

 */

public RegexFileFilter(final Pattern pattern,final Function<Path,String> pathToString){

  requireNonNull(pattern,"pattern");

  this.pattern=pattern;

  this.pathToString=pathToString;

}

Location: RegexFileFilter.java

Content: 

/** 

 * Constructs a new regular expression filter.

 * @param pattern regular string expression to match

 * @throws IllegalArgumentException if the pattern is null

 */

public RegexFileFilter(final String pattern){

  this(pattern,0);

}

Location: RegexFileFilter.java

Content: 

/** 

 * Constructs a new regular expression filter with the specified flags.

 * @param pattern regular string expression to match

 * @param flags pattern flags - e.g. {@link Pattern#CASE_INSENSITIVE}

 * @throws IllegalArgumentException if the pattern is null

 */

public RegexFileFilter(final String pattern,final int flags){

  this(compile(pattern,flags));

}

Location: RegexFileFilter.java

Content: 

/** 

 * Constructs a new regular expression filter with the specified flags case sensitivity.

 * @param pattern regular string expression to match

 * @param ioCase how to handle case sensitivity, null means case-sensitive

 * @throws IllegalArgumentException if the pattern is null

 */

public RegexFileFilter(final String pattern,final IOCase ioCase){

  this(compile(pattern,toFlags(ioCase)));

}

Location: RegexFileFilter.java

Content: 

/** 

 * Converts IOCase to Pattern compilation flags.

 * @param ioCase case-sensitivity.

 * @return Pattern compilation flags.

 */

private static int toFlags(final IOCase ioCase){

  return IOCase.isCaseSensitive(ioCase) ? Pattern.CASE_INSENSITIVE : 0;

}

