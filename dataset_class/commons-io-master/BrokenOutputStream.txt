Location: BrokenOutputStream.java

Content: 

/** 

 * Creates a new stream that always throws an  {@link IOException}.

 */

public BrokenOutputStream(){

  this(() -> new IOException("Broken output stream"));

}

Location: BrokenOutputStream.java

Content: 

/** 

 * Creates a new stream that always throws the given exception.

 * @param exception the exception to be thrown.

 */

public BrokenOutputStream(final IOException exception){

  this(() -> exception);

}

Location: BrokenOutputStream.java

Content: 

/** 

 * Creates a new stream that always throws an  {@link IOException}.

 * @param exceptionSupplier a supplier for the exception to be thrown.

 * @since 2.12.0

 */

public BrokenOutputStream(final Supplier<IOException> exceptionSupplier){

  this.exceptionSupplier=exceptionSupplier;

}

Location: BrokenOutputStream.java

Content: 

/** 

 * Throws the configured exception.

 * @param b ignored

 * @throws IOException always thrown

 */

@Override public void write(final int b) throws IOException {

  throw exceptionSupplier.get();

}

