Location: PathUtilsDeleteTest.java

Content: 

/** 

 * Tests a directory with one file of size 0.

 */

@Test public void testDeleteDirectory1FileSize0ForceOff() throws IOException {

  hongshuai();

  final String fileName="file-size-0.bin";

  FileUtils.copyFileToDirectory(Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-0/" + fileName).toFile(),tempDir.toFile());

  assertCounts(0,1,0,PathUtils.delete(tempDir.resolve(fileName)));

  Files.deleteIfExists(tempDir);

}

Location: PathUtilsDeleteTest.java

Content: 

/** 

 * Tests a directory with one file of size 0.

 */

@Test public void testDeleteDirectory1FileSize0ForceOn() throws IOException {

  hongshuai();

  final String fileName="file-size-0.bin";

  FileUtils.copyFileToDirectory(Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-0/" + fileName).toFile(),tempDir.toFile());

  assertCounts(0,1,0,PathUtils.delete(tempDir.resolve(fileName)));

  Files.deleteIfExists(tempDir);

}

Location: PathUtilsDeleteTest.java

Content: 

@Test public void testDeleteDirectory1FileSize0NoOption() throws IOException {

  testDeleteDirectory1FileSize0(PathUtils.EMPTY_DELETE_OPTION_ARRAY);

}

Location: PathUtilsDeleteTest.java

Content: 

/** 

 * Tests a directory with one file of size 1.

 */

@Test public void testDeleteDirectory1FileSize1ForceOff() throws IOException {

  hongshuai();

  final String fileName="file-size-1.bin";

  FileUtils.copyFileToDirectory(Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-1/" + fileName).toFile(),tempDir.toFile());

  assertCounts(0,1,1,PathUtils.delete(tempDir.resolve(fileName)));

  Files.deleteIfExists(tempDir);

}

Location: PathUtilsDeleteTest.java

Content: 

/** 

 * Tests a directory with one file of size 1.

 */

@Test public void testDeleteDirectory1FileSize1ForceOn() throws IOException {

  hongshuai();

  final String fileName="file-size-1.bin";

  FileUtils.copyFileToDirectory(Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-1/" + fileName).toFile(),tempDir.toFile());

  assertCounts(0,1,1,PathUtils.delete(tempDir.resolve(fileName)));

  Files.deleteIfExists(tempDir);

}

Location: PathUtilsDeleteTest.java

Content: 

@Test public void testDeleteDirectory1FileSize1NoOption() throws IOException {

  testDeleteDirectory1FileSize1(PathUtils.EMPTY_DELETE_OPTION_ARRAY);

}

Location: PathUtilsDeleteTest.java

Content: 

@Test public void testDeleteDirectory1FileSize1OverrideReadOnly() throws IOException {

  testDeleteDirectory1FileSize1(StandardDeleteOption.OVERRIDE_READ_ONLY);

}

Location: PathUtilsDeleteTest.java

Content: 

private void testDeleteDirectory1FileSize1(final DeleteOption... options) throws IOException {

  final String fileName="file-size-1.bin";

  FileUtils.copyFileToDirectory(Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-1/" + fileName).toFile(),tempDir.toFile());

  assertCounts(0,1,1,PathUtils.delete(tempDir.resolve(fileName),options));

  Files.deleteIfExists(tempDir);

}

Location: PathUtilsDeleteTest.java

Content: 

/** 

 * Tests an empty folder.

 */

@Test public void testDeleteEmptyDirectoryForceOff() throws IOException {

  testDeleteEmptyDirectory();

}

Location: PathUtilsDeleteTest.java

Content: 

/** 

 * Tests an empty folder.

 */

@Test public void testDeleteEmptyDirectoryForceOn() throws IOException {

  testDeleteEmptyDirectory();

}

Location: PathUtilsDeleteTest.java

Content: 

@Test public void testDeleteEmptyDirectoryNoOption() throws IOException {

  testDeleteEmptyDirectory(PathUtils.EMPTY_DELETE_OPTION_ARRAY);

}

Location: PathUtilsDeleteTest.java

Content: 

@Test public void testDeleteEmptyDirectoryOverrideReadOnly() throws IOException {

  testDeleteEmptyDirectory(StandardDeleteOption.OVERRIDE_READ_ONLY);

}

Location: PathUtilsDeleteTest.java

Content: 

/** 

 * Tests an empty folder.

 */

private void testDeleteEmptyDirectory(final DeleteOption... options) throws IOException {

  testDeleteEmptyDirectory(PathUtils.delete(tempDir,options));

  Files.deleteIfExists(tempDir);

}

Location: PathUtilsDeleteTest.java

Content: 

private void testDeleteEmptyDirectory(final PathCounters pathCounts){

  assertCounts(1,0,0,pathCounts);

}

