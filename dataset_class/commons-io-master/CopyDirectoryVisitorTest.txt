Location: CopyDirectoryVisitorTest.java

Content: 

/** 

 * Tests an empty folder.

 */

@ParameterizedTest @MethodSource("pathCounters") public void testCopyDirectoryEmptyFolder(final PathCounters pathCounters) throws IOException {

  final Path sourceDir=Files.createTempDirectory(getClass().getSimpleName());

  try {

    assertCounts(1,0,0,PathUtils.visitFileTree(new CopyDirectoryVisitor(pathCounters,sourceDir,targetDir,StandardCopyOption.REPLACE_EXISTING),sourceDir));

  }

  finally {

    Files.deleteIfExists(sourceDir);

  }

}

Location: CopyDirectoryVisitorTest.java

Content: 

/** 

 * Tests a directory with one file of size 0.

 */

@ParameterizedTest @MethodSource("pathCounters") public void testCopyDirectoryFolders1FileSize0(final PathCounters pathCounters) throws IOException {

  final Path sourceDir=Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-0");

  assertCounts(1,1,0,PathUtils.visitFileTree(new CopyDirectoryVisitor(pathCounters,sourceDir,targetDir,StandardCopyOption.REPLACE_EXISTING),sourceDir));

}

Location: CopyDirectoryVisitorTest.java

Content: 

/** 

 * Tests a directory with one file of size 1.

 */

@ParameterizedTest @MethodSource("pathCounters") public void testCopyDirectoryFolders1FileSize1(final PathCounters pathCounters) throws IOException {

  final Path sourceDir=Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-1");

  assertCounts(1,1,1,PathUtils.visitFileTree(new CopyDirectoryVisitor(pathCounters,sourceDir,targetDir,StandardCopyOption.REPLACE_EXISTING),sourceDir));

}

Location: CopyDirectoryVisitorTest.java

Content: 

/** 

 * Tests a directory with two subdirectories, each containing one file of size 1.

 */

@ParameterizedTest @MethodSource("pathCounters") public void testCopyDirectoryFolders2FileSize2(final PathCounters pathCounters) throws IOException {

  final Path sourceDir=Paths.get("src/test/resources/org/apache/commons/io/dirs-2-file-size-2");

  assertCounts(3,2,2,PathUtils.visitFileTree(new CopyDirectoryVisitor(pathCounters,sourceDir,targetDir,StandardCopyOption.REPLACE_EXISTING),sourceDir));

}

