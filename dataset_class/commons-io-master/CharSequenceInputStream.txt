Location: CharSequenceInputStream.java

Content: 

/** 

 * Constructs a new instance with a buffer size of 2048.

 * @param cs the input character sequence.

 * @param charset the character set name to use.

 * @throws IllegalArgumentException if the buffer is not large enough to hold a complete character.

 */

public CharSequenceInputStream(final CharSequence cs,final Charset charset){

  this(cs,charset,BUFFER_SIZE);

}

Location: CharSequenceInputStream.java

Content: 

/** 

 * Constructs a new instance.

 * @param cs the input character sequence.

 * @param charset the character set name to use.

 * @param bufferSize the buffer size to use.

 * @throws IllegalArgumentException if the buffer is not large enough to hold a complete character.

 */

public CharSequenceInputStream(final CharSequence cs,final Charset charset,final int bufferSize){

  this.charsetEncoder=charset.newEncoder().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE);

  this.bBuf=ByteBuffer.allocate(ReaderInputStream.checkMinBufferSize(charsetEncoder,bufferSize));

  this.bBuf.flip();

  this.cBuf=CharBuffer.wrap(cs);

  this.cBufMark=NO_MARK;

  this.bBufMark=NO_MARK;

}

Location: CharSequenceInputStream.java

Content: 

/** 

 * Constructs a new instance with a buffer size of 2048.

 * @param cs the input character sequence.

 * @param charset the character set name to use.

 * @throws IllegalArgumentException if the buffer is not large enough to hold a complete character.

 */

public CharSequenceInputStream(final CharSequence cs,final String charset){

  this(cs,charset,BUFFER_SIZE);

}

Location: CharSequenceInputStream.java

Content: 

/** 

 * Constructs a new instance.

 * @param cs the input character sequence.

 * @param charset the character set name to use.

 * @param bufferSize the buffer size to use.

 * @throws IllegalArgumentException if the buffer is not large enough to hold a complete character.

 */

public CharSequenceInputStream(final CharSequence cs,final String charset,final int bufferSize){

  this(cs,Charset.forName(charset),bufferSize);

}

