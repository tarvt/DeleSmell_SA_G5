Location: ThrowOnFlushAndCloseOutputStream.java

Content: 

/** 

 * @see java.io.OutputStream#flush() 

 */

@Override public void flush() throws IOException {

  if (throwOnFlush) {

    fail(getClass().getSimpleName() + ".flush() called.");

  }

  super.flush();

}

Location: ThrowOnFlushAndCloseOutputStream.java

Content: 

public void off(){

  throwOnFlush=false;

  throwOnClose=false;

}

Location: ThrowOnFlushAndCloseOutputStream.java

Content: 

/** 

 * @param proxy OutputStream to delegate to.

 * @param throwOnFlush True if flush() is forbidden

 * @param throwOnClose True if close() is forbidden

 */

public ThrowOnFlushAndCloseOutputStream(final OutputStream proxy,final boolean throwOnFlush,final boolean throwOnClose){

  super(proxy);

  this.throwOnFlush=throwOnFlush;

  this.throwOnClose=throwOnClose;

}

