Location: PathUtilsCountingTest.java

Content: 

/** 

 * Tests an empty folder.

 */

@Test public void testCountEmptyFolder() throws IOException {

  final Path tempDir=Files.createTempDirectory(getClass().getCanonicalName());

  try {

    final PathCounters pathCounts=PathUtils.countDirectory(tempDir);

    assertCounts(1,0,0,pathCounts);

  }

  finally {

    Files.deleteIfExists(tempDir);

  }

}

Location: PathUtilsCountingTest.java

Content: 

/** 

 * Tests a directory with one file of size 0.

 */

@Test public void testCountFolders1FileSize0() throws IOException {

  final PathCounters pathCounts=PathUtils.countDirectory(Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-0"));

  assertCounts(1,1,0,pathCounts);

}

Location: PathUtilsCountingTest.java

Content: 

/** 

 * Tests a directory with one file of size 1.

 */

@Test public void testCountFolders1FileSize1() throws IOException {

  final PathCounters visitor=PathUtils.countDirectory(Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-1"));

  assertCounts(1,1,1,visitor);

}

Location: PathUtilsCountingTest.java

Content: 

/** 

 * Tests a directory with two subdirectories, each containing one file of size 1.

 */

@Test public void testCountFolders2FileSize2() throws IOException {

  final PathCounters pathCounts=PathUtils.countDirectory(Paths.get("src/test/resources/org/apache/commons/io/dirs-2-file-size-2"));

  assertCounts(3,2,2,pathCounts);

}

Location: PathUtilsCountingTest.java

Content: 

/** 

 * Tests a directory with two subdirectories, each containing one file of size 2.

 */

@Test public void testCountFolders2FileSize4() throws IOException {

  final PathCounters pathCounts=PathUtils.countDirectory(Paths.get("src/test/resources/org/apache/commons/io/dirs-2-file-size-4"));

  assertCounts(3,4,8,pathCounts);

}

