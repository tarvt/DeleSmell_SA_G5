Location: BoundedInputStreamTest.java

Content: 

private void compare(final String msg,final byte[] expected,final byte[] actual){

  assertEquals(expected.length,actual.length,msg + " length");

  for (int i=0; i < expected.length; i++) {

    assertEquals(expected[i],actual[i],msg + " byte[" + i+ "]");

  }

}

Location: BoundedInputStreamTest.java

Content: 

@Test public void testReadArray() throws Exception {

  BoundedInputStream bounded;

  final byte[] helloWorld="Hello World".getBytes();

  final byte[] hello="Hello".getBytes();

  bounded=new BoundedInputStream(new ByteArrayInputStream(helloWorld));

  compare("limit = -1",helloWorld,IOUtils.toByteArray(bounded));

  bounded=new BoundedInputStream(new ByteArrayInputStream(helloWorld),0);

  compare("limit = 0",IOUtils.EMPTY_BYTE_ARRAY,IOUtils.toByteArray(bounded));

  bounded=new BoundedInputStream(new ByteArrayInputStream(helloWorld),helloWorld.length);

  compare("limit = length",helloWorld,IOUtils.toByteArray(bounded));

  bounded=new BoundedInputStream(new ByteArrayInputStream(helloWorld),helloWorld.length + 1);

  compare("limit > length",helloWorld,IOUtils.toByteArray(bounded));

  bounded=new BoundedInputStream(new ByteArrayInputStream(helloWorld),helloWorld.length - 6);

  compare("limit < length",hello,IOUtils.toByteArray(bounded));

}

Location: BoundedInputStreamTest.java

Content: 

@Test public void testReadSingle() throws Exception {

  BoundedInputStream bounded;

  final byte[] helloWorld="Hello World".getBytes();

  final byte[] hello="Hello".getBytes();

  bounded=new BoundedInputStream(new ByteArrayInputStream(helloWorld),helloWorld.length);

  for (int i=0; i < helloWorld.length; i++) {

    assertEquals(helloWorld[i],bounded.read(),"limit = length byte[" + i + "]");

  }

  assertEquals(-1,bounded.read(),"limit = length end");

  bounded=new BoundedInputStream(new ByteArrayInputStream(helloWorld),helloWorld.length + 1);

  for (int i=0; i < helloWorld.length; i++) {

    assertEquals(helloWorld[i],bounded.read(),"limit > length byte[" + i + "]");

  }

  assertEquals(-1,bounded.read(),"limit > length end");

  bounded=new BoundedInputStream(new ByteArrayInputStream(helloWorld),hello.length);

  for (int i=0; i < hello.length; i++) {

    assertEquals(hello[i],bounded.read(),"limit < length byte[" + i + "]");

  }

  assertEquals(-1,bounded.read(),"limit < length end");

}

