Location: FileUtilsWaitForTest.java

Content: 

@Test public void testWaitFor(){

  FileUtils.waitFor(FileUtils.current(),-1);

}

Location: FileUtilsWaitForTest.java

Content: 

@Test public void testWaitForInterrupted() throws InterruptedException {

  final AtomicBoolean wasInterrupted=new AtomicBoolean();

  final CountDownLatch started=new CountDownLatch(1);

  final Thread thread1=new Thread(() -> {

    started.countDown();

    assertTrue(FileUtils.waitFor(FileUtils.current(),4));

    wasInterrupted.set(Thread.currentThread().isInterrupted());

  }

);

  thread1.start();

  thread1.interrupt();

  started.await();

  thread1.join();

  assertTrue(wasInterrupted.get());

}

Location: FileUtilsWaitForTest.java

Content: 

@Test public void testWaitForNegativeDuration(){

  FileUtils.waitFor(FileUtils.current(),-1);

}

