Location: PathUtilsVisitorTest.java

Content: 

/** 

 * Tests an empty folder.

 */

@ParameterizedTest @MethodSource("testParameters") public void testCountEmptyFolder(final Supplier<AccumulatorPathVisitor> supplier) throws IOException {

  final Path tempDir=tempDirFile.toPath();

  final CountingPathVisitor countingPathVisitor=CountingPathVisitor.withLongCounters();

  final PathVisitorFileFilter countingFileFilter=new PathVisitorFileFilter(countingPathVisitor);

  Files.walkFileTree(tempDir,new AndFileFilter(countingFileFilter,DirectoryFileFilter.INSTANCE,EmptyFileFilter.EMPTY));

  assertCounts(1,0,0,countingPathVisitor.getPathCounters());

}

Location: PathUtilsVisitorTest.java

Content: 

/** 

 * Tests a directory with one file of size 0.

 */

@ParameterizedTest @MethodSource("testParameters") public void testCountFolders1FileSize0(final Supplier<AccumulatorPathVisitor> supplier) throws IOException {

  final CountingPathVisitor countingPathVisitor=CountingPathVisitor.withLongCounters();

  final PathVisitorFileFilter countingFileFilter=new PathVisitorFileFilter(countingPathVisitor);

  Files.walkFileTree(Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-0"),countingFileFilter);

  assertCounts(1,1,0,countingPathVisitor.getPathCounters());

}

Location: PathUtilsVisitorTest.java

Content: 

/** 

 * Tests a directory with one file of size 1.

 */

@ParameterizedTest @MethodSource("testParameters") public void testCountFolders1FileSize1(final Supplier<AccumulatorPathVisitor> supplier) throws IOException {

  final CountingPathVisitor countingPathVisitor=CountingPathVisitor.withLongCounters();

  final PathVisitorFileFilter countingFileFilter=new PathVisitorFileFilter(countingPathVisitor);

  Files.walkFileTree(Paths.get("src/test/resources/org/apache/commons/io/dirs-1-file-size-1"),countingFileFilter);

  assertCounts(1,1,1,countingPathVisitor.getPathCounters());

}

Location: PathUtilsVisitorTest.java

Content: 

/** 

 * Tests a directory with two subdirectories, each containing one file of size 1.

 */

@ParameterizedTest @MethodSource("testParameters") public void testCountFolders2FileSize2(final Supplier<AccumulatorPathVisitor> supplier) throws IOException {

  final CountingPathVisitor countingPathVisitor=CountingPathVisitor.withLongCounters();

  final PathVisitorFileFilter countingFileFilter=new PathVisitorFileFilter(countingPathVisitor);

  Files.walkFileTree(Paths.get("src/test/resources/org/apache/commons/io/dirs-2-file-size-2"),countingFileFilter);

  assertCounts(3,2,2,countingPathVisitor.getPathCounters());

}

