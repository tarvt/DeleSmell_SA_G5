Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadBoolean() throws IOException {

  bytes=new byte[]{0x00,0x01,0x02};

  try (final ByteArrayInputStream bais=new ByteArrayInputStream(bytes);final SwappedDataInputStream sdis=new SwappedDataInputStream(bais)){

    assertFalse(sdis.readBoolean());

    assertTrue(sdis.readBoolean());

    assertTrue(sdis.readBoolean());

  }

 }

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadByte() throws IOException {

  assertEquals(0x01,this.sdis.readByte());

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadChar() throws IOException {

  assertEquals((char)0x0201,this.sdis.readChar());

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadDouble() throws IOException {

  assertEquals(Double.longBitsToDouble(0x0807060504030201L),this.sdis.readDouble(),0);

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadFloat() throws IOException {

  assertEquals(Float.intBitsToFloat(0x04030201),this.sdis.readFloat(),0);

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadFully() throws IOException {

  final byte[] bytesIn=new byte[8];

  this.sdis.readFully(bytesIn);

  for (int i=0; i < 8; i++) {

    assertEquals(bytes[i],bytesIn[i]);

  }

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadInt() throws IOException {

  assertEquals(0x04030201,this.sdis.readInt());

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadLong() throws IOException {

  assertEquals(0x0807060504030201L,this.sdis.readLong());

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadShort() throws IOException {

  assertEquals((short)0x0201,this.sdis.readShort());

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadUnsignedByte() throws IOException {

  assertEquals(0x01,this.sdis.readUnsignedByte());

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadUnsignedShort() throws IOException {

  assertEquals((short)0x0201,this.sdis.readUnsignedShort());

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testReadUTF(){

  assertThrows(UnsupportedOperationException.class,() -> this.sdis.readUTF(),"readUTF should be unsupported. ");

}

Location: SwappedDataInputStreamTest.java

Content: 

@Test public void testSkipBytes() throws IOException {

  this.sdis.skipBytes(4);

  assertEquals(0x08070605,this.sdis.readInt());

}

