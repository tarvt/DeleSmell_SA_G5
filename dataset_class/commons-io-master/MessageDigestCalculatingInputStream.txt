Location: MessageDigestCalculatingInputStream.java

Content: 

/** 

 * Returns the  {@link MessageDigest}, which is being used for generating the checksum. <em>Note</em>: The checksum will only reflect the data, which has been read so far. This is probably not, what you expect. Make sure, that the complete data has been read, if that is what you want. The easiest way to do so is by invoking {@link #consume()}.

 * @return the message digest used

 */

public MessageDigest getMessageDigest(){

  return messageDigest;

}

Location: MessageDigestCalculatingInputStream.java

Content: 

/** 

 * Creates a new instance, which calculates a signature on the given stream, using a  {@link MessageDigest} with the"MD5" algorithm.

 * @param inputStream the stream to calculate the message digest for

 * @throws NoSuchAlgorithmException if no Provider supports a MessageDigestSpi implementation for the specifiedalgorithm.

 */

public MessageDigestCalculatingInputStream(final InputStream inputStream) throws NoSuchAlgorithmException {

  this(inputStream,MessageDigest.getInstance("MD5"));

}

Location: MessageDigestCalculatingInputStream.java

Content: 

/** 

 * Creates a new instance, which calculates a signature on the given stream, using the given  {@link MessageDigest}.

 * @param inputStream the stream to calculate the message digest for

 * @param messageDigest the message digest to use

 */

public MessageDigestCalculatingInputStream(final InputStream inputStream,final MessageDigest messageDigest){

  super(inputStream,new MessageDigestMaintainingObserver(messageDigest));

  this.messageDigest=messageDigest;

}

Location: MessageDigestCalculatingInputStream.java

Content: 

/** 

 * Creates a new instance, which calculates a signature on the given stream, using a  {@link MessageDigest} with thegiven algorithm.

 * @param inputStream the stream to calculate the message digest for

 * @param algorithm the name of the algorithm to use

 * @throws NoSuchAlgorithmException if no Provider supports a MessageDigestSpi implementation for the specifiedalgorithm.

 */

public MessageDigestCalculatingInputStream(final InputStream inputStream,final String algorithm) throws NoSuchAlgorithmException {

  this(inputStream,MessageDigest.getInstance(algorithm));

}

