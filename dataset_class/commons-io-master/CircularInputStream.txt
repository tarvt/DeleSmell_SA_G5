Location: CircularInputStream.java

Content: 

/** 

 * Creates an instance from the specified array of bytes.

 * @param repeatContent Input buffer to be repeated this buffer is not copied.

 * @param targetByteCount How many bytes the read. A negative number means an infinite target count.

 */

public CircularInputStream(final byte[] repeatContent,final long targetByteCount){

  this.repeatedContent=validate(repeatContent);

  if (repeatContent.length == 0) {

    throw new IllegalArgumentException("repeatContent is empty.");

  }

  this.targetByteCount=targetByteCount;

}

Location: CircularInputStream.java

Content: 

/** 

 * Throws an  {@link IllegalArgumentException} if the input contains -1.

 * @param repeatContent input to validate.

 * @return the input.

 */

private static byte[] validate(final byte[] repeatContent){

  Objects.requireNonNull(repeatContent,"repeatContent");

  for (  final byte b : repeatContent) {

    if (b == IOUtils.EOF) {

      throw new IllegalArgumentException("repeatContent contains the end-of-stream marker " + IOUtils.EOF);

    }

  }

  return repeatContent;

}

