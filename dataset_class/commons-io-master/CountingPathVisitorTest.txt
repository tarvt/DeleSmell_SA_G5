Location: CountingPathVisitorTest.java

Content: 

private void checkZeroCounts(final CountingPathVisitor visitor){

  Assertions.assertEquals(CountingPathVisitor.withLongCounters(),visitor);

  Assertions.assertEquals(CountingPathVisitor.withBigIntegerCounters(),visitor);

}

Location: CountingPathVisitorTest.java

Content: 

/** 

 * Tests an empty folder.

 */

@ParameterizedTest @MethodSource("countingPathVisitors") public void testCountEmptyFolder(final CountingPathVisitor visitor) throws IOException {

  checkZeroCounts(visitor);

  final Path tempDir=Files.createTempDirectory(getClass().getCanonicalName());

  try {

    assertCounts(1,0,0,PathUtils.visitFileTree(visitor,tempDir));

  }

  finally {

    Files.deleteIfExists(tempDir);

  }

}

Location: CountingPathVisitorTest.java

Content: 

/** 

 * Tests a directory with one file of size 0.

 */

@ParameterizedTest @MethodSource("countingPathVisitors") public void testCountFolders1FileSize0(final CountingPathVisitor visitor) throws IOException {

  checkZeroCounts(visitor);

  assertCounts(1,1,0,PathUtils.visitFileTree(visitor,"src/test/resources/org/apache/commons/io/dirs-1-file-size-0"));

}

Location: CountingPathVisitorTest.java

Content: 

/** 

 * Tests a directory with one file of size 1.

 */

@ParameterizedTest @MethodSource("countingPathVisitors") public void testCountFolders1FileSize1(final CountingPathVisitor visitor) throws IOException {

  checkZeroCounts(visitor);

  assertCounts(1,1,1,PathUtils.visitFileTree(visitor,"src/test/resources/org/apache/commons/io/dirs-1-file-size-1"));

}

Location: CountingPathVisitorTest.java

Content: 

/** 

 * Tests a directory with two subdirectories, each containing one file of size 1.

 */

@ParameterizedTest @MethodSource("countingPathVisitors") public void testCountFolders2FileSize2(final CountingPathVisitor visitor) throws IOException {

  checkZeroCounts(visitor);

  assertCounts(3,2,2,PathUtils.visitFileTree(visitor,"src/test/resources/org/apache/commons/io/dirs-2-file-size-2"));

}

Location: CountingPathVisitorTest.java

Content: 

@ParameterizedTest @MethodSource("countingPathVisitors") void testToString(final CountingPathVisitor visitor){

  visitor.toString();

}

