Location: TeeInputStream.java

Content: 

/** 

 * Creates a TeeInputStream that proxies the given  {@link InputStream}and copies all read bytes to the given  {@link OutputStream}. The given output stream will not be closed when this stream gets closed.

 * @param input input stream to be proxied

 * @param branch output stream that will receive a copy of all bytes read

 */

public TeeInputStream(final InputStream input,final OutputStream branch){

  this(input,branch,false);

}

Location: TeeInputStream.java

Content: 

/** 

 * Creates a TeeInputStream that proxies the given  {@link InputStream}and copies all read bytes to the given  {@link OutputStream}. The given output stream will be closed when this stream gets closed if the closeBranch parameter is  {@code true}.

 * @param input input stream to be proxied

 * @param branch output stream that will receive a copy of all bytes read

 * @param closeBranch flag for closing also the output stream when thisstream is closed

 */

public TeeInputStream(final InputStream input,final OutputStream branch,final boolean closeBranch){

  super(input);

  this.branch=branch;

  this.closeBranch=closeBranch;

}

