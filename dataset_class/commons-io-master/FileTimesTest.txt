Location: FileTimesTest.java

Content: 

@Test public void PlusMinusMillis(){

  final int millis=2;

  assertEquals(Instant.EPOCH.plusMillis(millis),FileTimes.plusMillis(FileTimes.EPOCH,millis).toInstant());

  assertEquals(Instant.EPOCH,FileTimes.plusMillis(FileTimes.EPOCH,0).toInstant());

}

Location: FileTimesTest.java

Content: 

@Test public void testEpoch(){

  assertEquals(0,FileTimes.EPOCH.toMillis());

}

Location: FileTimesTest.java

Content: 

@Test public void testMinusMillis(){

  final int millis=2;

  assertEquals(Instant.EPOCH.minusMillis(millis),FileTimes.minusMillis(FileTimes.EPOCH,millis).toInstant());

  assertEquals(Instant.EPOCH,FileTimes.minusMillis(FileTimes.EPOCH,0).toInstant());

}

Location: FileTimesTest.java

Content: 

@Test public void testMinusNanos(){

  final int millis=2;

  assertEquals(Instant.EPOCH.minusNanos(millis),FileTimes.minusNanos(FileTimes.EPOCH,millis).toInstant());

  assertEquals(Instant.EPOCH,FileTimes.minusNanos(FileTimes.EPOCH,0).toInstant());

}

Location: FileTimesTest.java

Content: 

@Test public void testMinusSeconds(){

  final int seconds=2;

  assertEquals(Instant.EPOCH.minusSeconds(seconds),FileTimes.minusSeconds(FileTimes.EPOCH,seconds).toInstant());

  assertEquals(Instant.EPOCH,FileTimes.minusSeconds(FileTimes.EPOCH,0).toInstant());

}

Location: FileTimesTest.java

Content: 

@Test public void testPlusNanos(){

  final int millis=2;

  assertEquals(Instant.EPOCH.plusNanos(millis),FileTimes.plusNanos(FileTimes.EPOCH,millis).toInstant());

  assertEquals(Instant.EPOCH,FileTimes.plusNanos(FileTimes.EPOCH,0).toInstant());

}

Location: FileTimesTest.java

Content: 

@Test public void testPlusSeconds(){

  final int seconds=2;

  assertEquals(Instant.EPOCH.plusSeconds(seconds),FileTimes.plusSeconds(FileTimes.EPOCH,seconds).toInstant());

  assertEquals(Instant.EPOCH,FileTimes.plusSeconds(FileTimes.EPOCH,0).toInstant());

}

