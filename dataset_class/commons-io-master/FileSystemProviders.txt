Location: FileSystemProviders.java

Content: 

private FileSystemProviders(final List<FileSystemProvider> providers){

  this.providers=providers;

}

Location: FileSystemProviders.java

Content: 

/** 

 * Gets the  {@link FileSystemProvider} for the given Path.

 * @param path The Path to query

 * @return the {@link FileSystemProvider} for the given Path.

 */

@SuppressWarnings("resource") public static FileSystemProvider getFileSystemProvider(final Path path){

  return Objects.requireNonNull(path,"path").getFileSystem().provider();

}

Location: FileSystemProviders.java

Content: 

/** 

 * Gets the  {@link FileSystemProvider} for the given scheme.

 * @param scheme The scheme to query.

 * @return the {@link FileSystemProvider} for the given URI or null.

 */

@SuppressWarnings("resource") public FileSystemProvider getFileSystemProvider(final String scheme){

  Objects.requireNonNull(scheme,"scheme");

  if (scheme.equalsIgnoreCase("file")) {

    return FileSystems.getDefault().provider();

  }

  if (providers != null) {

    for (    final FileSystemProvider provider : providers) {

      if (provider.getScheme().equalsIgnoreCase(scheme)) {

        return provider;

      }

    }

  }

  return null;

}

Location: FileSystemProviders.java

Content: 

/** 

 * Gets the  {@link FileSystemProvider} for the given URI.

 * @param uri The URI to query

 * @return the {@link FileSystemProvider} for the given URI or null.

 */

public FileSystemProvider getFileSystemProvider(final URI uri){

  return getFileSystemProvider(Objects.requireNonNull(uri,"uri").getScheme());

}

Location: FileSystemProviders.java

Content: 

/** 

 * Gets the  {@link FileSystemProvider} for the given URL.

 * @param url The URL to query

 * @return the {@link FileSystemProvider} for the given URI or null.

 */

public FileSystemProvider getFileSystemProvider(final URL url){

  return getFileSystemProvider(Objects.requireNonNull(url,"url").getProtocol());

}

Location: FileSystemProviders.java

Content: 

/** 

 * Returns the instance for the installed providers.

 * @return the instance for the installed providers.

 * @see FileSystemProvider#installedProviders()

 */

public static FileSystemProviders installed(){

  return INSTALLED;

}

