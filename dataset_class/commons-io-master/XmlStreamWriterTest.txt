Location: XmlStreamWriterTest.java

Content: 

private static void checkXmlContent(final String xml,final String encoding,final String defaultEncoding) throws IOException {

  final ByteArrayOutputStream out=new ByteArrayOutputStream();

  final XmlStreamWriter writer=new XmlStreamWriter(out,defaultEncoding);

  writer.write(xml);

  writer.close();

  final byte[] xmlContent=out.toByteArray();

  assertTrue(encoding.equalsIgnoreCase(writer.getEncoding()));

  assertArrayEquals(xml.getBytes(encoding),xmlContent);

}

Location: XmlStreamWriterTest.java

Content: 

private static void checkXmlWriter(final String text,final String encoding) throws IOException {

  checkXmlWriter(text,encoding,null);

}

Location: XmlStreamWriterTest.java

Content: 

private static void checkXmlWriter(final String text,final String encoding,final String defaultEncoding) throws IOException {

  final String xml=createXmlContent(text,encoding);

  String effectiveEncoding=encoding;

  if (effectiveEncoding == null) {

    effectiveEncoding=defaultEncoding == null ? "UTF-8" : defaultEncoding;

  }

  checkXmlContent(xml,effectiveEncoding,defaultEncoding);

}

Location: XmlStreamWriterTest.java

Content: 

private static String createXmlContent(final String text,final String encoding){

  String xmlDecl="<?xml version=\"1.0\"?>";

  if (encoding != null) {

    xmlDecl="<?xml version=\"1.0\" encoding=\"" + encoding + "\"?>";

  }

  return xmlDecl + "\n<text>" + text+ "</text>";

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testDefaultEncoding() throws IOException {

  checkXmlWriter(TEXT_UNICODE,null,null);

  checkXmlWriter(TEXT_UNICODE,null,"UTF-8");

  checkXmlWriter(TEXT_UNICODE,null,"UTF-16");

  checkXmlWriter(TEXT_UNICODE,null,"UTF-16BE");

  checkXmlWriter(TEXT_UNICODE,null,"ISO-8859-1");

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testEBCDICEncoding() throws IOException {

  checkXmlWriter("simple text in EBCDIC","CP1047");

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testEmpty() throws IOException {

  final ByteArrayOutputStream out=new ByteArrayOutputStream();

  try (final XmlStreamWriter writer=new XmlStreamWriter(out)){

    writer.flush();

    writer.write("");

    writer.flush();

    writer.write(".");

    writer.flush();

  }

 }

Location: XmlStreamWriterTest.java

Content: 

@Test public void testEUC_JPEncoding() throws IOException {

  checkXmlWriter(TEXT_EUC_JP,"EUC-JP");

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testLatin15Encoding() throws IOException {

  checkXmlWriter(TEXT_LATIN15,"ISO-8859-15");

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testLatin1Encoding() throws IOException {

  checkXmlWriter(TEXT_LATIN1,"ISO-8859-1");

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testLatin7Encoding() throws IOException {

  checkXmlWriter(TEXT_LATIN7,"ISO-8859-7");

}

Location: XmlStreamWriterTest.java

Content: 

@Test @DefaultLocale(language="tr") public void testLowerCaseEncodingWithTurkishLocale_IO_557() throws IOException {

  checkXmlWriter(TEXT_UNICODE,"utf-8");

  checkXmlWriter(TEXT_LATIN1,"iso-8859-1");

  checkXmlWriter(TEXT_LATIN7,"iso-8859-7");

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testNoXmlHeader() throws IOException {

  final String xml="<text>text with no XML header</text>";

  checkXmlContent(xml,"UTF-8",null);

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testUTF16BEEncoding() throws IOException {

  checkXmlWriter(TEXT_UNICODE,"UTF-16BE");

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testUTF16Encoding() throws IOException {

  checkXmlWriter(TEXT_UNICODE,"UTF-16");

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testUTF16LEEncoding() throws IOException {

  checkXmlWriter(TEXT_UNICODE,"UTF-16LE");

}

Location: XmlStreamWriterTest.java

Content: 

@Test public void testUTF8Encoding() throws IOException {

  checkXmlWriter(TEXT_UNICODE,"UTF-8");

}

