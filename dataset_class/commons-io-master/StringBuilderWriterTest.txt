Location: StringBuilderWriterTest.java

Content: 

@Test public void testAppendCharSequencePortion() throws IOException {

  try (final Writer writer=new StringBuilderWriter()){

    writer.append("FooBar",3,6).append(new StringBuffer("FooBar"),0,3);

    assertEquals("BarFoo",writer.toString());

  }

 }

Location: StringBuilderWriterTest.java

Content: 

@Test public void testAppendConstructCapacity() throws IOException {

  try (final Writer writer=new StringBuilderWriter(100)){

    writer.append("Foo");

    assertEquals("Foo",writer.toString());

  }

 }

Location: StringBuilderWriterTest.java

Content: 

@Test public void testAppendConstructNull() throws IOException {

  try (final Writer writer=new StringBuilderWriter(null)){

    writer.append("Foo");

    assertEquals("Foo",writer.toString());

  }

 }

Location: StringBuilderWriterTest.java

Content: 

@Test public void testAppendConstructStringBuilder(){

  final StringBuilder builder=new StringBuilder("Foo");

  try (final StringBuilderWriter writer=new StringBuilderWriter(builder)){

    writer.append("Bar");

    assertEquals("FooBar",writer.toString());

    assertSame(builder,writer.getBuilder());

  }

 }

Location: StringBuilderWriterTest.java

Content: 

@Test public void testWriteChar() throws IOException {

  try (final Writer writer=new StringBuilderWriter()){

    writer.write('F');

    assertEquals("F",writer.toString());

    writer.write('o');

    assertEquals("Fo",writer.toString());

    writer.write('o');

    assertEquals("Foo",writer.toString());

  }

 }

Location: StringBuilderWriterTest.java

Content: 

@Test public void testWriteCharArrayPortion() throws IOException {

  try (final Writer writer=new StringBuilderWriter()){

    writer.write(FOOBAR_CHARS,3,3);

    assertEquals("Bar",writer.toString());

    writer.write(FOOBAR_CHARS,0,3);

    assertEquals("BarFoo",writer.toString());

  }

 }

Location: StringBuilderWriterTest.java

Content: 

@Test public void testWriteStringPortion() throws IOException {

  try (final Writer writer=new StringBuilderWriter()){

    writer.write("FooBar",3,3);

    assertEquals("Bar",writer.toString());

    writer.write("FooBar",0,3);

    assertEquals("BarFoo",writer.toString());

  }

 }

