Location: FileDeleteStrategyTest.java

Content: 

@Test public void testDeleteForce() throws Exception {

  final File baseDir=temporaryFolder;

  final File subDir=new File(baseDir,"test");

  assertTrue(subDir.mkdir());

  final File subFile=new File(subDir,"a.txt");

  if (!subFile.getParentFile().exists()) {

    throw new IOException("Cannot create file " + subFile + " as the parent directory does not exist");

  }

  try (final BufferedOutputStream output=new BufferedOutputStream(Files.newOutputStream(subFile.toPath()))){

    TestUtils.generateTestData(output,16);

  }

   assertTrue(subDir.exists());

  assertTrue(subFile.exists());

  FileDeleteStrategy.FORCE.delete(subDir);

  assertFalse(subDir.exists());

  assertFalse(subFile.exists());

  FileDeleteStrategy.FORCE.delete(subDir);

  assertFalse(subDir.exists());

}

Location: FileDeleteStrategyTest.java

Content: 

@Test public void testDeleteNormal() throws Exception {

  final File baseDir=temporaryFolder;

  final File subDir=new File(baseDir,"test");

  assertTrue(subDir.mkdir());

  final File subFile=new File(subDir,"a.txt");

  if (!subFile.getParentFile().exists()) {

    throw new IOException("Cannot create file " + subFile + " as the parent directory does not exist");

  }

  try (final BufferedOutputStream output=new BufferedOutputStream(Files.newOutputStream(subFile.toPath()))){

    TestUtils.generateTestData(output,16);

  }

   assertTrue(subDir.exists());

  assertTrue(subFile.exists());

  assertThrows(IOException.class,() -> FileDeleteStrategy.NORMAL.delete(subDir));

  assertTrue(subDir.exists());

  assertTrue(subFile.exists());

  FileDeleteStrategy.NORMAL.delete(subFile);

  assertTrue(subDir.exists());

  assertFalse(subFile.exists());

  FileDeleteStrategy.NORMAL.delete(subDir);

  assertFalse(subDir.exists());

  FileDeleteStrategy.NORMAL.delete(subDir);

  assertFalse(subDir.exists());

}

Location: FileDeleteStrategyTest.java

Content: 

@Test public void testDeleteNull() throws Exception {

  assertThrows(NullPointerException.class,() -> FileDeleteStrategy.NORMAL.delete(null));

  assertTrue(FileDeleteStrategy.NORMAL.deleteQuietly(null));

}

Location: FileDeleteStrategyTest.java

Content: 

@Test public void testDeleteQuietlyNormal() throws Exception {

  final File baseDir=temporaryFolder;

  final File subDir=new File(baseDir,"test");

  assertTrue(subDir.mkdir());

  final File subFile=new File(subDir,"a.txt");

  if (!subFile.getParentFile().exists()) {

    throw new IOException("Cannot create file " + subFile + " as the parent directory does not exist");

  }

  try (final BufferedOutputStream output=new BufferedOutputStream(Files.newOutputStream(subFile.toPath()))){

    TestUtils.generateTestData(output,16);

  }

   assertTrue(subDir.exists());

  assertTrue(subFile.exists());

  assertFalse(FileDeleteStrategy.NORMAL.deleteQuietly(subDir));

  assertTrue(subDir.exists());

  assertTrue(subFile.exists());

  assertTrue(FileDeleteStrategy.NORMAL.deleteQuietly(subFile));

  assertTrue(subDir.exists());

  assertFalse(subFile.exists());

  assertTrue(FileDeleteStrategy.NORMAL.deleteQuietly(subDir));

  assertFalse(subDir.exists());

  assertTrue(FileDeleteStrategy.NORMAL.deleteQuietly(subDir));

  assertFalse(subDir.exists());

}

