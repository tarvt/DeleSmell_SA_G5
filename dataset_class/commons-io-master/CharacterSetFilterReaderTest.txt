Location: CharacterSetFilterReaderTest.java

Content: 

@Test public void testInputSize0FilterSize0() throws IOException {

  final StringReader input=new StringReader("");

  try (CharacterSetFilterReader reader=new CharacterSetFilterReader(input,new HashSet<>(0))){

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterSetFilterReaderTest.java

Content: 

@Test public void testInputSize0NullFilter() throws IOException {

  final StringReader input=new StringReader("");

  try (CharacterSetFilterReader reader=new CharacterSetFilterReader(input,(Set<Integer>)null)){

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterSetFilterReaderTest.java

Content: 

@Test public void testInputSize2FilterSize2FilterFirst() throws IOException {

  final StringReader input=new StringReader(STRING_FIXTURE);

  final HashSet<Integer> codePoints=new HashSet<>();

  codePoints.add(Integer.valueOf('a'));

  codePoints.add(Integer.valueOf('y'));

  try (CharacterSetFilterReader reader=new CharacterSetFilterReader(input,codePoints)){

    assertEquals('b',reader.read());

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterSetFilterReaderTest.java

Content: 

@Test public void testInputSize2FilterSize2FilterLast() throws IOException {

  final StringReader input=new StringReader(STRING_FIXTURE);

  final HashSet<Integer> codePoints=new HashSet<>();

  codePoints.add(Integer.valueOf('x'));

  codePoints.add(Integer.valueOf('b'));

  try (CharacterSetFilterReader reader=new CharacterSetFilterReader(input,codePoints)){

    assertEquals('a',reader.read());

    assertEquals(-1,reader.read());

  }

 }

Location: CharacterSetFilterReaderTest.java

Content: 

@Test public void testInputSize2FilterSize2FilterNone() throws IOException {

  final StringReader input=new StringReader(STRING_FIXTURE);

  final HashSet<Integer> codePoints=new HashSet<>();

  codePoints.add(Integer.valueOf('x'));

  codePoints.add(Integer.valueOf('y'));

  try (CharacterSetFilterReader reader=new CharacterSetFilterReader(input,codePoints)){

    assertEquals('a',reader.read());

    assertEquals('b',reader.read());

  }

 }

