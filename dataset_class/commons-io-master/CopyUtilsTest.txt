Location: CopyUtilsTest.java

Content: 

@Test public void copy_byteArrayToOutputStream() throws Exception {

  final ByteArrayOutputStream baout=new ByteArrayOutputStream();

  final OutputStream out=new ThrowOnFlushAndCloseOutputStream(baout,false,true);

  CopyUtils.copy(inData,out);

  assertEquals(inData.length,baout.size(),"Sizes differ");

  assertArrayEquals(inData,baout.toByteArray(),"Content differs");

}

Location: CopyUtilsTest.java

Content: 

@Test public void copy_byteArrayToWriter() throws Exception {

  final ByteArrayOutputStream baout=new ByteArrayOutputStream();

  final OutputStream out=new ThrowOnFlushAndCloseOutputStream(baout,false,true);

  final Writer writer=new java.io.OutputStreamWriter(out,StandardCharsets.US_ASCII);

  CopyUtils.copy(inData,writer);

  writer.flush();

  assertEquals(inData.length,baout.size(),"Sizes differ");

  assertArrayEquals(inData,baout.toByteArray(),"Content differs");

}

Location: CopyUtilsTest.java

Content: 

@SuppressWarnings("resource") @Test public void copy_inputStreamToWriter() throws Exception {

  InputStream in=new ByteArrayInputStream(inData);

  in=new ThrowOnCloseInputStream(in);

  final ByteArrayOutputStream baout=new ByteArrayOutputStream();

  final OutputStream out=new ThrowOnFlushAndCloseOutputStream(baout,false,true);

  final Writer writer=new java.io.OutputStreamWriter(out,StandardCharsets.US_ASCII);

  CopyUtils.copy(in,writer);

  writer.flush();

  assertEquals(0,in.available(),"Not all bytes were read");

  assertEquals(inData.length,baout.size(),"Sizes differ");

  assertArrayEquals(inData,baout.toByteArray(),"Content differs");

}

Location: CopyUtilsTest.java

Content: 

@Test public void copy_inputStreamToWriterWithEncoding() throws Exception {

  final String inDataStr="data";

  final String charsetName="UTF-8";

  final StringWriter writer=new StringWriter();

  CopyUtils.copy(new StringInputStream(inDataStr,charsetName),writer,charsetName);

  assertEquals(inDataStr,writer.toString());

}

Location: CopyUtilsTest.java

Content: 

@SuppressWarnings("resource") @Test public void copy_readerToWriter() throws Exception {

  InputStream in=new ByteArrayInputStream(inData);

  in=new ThrowOnCloseInputStream(in);

  final Reader reader=new java.io.InputStreamReader(in,StandardCharsets.US_ASCII);

  final ByteArrayOutputStream baout=new ByteArrayOutputStream();

  final OutputStream out=new ThrowOnFlushAndCloseOutputStream(baout,false,true);

  final Writer writer=new java.io.OutputStreamWriter(out,StandardCharsets.US_ASCII);

  final int count=CopyUtils.copy(reader,writer);

  writer.flush();

  assertEquals(inData.length,count,"The number of characters returned by copy is wrong");

  assertEquals(inData.length,baout.size(),"Sizes differ");

  assertArrayEquals(inData,baout.toByteArray(),"Content differs");

}

Location: CopyUtilsTest.java

Content: 

@Test public void copy_stringToOutputStream() throws Exception {

  final String str=new String(inData,StandardCharsets.US_ASCII);

  final ByteArrayOutputStream baout=new ByteArrayOutputStream();

  final OutputStream out=new ThrowOnFlushAndCloseOutputStream(baout,false,true);

  CopyUtils.copy(str,out);

  assertEquals(inData.length,baout.size(),"Sizes differ");

  assertArrayEquals(inData,baout.toByteArray(),"Content differs");

}

Location: CopyUtilsTest.java

Content: 

@Test public void copy_stringToWriter() throws Exception {

  final String str=new String(inData,StandardCharsets.US_ASCII);

  final ByteArrayOutputStream baout=new ByteArrayOutputStream();

  final OutputStream out=new ThrowOnFlushAndCloseOutputStream(baout,false,true);

  final Writer writer=new java.io.OutputStreamWriter(out,StandardCharsets.US_ASCII);

  CopyUtils.copy(str,writer);

  writer.flush();

  assertEquals(inData.length,baout.size(),"Sizes differ");

  assertArrayEquals(inData,baout.toByteArray(),"Content differs");

}

Location: CopyUtilsTest.java

Content: 

@Test public void testCopy_byteArrayToWriterWithEncoding() throws Exception {

  final String inDataStr="data";

  final String charsetName="UTF-8";

  final StringWriter writer=new StringWriter();

  CopyUtils.copy(inDataStr.getBytes(charsetName),writer,charsetName);

  assertEquals(inDataStr,writer.toString());

}

