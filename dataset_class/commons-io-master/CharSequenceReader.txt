Location: CharSequenceReader.java

Content: 

/** 

 * Constructs a new instance with the specified character sequence.

 * @param charSequence The character sequence, may be {@code null}

 */

public CharSequenceReader(final CharSequence charSequence){

  this(charSequence,0);

}

Location: CharSequenceReader.java

Content: 

/** 

 * Constructs a new instance with a portion of the specified character sequence. <p> The start index is not strictly enforced to be within the bounds of the character sequence. This allows the character sequence to grow or shrink in size without risking any  {@link IndexOutOfBoundsException} to be thrown.Instead, if the character sequence grows smaller than the start index, this instance will act as if all characters have been read. </p>

 * @param charSequence The character sequence, may be {@code null}

 * @param start The start index in the character sequence, inclusive

 * @throws IllegalArgumentException if the start index is negative

 * @since 2.7

 */

public CharSequenceReader(final CharSequence charSequence,final int start){

  this(charSequence,start,Integer.MAX_VALUE);

}

Location: CharSequenceReader.java

Content: 

/** 

 * Constructs a new instance with a portion of the specified character sequence. <p> The start and end indexes are not strictly enforced to be within the bounds of the character sequence. This allows the character sequence to grow or shrink in size without risking any  {@link IndexOutOfBoundsException} to be thrown.Instead, if the character sequence grows smaller than the start index, this instance will act as if all characters have been read; if the character sequence grows smaller than the end, this instance will use the actual character sequence length. </p>

 * @param charSequence The character sequence, may be {@code null}

 * @param start The start index in the character sequence, inclusive

 * @param end The end index in the character sequence, exclusive

 * @throws IllegalArgumentException if the start index is negative, or if the end index is smaller than the start index

 * @since 2.7

 */

public CharSequenceReader(final CharSequence charSequence,final int start,final int end){

  if (start < 0) {

    throw new IllegalArgumentException("Start index is less than zero: " + start);

  }

  if (end < start) {

    throw new IllegalArgumentException("End index is less than start " + start + ": "+ end);

  }

  this.charSequence=charSequence != null ? charSequence : "";

  this.start=start;

  this.end=end;

  this.idx=start;

  this.mark=start;

}

Location: CharSequenceReader.java

Content: 

/** 

 * Returns the index in the character sequence to end reading at, taking into account its length.

 * @return The end index in the character sequence (exclusive).

 */

private int end(){

  return Math.min(charSequence.length(),end == null ? Integer.MAX_VALUE : end);

}

