Location: JobID.java

Content: 

/** 

 * Downgrade a new JobID to an old one

 * @param old a new or old JobID

 * @return either old or a new JobID build to match old

 */

public static JobID downgrade(org.apache.hadoop.mapreduce.JobID old){

  if (old instanceof JobID) {

    return (JobID)old;

  }

 else {

    return new JobID(old.getJtIdentifier(),old.getId());

  }

}

Location: JobID.java

Content: 

@Deprecated static StringBuilder getJobIDsPatternWOPrefix(String jtIdentifier,Integer jobId){

  StringBuilder builder=new StringBuilder();

  if (jtIdentifier != null) {

    builder.append(jtIdentifier);

  }

 else {

    builder.append("[^").append(SEPARATOR).append("]*");

  }

  builder.append(SEPARATOR).append(jobId != null ? idFormat.format(jobId) : "[0-9]*");

  return builder;

}

Location: JobID.java

Content: 

/** 

 * Returns a regex pattern which matches task IDs. Arguments can  be given null, in which case that part of the regex will be generic.   For example to obtain a regex matching <i>any job</i>  run on the jobtracker started at <i>200707121733</i>, we would use : <pre>  JobID.getTaskIDsPattern("200707121733", null); </pre> which will return : <pre> "job_200707121733_[0-9]*" </pre> 

 * @param jtIdentifier jobTracker identifier, or null

 * @param jobId job number, or null

 * @return a regex pattern matching JobIDs

 */

@Deprecated public static String getJobIDsPattern(String jtIdentifier,Integer jobId){

  StringBuilder builder=new StringBuilder(JOB).append(SEPARATOR);

  builder.append(getJobIDsPatternWOPrefix(jtIdentifier,jobId));

  return builder.toString();

}

Location: JobID.java

Content: 

public String getJtIdentifier(){

  return jtIdentifier.toString();

}

Location: JobID.java

Content: 

public JobID(){

  jtIdentifier=new Text();

}

Location: JobID.java

Content: 

/** 

 * Constructs a JobID object 

 * @param jtIdentifier jobTracker identifier

 * @param id job number

 */

public JobID(String jtIdentifier,int id){

  super(id);

  this.jtIdentifier=new Text(jtIdentifier);

}

Location: JobID.java

Content: 

@Deprecated public static JobID read(DataInput in) throws IOException {

  JobID jobId=new JobID();

  jobId.readFields(in);

  return jobId;

}

