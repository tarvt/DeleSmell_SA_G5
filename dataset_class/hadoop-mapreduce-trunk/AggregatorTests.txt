Location: AggregatorTests.java

Content: 

public ArrayList<Entry<Text,Text>> generateKeyValPairs(Object key,Object val){

  ArrayList<Entry<Text,Text>> retv=new ArrayList<Entry<Text,Text>>();

  String[] words=val.toString().split(" ");

  String countType;

  String id;

  Entry<Text,Text> e;

  for (  String word : words) {

    long numVal=Long.parseLong(word);

    countType=LONG_VALUE_SUM;

    id="count_" + word;

    e=generateEntry(countType,id,ONE);

    if (e != null) {

      retv.add(e);

    }

    countType=LONG_VALUE_MAX;

    id="max";

    e=generateEntry(countType,id,new Text(word));

    if (e != null) {

      retv.add(e);

    }

    countType=LONG_VALUE_MIN;

    id="min";

    e=generateEntry(countType,id,new Text(word));

    if (e != null) {

      retv.add(e);

    }

    countType=STRING_VALUE_MAX;

    id="value_as_string_max";

    e=generateEntry(countType,id,new Text("" + numVal));

    if (e != null) {

      retv.add(e);

    }

    countType=STRING_VALUE_MIN;

    id="value_as_string_min";

    e=generateEntry(countType,id,new Text("" + numVal));

    if (e != null) {

      retv.add(e);

    }

    countType=UNIQ_VALUE_COUNT;

    id="uniq_count";

    e=generateEntry(countType,id,new Text(word));

    if (e != null) {

      retv.add(e);

    }

    countType=VALUE_HISTOGRAM;

    id="histogram";

    e=generateEntry(countType,id,new Text(word));

    if (e != null) {

      retv.add(e);

    }

  }

  return retv;

}

