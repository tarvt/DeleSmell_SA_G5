Location: BasicTypeSorterBase.java

Content: 

private void grow(){

  int currLength=0;

  if (startOffsets != null) {

    currLength=startOffsets.length;

  }

  int newLength=(int)(currLength * 1.1) + 1;

  startOffsets=grow(startOffsets,newLength);

  keyLengths=grow(keyLengths,newLength);

  valueLengths=grow(valueLengths,newLength);

  pointers=grow(pointers,newLength);

}

Location: BasicTypeSorterBase.java

Content: 

private int[] grow(int[] old,int newLength){

  int[] result=new int[newLength];

  if (old != null) {

    System.arraycopy(old,0,result,0,old.length);

  }

  return result;

}

Location: BasicTypeSorterBase.java

Content: 

public MRSortResultIterator(OutputBuffer keyValBuffer,int[] pointers,int[] startOffsets,int[] keyLengths,int[] valLengths){

  this.count=pointers.length;

  this.pointers=pointers;

  this.startOffsets=startOffsets;

  this.keyLengths=keyLengths;

  this.valLengths=valLengths;

  this.keyValBuffer=keyValBuffer;

}

