Location: Montgomery.java

Content: 

/** 

 * Compute 2^y mod N for N odd. 

 */

long mod(final long y){

  long p=R - N;

  long x=p << 1;

  if (x >= N)   x-=N;

  for (long mask=Long.highestOneBit(y); mask > 0; mask>>>=1) {

    p=product.m(p,p);

    if ((mask & y) != 0)     p=product.m(p,x);

  }

  return product.m(p,1);

}

