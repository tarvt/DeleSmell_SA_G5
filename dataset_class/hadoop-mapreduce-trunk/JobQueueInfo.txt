Location: JobQueueInfo.java

Content: 

/** 

 * Add a child  {@link JobQueueInfo} to this {@link JobQueueInfo}. Modify the fully-qualified name of the child  {@link JobQueueInfo} to reflect thehierarchy. Only for testing.

 * @param child

 */

void addChild(JobQueueInfo child){

  List<JobQueueInfo> children=getChildren();

  children.add(child);

  setChildren(children);

}

Location: JobQueueInfo.java

Content: 

String getQueueState(){

  return super.getState().toString();

}

Location: JobQueueInfo.java

Content: 

/** 

 * Default constructor for Job Queue Info.

 */

public JobQueueInfo(){

  super();

}

Location: JobQueueInfo.java

Content: 

JobQueueInfo(QueueInfo queue){

  this(queue.getQueueName(),queue.getSchedulingInfo());

  setQueueState(queue.getState().getStateName());

  setQueueChildren(queue.getQueueChildren());

  setProperties(queue.getProperties());

  setJobStatuses(queue.getJobStatuses());

}

Location: JobQueueInfo.java

Content: 

/** 

 * Construct a new JobQueueInfo object using the queue name and the scheduling information passed.

 * @param queueName Name of the job queue

 * @param schedulingInfo Scheduling Information associated with the jobqueue

 */

public JobQueueInfo(String queueName,String schedulingInfo){

  super(queueName,schedulingInfo);

}

Location: JobQueueInfo.java

Content: 

/** 

 * Remove the child from this  {@link JobQueueInfo}. This also resets the queue-name of the child from a fully-qualified name to a simple queue name. Only for testing.

 * @param child

 */

void removeChild(JobQueueInfo child){

  List<JobQueueInfo> children=getChildren();

  children.remove(child);

  setChildren(children);

}

Location: JobQueueInfo.java

Content: 

protected void setJobStatuses(org.apache.hadoop.mapreduce.JobStatus[] stats){

  super.setJobStatuses(stats);

}

Location: JobQueueInfo.java

Content: 

/** 

 * Set the state of the queue

 * @param state state of the queue.

 */

protected void setQueueState(String state){

  super.setState(QueueState.getState(state));

}

