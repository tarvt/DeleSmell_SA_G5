Location: TestJobName.java

Content: 

public void testComplexName() throws Exception {

  OutputStream os=getFileSystem().create(new Path(getInputDir(),"text.txt"));

  Writer wr=new OutputStreamWriter(os);

  wr.write("b a\n");

  wr.close();

  JobConf conf=createJobConf();

  conf.setJobName("[name][some other value that gets truncated internally that this test attempts to aggravate]");

  conf.setInputFormat(TextInputFormat.class);

  conf.setOutputKeyClass(LongWritable.class);

  conf.setOutputValueClass(Text.class);

  conf.setMapperClass(IdentityMapper.class);

  FileInputFormat.setInputPaths(conf,getInputDir());

  FileOutputFormat.setOutputPath(conf,getOutputDir());

  JobClient.runJob(conf);

  Path[] outputFiles=FileUtil.stat2Paths(getFileSystem().listStatus(getOutputDir(),new Utils.OutputFileUtils.OutputFilesFilter()));

  assertEquals(1,outputFiles.length);

  InputStream is=getFileSystem().open(outputFiles[0]);

  BufferedReader reader=new BufferedReader(new InputStreamReader(is));

  assertEquals("0\tb a",reader.readLine());

  assertNull(reader.readLine());

  reader.close();

}

Location: TestJobName.java

Content: 

public void testComplexNameWithRegex() throws Exception {

  OutputStream os=getFileSystem().create(new Path(getInputDir(),"text.txt"));

  Writer wr=new OutputStreamWriter(os);

  wr.write("b a\n");

  wr.close();

  JobConf conf=createJobConf();

  conf.setJobName("name \\Evalue]");

  conf.setInputFormat(TextInputFormat.class);

  conf.setOutputKeyClass(LongWritable.class);

  conf.setOutputValueClass(Text.class);

  conf.setMapperClass(IdentityMapper.class);

  FileInputFormat.setInputPaths(conf,getInputDir());

  FileOutputFormat.setOutputPath(conf,getOutputDir());

  JobClient.runJob(conf);

  Path[] outputFiles=FileUtil.stat2Paths(getFileSystem().listStatus(getOutputDir(),new Utils.OutputFileUtils.OutputFilesFilter()));

  assertEquals(1,outputFiles.length);

  InputStream is=getFileSystem().open(outputFiles[0]);

  BufferedReader reader=new BufferedReader(new InputStreamReader(is));

  assertEquals("0\tb a",reader.readLine());

  assertNull(reader.readLine());

  reader.close();

}

