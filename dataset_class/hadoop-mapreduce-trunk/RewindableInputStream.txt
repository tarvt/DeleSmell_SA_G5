Location: RewindableInputStream.java

Content: 

@Override public int read() throws IOException {

  return input.read();

}

Location: RewindableInputStream.java

Content: 

@Override public int read(byte[] buffer,int offset,int length) throws IOException {

  return input.read(buffer,offset,length);

}

Location: RewindableInputStream.java

Content: 

public InputStream rewind() throws IOException {

  try {

    input.reset();

    return this;

  }

 catch (  IOException e) {

    throw new IOException("Unable to rewind the stream",e);

  }

}

Location: RewindableInputStream.java

Content: 

/** 

 * Constructor.

 * @param input

 */

public RewindableInputStream(InputStream input){

  this(input,1024 * 1024);

}

Location: RewindableInputStream.java

Content: 

/** 

 * Constructor

 * @param input input stream.

 * @param maxBytesToRemember Maximum number of bytes we need to remember at the beginning of the stream. If  {@link #rewind()} is called after so many bytes areread from the stream,  {@link #rewind()} would fail.

 */

public RewindableInputStream(InputStream input,int maxBytesToRemember){

  this.input=new BufferedInputStream(input,maxBytesToRemember);

  this.input.mark(maxBytesToRemember);

}

