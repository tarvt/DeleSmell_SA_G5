Location: KeyFieldBasedPartitioner.java

Content: 

/** 

 * Get the  {@link KeyFieldBasedPartitioner} options

 */

public String getKeyFieldPartitionerOption(JobContext job){

  return job.getConfiguration().get(PARTITIONER_OPTIONS);

}

Location: KeyFieldBasedPartitioner.java

Content: 

protected int getPartition(int hash,int numReduceTasks){

  return (hash & Integer.MAX_VALUE) % numReduceTasks;

}

Location: KeyFieldBasedPartitioner.java

Content: 

protected int hashCode(byte[] b,int start,int end,int currentHash){

  for (int i=start; i <= end; i++) {

    currentHash=31 * currentHash + b[i];

  }

  return currentHash;

}

Location: KeyFieldBasedPartitioner.java

Content: 

/** 

 * Set the  {@link KeyFieldBasedPartitioner} options used for {@link Partitioner}

 * @param keySpec the key specification of the form -k pos1[,pos2], where,pos is of the form f[.c][opts], where f is the number of the key field to use, and c is the number of the first character from the beginning of the field. Fields and character posns are numbered  starting with 1; a character position of zero in pos2 indicates the field's last character. If '.c' is omitted from pos1, it defaults to 1 (the beginning of the field); if omitted from pos2, it defaults to 0  (the end of the field).

 */

public void setKeyFieldPartitionerOptions(Job job,String keySpec){

  job.getConfiguration().set(PARTITIONER_OPTIONS,keySpec);

}

