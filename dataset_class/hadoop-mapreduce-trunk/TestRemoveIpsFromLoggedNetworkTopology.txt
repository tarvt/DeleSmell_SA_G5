Location: TestRemoveIpsFromLoggedNetworkTopology.java

Content: 

@Test public void testIpRemoval() throws IOException {

  final Configuration conf=new Configuration();

  final FileSystem lfs=FileSystem.getLocal(conf);

  final Path rootInputDir=new Path(System.getProperty("src.test.data","data")).makeQualified(lfs.getUri(),lfs.getWorkingDirectory());

  final LoggedNetworkTopology topoWithIps=new ClusterTopologyReader(new Path(rootInputDir,"topo-with-numeric-ips.json"),conf).get();

  final LoggedNetworkTopology topoWithoutIps=new ClusterTopologyReader(new Path(rootInputDir,"topo-without-numeric-ips.json"),conf).get();

  try {

    topoWithIps.deepCompare(topoWithoutIps,new TreePath(null,"<root>"));

    Assert.fail("Expecting two topologies to differ");

  }

 catch (  DeepInequalityException e) {

  }

  SimulatorEngine.removeIpHosts(topoWithIps);

  try {

    topoWithIps.deepCompare(topoWithoutIps,new TreePath(null,"<root>"));

  }

 catch (  DeepInequalityException e) {

    Assert.fail("Expecting two topologies to be equal");

  }

}

Location: TestRemoveIpsFromLoggedNetworkTopology.java

Content: 

@Test public void testIsIPAddress(){

  final String[] positives={"123.13.42.255","123.01.0.255","000.001.002.020","123\\.13\\.42\\.255","0.0.0.0","255.255.255.255","1080:0:0:0:8:800:200C:417A","1080:01:020:3:8:0800:200C:417A","1080:01:002:0003:080:0800:0200:417A","0:0:0:0:0:0:0:0","ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff"};

  final String[] negatives={"node.megatron.com","13.42.255","123.13.42.255.10","123.256.42.255","123.13.42.255.weird.com","1080:0:0:0:8:200C:417A","1080:0:0:0:1:8:800:200C:417A","1080A:0:0:0:8:800:200C:417A","1080:0:0:0:8:800:200G:417A"};

  for (  String s : positives) {

    Assert.assertTrue(s,SimulatorEngine.isIPAddress(s));

  }

  for (  String s : negatives) {

    Assert.assertFalse(s,SimulatorEngine.isIPAddress(s));

  }

}

