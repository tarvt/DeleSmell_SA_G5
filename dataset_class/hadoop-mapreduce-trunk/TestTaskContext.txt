Location: TestTaskContext.java

Content: 

@AfterClass public static void cleanup() throws Exception {

  fs.delete(testRootTempDir,true);

}

Location: TestTaskContext.java

Content: 

/** 

 * Tests context.setStatus method.

 * @throws IOException

 * @throws InterruptedException

 * @throws ClassNotFoundException

 */

@Test public void testContextStatus() throws IOException, InterruptedException, ClassNotFoundException {

  Path test=new Path(testRootTempDir,"testContextStatus");

  int numMaps=1;

  Job job=MapReduceTestUtil.createJob(createJobConf(),new Path(test,"in"),new Path(test,"out"),numMaps,0);

  job.setMapperClass(MyMapper.class);

  job.waitForCompletion(true);

  assertTrue("Job failed",job.isSuccessful());

  TaskReport[] reports=job.getTaskReports(TaskType.MAP);

  assertEquals(numMaps,reports.length);

  assertEquals(myStatus,reports[0].getState());

  int numReduces=1;

  job=MapReduceTestUtil.createJob(createJobConf(),new Path(test,"in"),new Path(test,"out"),numMaps,numReduces);

  job.setMapperClass(DataCopyMapper.class);

  job.setReducerClass(DataCopyReducer.class);

  job.setMapOutputKeyClass(Text.class);

  job.setMapOutputValueClass(Text.class);

  job.setOutputKeyClass(Text.class);

  job.setOutputValueClass(Text.class);

  job.setMaxMapAttempts(1);

  job.setMaxReduceAttempts(0);

  job.waitForCompletion(true);

  assertTrue("Job failed",job.isSuccessful());

  reports=job.getTaskReports(TaskType.MAP);

  assertEquals(numMaps,reports.length);

  assertEquals("map > sort",reports[0].getState());

  reports=job.getTaskReports(TaskType.REDUCE);

  assertEquals(numReduces,reports.length);

  assertEquals("reduce > reduce",reports[0].getState());

}

Location: TestTaskContext.java

Content: 

/** 

 * Tests new MapReduce map task's context.getProgress() method.

 * @throws IOException

 * @throws InterruptedException

 * @throws ClassNotFoundException

 */

public void testMapContextProgress() throws IOException, InterruptedException, ClassNotFoundException {

  int numMaps=1;

  Path test=new Path(testRootTempDir,"testMapContextProgress");

  Job job=MapReduceTestUtil.createJob(createJobConf(),new Path(test,"in"),new Path(test,"out"),numMaps,0,INPUT);

  job.setMapperClass(ProgressCheckerMapper.class);

  job.setMapOutputKeyClass(Text.class);

  job.setMaxMapAttempts(1);

  job.waitForCompletion(true);

  assertTrue("Job failed",job.isSuccessful());

}

Location: TestTaskContext.java

Content: 

/** 

 * Tests new MapReduce reduce task's context.getProgress() method.

 * @throws IOException

 * @throws InterruptedException

 * @throws ClassNotFoundException

 */

@Test public void testReduceContextProgress() throws IOException, InterruptedException, ClassNotFoundException {

  int numTasks=1;

  Path test=new Path(testRootTempDir,"testReduceContextProgress");

  Job job=MapReduceTestUtil.createJob(createJobConf(),new Path(test,"in"),new Path(test,"out"),numTasks,numTasks,INPUT);

  job.setMapperClass(ProgressCheckerMapper.class);

  job.setReducerClass(ProgressCheckerReducer.class);

  job.setMapOutputKeyClass(Text.class);

  job.setMaxMapAttempts(1);

  job.setMaxReduceAttempts(1);

  job.waitForCompletion(true);

  assertTrue("Job failed",job.isSuccessful());

}

Location: TestTaskContext.java

Content: 

public TestTaskContext() throws IOException {

  super(HadoopTestCase.CLUSTER_MR,HadoopTestCase.LOCAL_FS,1,1);

}

