Location: Logalyzer.java

Content: 

/** 

 * doAnalyze: 

 * @param inputFilesDirectory : Directory containing the files to be analyzed.

 * @param outputDirectory : Directory to store analysis (output).

 * @param grepPattern : Pattern to *grep* for.

 * @param sortColumns : Sort specification for output.

 * @param columnSeparator : Column separator.

 * @throws IOException

 */

public void doAnalyze(String inputFilesDirectory,String outputDirectory,String grepPattern,String sortColumns,String columnSeparator) throws IOException {

  Path grepInput=new Path(inputFilesDirectory);

  Path analysisOutput=null;

  if (outputDirectory.equals("")) {

    analysisOutput=new Path(inputFilesDirectory,"logalyzer_" + Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));

  }

 else {

    analysisOutput=new Path(outputDirectory);

  }

  JobConf grepJob=new JobConf(fsConfig);

  grepJob.setJobName("logalyzer-grep-sort");

  FileInputFormat.setInputPaths(grepJob,grepInput);

  grepJob.setInputFormat(TextInputFormat.class);

  grepJob.setMapperClass(LogRegexMapper.class);

  grepJob.set(RegexMapper.PATTERN,grepPattern);

  grepJob.set(SORT_COLUMNS,sortColumns);

  grepJob.set(COLUMN_SEPARATOR,columnSeparator);

  grepJob.setCombinerClass(LongSumReducer.class);

  grepJob.setReducerClass(LongSumReducer.class);

  FileOutputFormat.setOutputPath(grepJob,analysisOutput);

  grepJob.setOutputFormat(TextOutputFormat.class);

  grepJob.setOutputKeyClass(Text.class);

  grepJob.setOutputValueClass(LongWritable.class);

  grepJob.setOutputKeyComparatorClass(LogComparator.class);

  grepJob.setNumReduceTasks(1);

  JobClient.runJob(grepJob);

}

Location: Logalyzer.java

Content: 

/** 

 * doArchive: Workhorse function to archive log-files.

 * @param logListURI : The uri which will serve list of log-files to archive.

 * @param archiveDirectory : The directory to store archived logfiles.

 * @throws IOException

 */

public void doArchive(String logListURI,String archiveDirectory) throws IOException {

  String destURL=FileSystem.getDefaultUri(fsConfig) + archiveDirectory;

  DistCp.copy(new JobConf(fsConfig),logListURI,destURL,null,true,false);

}

