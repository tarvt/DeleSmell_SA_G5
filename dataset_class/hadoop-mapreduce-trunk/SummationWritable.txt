Location: SummationWritable.java

Content: 

/** 

 * {@inheritDoc} 

 */

@Override public int compareTo(SummationWritable that){

  return this.sigma.compareTo(that.sigma);

}

Location: SummationWritable.java

Content: 

/** 

 * Read sigma from conf 

 */

public static Summation read(Class<?> clazz,Configuration conf){

  return Summation.valueOf(conf.get(clazz.getSimpleName() + ".sigma"));

}

Location: SummationWritable.java

Content: 

public SummationWritable(){

}

Location: SummationWritable.java

Content: 

SummationWritable(Summation sigma){

  this.sigma=sigma;

}

Location: SummationWritable.java

Content: 

/** 

 * Write sigma to conf 

 */

public static void write(Summation sigma,Class<?> clazz,Configuration conf){

  conf.set(clazz.getSimpleName() + ".sigma",sigma.toString());

}

Location: SummationWritable.java

Content: 

/** 

 * Write sigma to DataOutput 

 */

public static void write(Summation sigma,DataOutput out) throws IOException {

  ArithmeticProgressionWritable.write(sigma.N,out);

  ArithmeticProgressionWritable.write(sigma.E,out);

  final Double v=sigma.getValue();

  if (v == null)   out.writeBoolean(false);

 else {

    out.writeBoolean(true);

    out.writeDouble(v);

  }

}

