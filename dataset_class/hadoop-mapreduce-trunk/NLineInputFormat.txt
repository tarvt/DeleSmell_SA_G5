Location: NLineInputFormat.java

Content: 

/** 

 * Get the number of lines per split

 * @param job the job

 * @return the number of lines per split

 */

public static int getNumLinesPerSplit(JobContext job){

  return job.getConfiguration().getInt(LINES_PER_MAP,1);

}

Location: NLineInputFormat.java

Content: 

public static List<FileSplit> getSplitsForFile(FileStatus status,Configuration conf,int numLinesPerSplit) throws IOException {

  List<FileSplit> splits=new ArrayList<FileSplit>();

  Path fileName=status.getPath();

  if (status.isDirectory()) {

    throw new IOException("Not a file: " + fileName);

  }

  FileSystem fs=fileName.getFileSystem(conf);

  LineReader lr=null;

  try {

    FSDataInputStream in=fs.open(fileName);

    lr=new LineReader(in,conf);

    Text line=new Text();

    int numLines=0;

    long begin=0;

    long length=0;

    int num=-1;

    while ((num=lr.readLine(line)) > 0) {

      numLines++;

      length+=num;

      if (numLines == numLinesPerSplit) {

        if (begin == 0) {

          splits.add(new FileSplit(fileName,begin,length - 1,new String[]{}));

        }

 else {

          splits.add(new FileSplit(fileName,begin - 1,length,new String[]{}));

        }

        begin+=length;

        length=0;

        numLines=0;

      }

    }

    if (numLines != 0) {

      splits.add(new FileSplit(fileName,begin,length,new String[]{}));

    }

  }

  finally {

    if (lr != null) {

      lr.close();

    }

  }

  return splits;

}

Location: NLineInputFormat.java

Content: 

/** 

 * Set the number of lines per split

 * @param job the job to modify

 * @param numLines the number of lines per split

 */

public static void setNumLinesPerSplit(Job job,int numLines){

  job.getConfiguration().setInt(LINES_PER_MAP,numLines);

}

