Location: TaskStatistics.java

Content: 

public double getDoubleValue(Enum key){

  if (this._task.get(key) == null) {

    return (double)0;

  }

 else {

    return Double.parseDouble(this._task.get(key));

  }

}

Location: TaskStatistics.java

Content: 

public long getLongValue(Enum key){

  if (this._task.get(key) == null) {

    return (long)0;

  }

 else {

    return Long.parseLong(this._task.get(key));

  }

}

Location: TaskStatistics.java

Content: 

public String getStringValue(Enum key){

  if (this._task.get(key) == null) {

    return "";

  }

 else {

    return this._task.get(key);

  }

}

Location: TaskStatistics.java

Content: 

public void printKeys(){

  java.util.Set<Map.Entry<Enum,String>> task=this._task.entrySet();

  int size=task.size();

  java.util.Iterator<Map.Entry<Enum,String>> kv=task.iterator();

  for (int i=0; i < size; i++) {

    Map.Entry<Enum,String> entry=(Map.Entry<Enum,String>)kv.next();

    Enum key=entry.getKey();

    String value=entry.getValue();

    System.out.println("Key:<" + key.name() + ">, value:<"+ value+ ">");

  }

}

Location: TaskStatistics.java

Content: 

public void setValue(Enum key,double value){

  this._task.put(key,Double.toString(value));

}

Location: TaskStatistics.java

Content: 

public void setValue(Enum key,long value){

  this._task.put(key,Long.toString(value));

}

Location: TaskStatistics.java

Content: 

public void setValue(Enum key,String value){

  this._task.put(key,value);

}

