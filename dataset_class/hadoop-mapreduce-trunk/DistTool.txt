Location: DistTool.java

Content: 

/** 

 * Sanity check for source 

 */

protected static void checkSource(Configuration conf,List<Path> srcs) throws InvalidInputException {

  List<IOException> ioes=new ArrayList<IOException>();

  for (  Path p : srcs) {

    try {

      if (!p.getFileSystem(conf).exists(p)) {

        ioes.add(new FileNotFoundException("Source " + p + " does not exist."));

      }

    }

 catch (    IOException e) {

      ioes.add(e);

    }

  }

  if (!ioes.isEmpty()) {

    throw new InvalidInputException(ioes);

  }

}

Location: DistTool.java

Content: 

protected DistTool(Configuration conf){

  setConf(conf);

}

Location: DistTool.java

Content: 

protected static List<String> readFile(Configuration conf,Path inputfile) throws IOException {

  List<String> result=new ArrayList<String>();

  FileSystem fs=inputfile.getFileSystem(conf);

  BufferedReader input=null;

  try {

    input=new BufferedReader(new InputStreamReader(fs.open(inputfile)));

    for (String line; (line=input.readLine()) != null; ) {

      result.add(line);

    }

  }

  finally {

    input.close();

  }

  return result;

}

Location: DistTool.java

Content: 

protected static String readString(DataInput in) throws IOException {

  if (in.readBoolean()) {

    return Text.readString(in);

  }

  return null;

}

Location: DistTool.java

Content: 

protected static void writeString(DataOutput out,String s) throws IOException {

  boolean b=s != null;

  out.writeBoolean(b);

  if (b) {

    Text.writeString(out,s);

  }

}

