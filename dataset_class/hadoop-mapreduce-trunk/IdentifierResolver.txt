Location: IdentifierResolver.java

Content: 

/** 

 * Returns the resolved  {@link InputWriter} class.

 */

public Class<? extends InputWriter> getInputWriterClass(){

  return inputWriterClass;

}

Location: IdentifierResolver.java

Content: 

/** 

 * Returns the resolved  {@link OutputReader} class.

 */

public Class<? extends OutputReader> getOutputReaderClass(){

  return outputReaderClass;

}

Location: IdentifierResolver.java

Content: 

/** 

 * Resolves a given identifier. This method has to be called before calling any of the getters.

 */

public void resolve(String identifier){

  if (identifier.equalsIgnoreCase(RAW_BYTES_ID)) {

    setInputWriterClass(RawBytesInputWriter.class);

    setOutputReaderClass(RawBytesOutputReader.class);

    setOutputKeyClass(BytesWritable.class);

    setOutputValueClass(BytesWritable.class);

  }

 else   if (identifier.equalsIgnoreCase(TYPED_BYTES_ID)) {

    setInputWriterClass(TypedBytesInputWriter.class);

    setOutputReaderClass(TypedBytesOutputReader.class);

    setOutputKeyClass(TypedBytesWritable.class);

    setOutputValueClass(TypedBytesWritable.class);

  }

 else {

    setInputWriterClass(TextInputWriter.class);

    setOutputReaderClass(TextOutputReader.class);

    setOutputKeyClass(Text.class);

    setOutputValueClass(Text.class);

  }

}

Location: IdentifierResolver.java

Content: 

/** 

 * Sets the  {@link InputWriter} class.

 */

protected void setInputWriterClass(Class<? extends InputWriter> inputWriterClass){

  this.inputWriterClass=inputWriterClass;

}

Location: IdentifierResolver.java

Content: 

/** 

 * Sets the  {@link OutputReader} class.

 */

protected void setOutputReaderClass(Class<? extends OutputReader> outputReaderClass){

  this.outputReaderClass=outputReaderClass;

}

