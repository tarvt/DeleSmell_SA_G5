Location: JobStory.java

Content: 

/** 

 * Get the input splits for the job.

 * @return the input splits for the job

 */

public InputSplit[] getInputSplits();

Location: JobStory.java

Content: 

/** 

 * Get the  {@link JobConf} for the job.

 * @return the <code>JobConf</code> for the job

 */

public JobConf getJobConf();

Location: JobStory.java

Content: 

/** 

 * Get the job ID

 * @return the job ID

 */

public JobID getJobID();

Location: JobStory.java

Content: 

/** 

 * Get  {@link TaskAttemptInfo} for a given task-attempt, considering impactof locality.

 * @param taskNumber Partition number of the task-attempt

 * @param taskAttemptNumber Attempt number of the task

 * @param locality Data locality of the task as scheduled in simulation

 * @return the <code>TaskAttemptInfo</code> for the given task-attempt

 */

public TaskAttemptInfo getMapTaskAttemptInfoAdjusted(int taskNumber,int taskAttemptNumber,int locality);

Location: JobStory.java

Content: 

/** 

 * Get the number of maps in the  {@link JobStory}.

 * @return the number of maps in the <code>Job</code>

 */

public int getNumberMaps();

Location: JobStory.java

Content: 

/** 

 * Get the number of reduce in the  {@link JobStory}.

 * @return the number of reduces in the <code>Job</code>

 */

public int getNumberReduces();

Location: JobStory.java

Content: 

/** 

 * Get the outcome of the job execution.

 * @return The outcome of the job execution.

 */

public Values getOutcome();

Location: JobStory.java

Content: 

/** 

 * Get the queue where the job is submitted.

 * @return the queue where the job is submitted.

 */

public String getQueueName();

Location: JobStory.java

Content: 

/** 

 * Get the job submission time.

 * @return the job submission time

 */

public long getSubmissionTime();

Location: JobStory.java

Content: 

/** 

 * Get  {@link TaskAttemptInfo} for a given task-attempt, without regard toimpact of locality (e.g. not needed to make scheduling decisions).

 * @param taskType {@link TaskType} of the task-attempt

 * @param taskNumber Partition number of the task-attempt

 * @param taskAttemptNumber Attempt number of the task

 * @return the <code>TaskAttemptInfo</code> for the given task-attempt

 */

public TaskAttemptInfo getTaskAttemptInfo(TaskType taskType,int taskNumber,int taskAttemptNumber);

Location: JobStory.java

Content: 

/** 

 * Get  {@link TaskInfo} for a given task.

 * @param taskType {@link TaskType} of the task

 * @param taskNumber Partition number of the task

 * @return the <code>TaskInfo</code> for the given task

 */

public TaskInfo getTaskInfo(TaskType taskType,int taskNumber);

Location: JobStory.java

Content: 

/** 

 * Get the user who ran the job.

 * @return the user who ran the job

 */

public String getUser();

