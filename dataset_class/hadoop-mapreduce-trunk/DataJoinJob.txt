Location: DataJoinJob.java

Content: 

public static JobConf createDataJoinJob(String args[]) throws IOException {

  String inputDir=args[0];

  String outputDir=args[1];

  Class inputFormat=SequenceFileInputFormat.class;

  if (args[2].compareToIgnoreCase("text") != 0) {

    System.out.println("Using SequenceFileInputFormat: " + args[2]);

  }

 else {

    System.out.println("Using TextInputFormat: " + args[2]);

    inputFormat=TextInputFormat.class;

  }

  int numOfReducers=Integer.parseInt(args[3]);

  Class mapper=getClassByName(args[4]);

  Class reducer=getClassByName(args[5]);

  Class mapoutputValueClass=getClassByName(args[6]);

  Class outputFormat=TextOutputFormat.class;

  Class outputValueClass=Text.class;

  if (args[7].compareToIgnoreCase("text") != 0) {

    System.out.println("Using SequenceFileOutputFormat: " + args[7]);

    outputFormat=SequenceFileOutputFormat.class;

    outputValueClass=getClassByName(args[7]);

  }

 else {

    System.out.println("Using TextOutputFormat: " + args[7]);

  }

  long maxNumOfValuesPerGroup=100;

  String jobName="";

  if (args.length > 8) {

    maxNumOfValuesPerGroup=Long.parseLong(args[8]);

  }

  if (args.length > 9) {

    jobName=args[9];

  }

  Configuration defaults=new Configuration();

  JobConf job=new JobConf(defaults,DataJoinJob.class);

  job.setJobName("DataJoinJob: " + jobName);

  FileSystem fs=FileSystem.get(defaults);

  fs.delete(new Path(outputDir),true);

  FileInputFormat.setInputPaths(job,inputDir);

  job.setInputFormat(inputFormat);

  job.setMapperClass(mapper);

  FileOutputFormat.setOutputPath(job,new Path(outputDir));

  job.setOutputFormat(outputFormat);

  SequenceFileOutputFormat.setOutputCompressionType(job,SequenceFile.CompressionType.BLOCK);

  job.setMapOutputKeyClass(Text.class);

  job.setMapOutputValueClass(mapoutputValueClass);

  job.setOutputKeyClass(Text.class);

  job.setOutputValueClass(outputValueClass);

  job.setReducerClass(reducer);

  job.setNumMapTasks(1);

  job.setNumReduceTasks(numOfReducers);

  job.setLong("datajoin.maxNumOfValuesPerGroup",maxNumOfValuesPerGroup);

  return job;

}

Location: DataJoinJob.java

Content: 

public static Class getClassByName(String className){

  Class retv=null;

  try {

    ClassLoader classLoader=Thread.currentThread().getContextClassLoader();

    retv=Class.forName(className,true,classLoader);

  }

 catch (  Exception e) {

    throw new RuntimeException(e);

  }

  return retv;

}

