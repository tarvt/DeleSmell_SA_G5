Location: TextInputWriter.java

Content: 

@Override public void initialize(PipeMapRed pipeMapRed) throws IOException {

  super.initialize(pipeMapRed);

  clientOut=pipeMapRed.getClientOutput();

  inputSeparator=pipeMapRed.getInputSeparator();

}

Location: TextInputWriter.java

Content: 

@Override public void writeKey(Object key) throws IOException {

  writeUTF8(key);

  clientOut.write(inputSeparator);

}

Location: TextInputWriter.java

Content: 

private void writeUTF8(Object object) throws IOException {

  byte[] bval;

  int valSize;

  if (object instanceof BytesWritable) {

    BytesWritable val=(BytesWritable)object;

    bval=val.getBytes();

    valSize=val.getLength();

  }

 else   if (object instanceof Text) {

    Text val=(Text)object;

    bval=val.getBytes();

    valSize=val.getLength();

  }

 else {

    String sval=object.toString();

    bval=sval.getBytes("UTF-8");

    valSize=bval.length;

  }

  clientOut.write(bval,0,valSize);

}

Location: TextInputWriter.java

Content: 

@Override public void writeValue(Object value) throws IOException {

  writeUTF8(value);

  clientOut.write('\n');

}

