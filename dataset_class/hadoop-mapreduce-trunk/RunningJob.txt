Location: RunningJob.java

Content: 

/** 

 * Get events indicating completion (success/failure) of component tasks.

 * @param startFrom index to start fetching events from

 * @return an array of {@link TaskCompletionEvent}s

 * @throws IOException

 */

public TaskCompletionEvent[] getTaskCompletionEvents(int startFrom) throws IOException ;

Location: RunningJob.java

Content: 

/** 

 * @deprecated Applications should rather use {@link #killTask(TaskAttemptID,boolean)}

 */

@Deprecated public void killTask(String taskId,boolean shouldFail) throws IOException ;

Location: RunningJob.java

Content: 

/** 

 * Set the priority of a running job.

 * @param priority the new priority for the job.

 * @throws IOException

 */

public void setJobPriority(String priority) throws IOException ;

Location: RunningJob.java

Content: 

/** 

 * Blocks until the job is complete.

 * @throws IOException

 */

public void waitForCompletion() throws IOException ;

