Location: TestParallelInitialization.java

Content: 

protected TaskScheduler createTaskScheduler(){

  return new JobQueueTaskScheduler();

}

Location: TestParallelInitialization.java

Content: 

static void resetCounters(){

  jobCounter=0;

}

Location: TestParallelInitialization.java

Content: 

public void testParallelInitJobs() throws IOException {

  FakeJobInProgress[] jobs=new FakeJobInProgress[NUM_JOBS];

  for (int i=0; i < NUM_JOBS; i++) {

    jobs[i]=new FakeJobInProgress(jobConf,taskTrackerManager,UtilsForTests.getJobTracker());

    jobs[i].getStatus().setRunState(JobStatus.PREP);

    taskTrackerManager.submitJob(jobs[i]);

  }

  try {

    Thread.sleep(1000);

  }

 catch (  InterruptedException ie) {

  }

  for (int i=0; i < NUM_JOBS; i++) {

    assertTrue(jobs[i].getStatus().getRunState() == JobStatus.SUCCEEDED);

  }

}

