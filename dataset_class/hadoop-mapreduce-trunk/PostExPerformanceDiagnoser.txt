Location: PostExPerformanceDiagnoser.java

Content: 

/** 

 * @return JobStatistics - Object storing the job configuration and executioncounters and statistics information

 */

public JobStatistics getJobExecutionStatistics(){

  return _jobExecutionStatistics;

}

Location: PostExPerformanceDiagnoser.java

Content: 

public String getJobHistoryFile(){

  return this._jobHistoryFile;

}

Location: PostExPerformanceDiagnoser.java

Content: 

public String getReportFile(){

  return this._reportFile;

}

Location: PostExPerformanceDiagnoser.java

Content: 

public InputStream getTestsConfFileIs(){

  return this._testsConfFileIs;

}

Location: PostExPerformanceDiagnoser.java

Content: 

/** 

 * @param jobConfFile - URL pointing to job configuration (job_conf.xml) file

 * @param jobHistoryFile - URL pointing to job history log file  

 * @param testsConfFileIs - file path for test configuration file (optional). If not specified default path is:$HADOOP_PREFIX/contrib/vaidya/pxpd_tests_config.xml

 * @param reportFile - file path for storing report (optional)

 */

public PostExPerformanceDiagnoser(String jobConfFile,String jobHistoryFile,InputStream testsConfFileIs,String reportFile) throws Exception {

  this._jobHistoryFile=jobHistoryFile;

  this._testsConfFileIs=testsConfFileIs;

  this._reportFile=reportFile;

  this._jobConfFile=jobConfFile;

  JobConf jobConf=new JobConf();

  JobInfo jobInfo=readJobInformation(jobConf);

  this._jobExecutionStatistics=new JobStatistics(jobConf,jobInfo);

}

Location: PostExPerformanceDiagnoser.java

Content: 

/** 

 * read and populate job statistics information.

 */

private JobInfo readJobInformation(JobConf jobConf) throws Exception {

  URL jobConfFileUrl=new URL(this._jobConfFile);

  URL jobHistoryFileUrl=new URL(this._jobHistoryFile);

  jobConf.addResource(jobConfFileUrl);

  JobHistoryParser parser;

  JobInfo jobInfo;

  if (jobHistoryFileUrl.getProtocol().equals("hdfs")) {

    parser=new JobHistoryParser(FileSystem.get(jobConf),jobHistoryFileUrl.getPath());

    jobInfo=parser.parse();

  }

 else   if (jobHistoryFileUrl.getProtocol().equals("file")) {

    parser=new JobHistoryParser(FileSystem.getLocal(jobConf),jobHistoryFileUrl.getPath());

    jobInfo=parser.parse();

  }

 else {

    throw new Exception("Malformed URL. Protocol: " + jobHistoryFileUrl.getProtocol());

  }

  return jobInfo;

}

Location: PostExPerformanceDiagnoser.java

Content: 

public void setTestsConfFileIs(InputStream testsConfFileIs){

  this._testsConfFileIs=testsConfFileIs;

}

