Location: MultiFilterRecordReader.java

Content: 

/** 

 * Default implementation offers  {@link #emit} every Tuple from thecollector (the outer join of child RRs).

 */

protected boolean combine(Object[] srcs,TupleWritable dst){

  return true;

}

Location: MultiFilterRecordReader.java

Content: 

/** 

 * For each tuple emitted, return a value (typically one of the values in the tuple). Modifying the Writables in the tuple is permitted and unlikely to affect join behavior in most cases, but it is not recommended. It's safer to clone first.

 */

protected abstract V emit(TupleWritable dst) throws IOException ;

Location: MultiFilterRecordReader.java

Content: 

public MultiFilterRecordReader(int id,Configuration conf,int capacity,Class<? extends WritableComparator> cmpcl) throws IOException {

  super(id,capacity,cmpcl);

  setConf(conf);

}

Location: MultiFilterRecordReader.java

Content: 

public MultiFilterRecordReader(int id,JobConf conf,int capacity,Class<? extends WritableComparator> cmpcl) throws IOException {

  super(id,capacity,cmpcl);

  setConf(conf);

}

