Location: SleepJob.java

Content: 

public Job createJob(int numMapper,int numReducer,long mapSleepTime,int mapSleepCount,long reduceSleepTime,int reduceSleepCount) throws IOException {

  Configuration conf=getConf();

  conf.setLong(MAP_SLEEP_TIME,mapSleepTime);

  conf.setLong(REDUCE_SLEEP_TIME,reduceSleepTime);

  conf.setInt(MAP_SLEEP_COUNT,mapSleepCount);

  conf.setInt(REDUCE_SLEEP_COUNT,reduceSleepCount);

  conf.setInt(MRJobConfig.NUM_MAPS,numMapper);

  Job job=Job.getInstance(conf,"sleep");

  job.setNumReduceTasks(numReducer);

  job.setJarByClass(SleepJob.class);

  job.setNumReduceTasks(numReducer);

  job.setMapperClass(SleepMapper.class);

  job.setMapOutputKeyClass(IntWritable.class);

  job.setMapOutputValueClass(NullWritable.class);

  job.setReducerClass(SleepReducer.class);

  job.setOutputFormatClass(NullOutputFormat.class);

  job.setInputFormatClass(SleepInputFormat.class);

  job.setPartitionerClass(SleepJobPartitioner.class);

  job.setSpeculativeExecution(false);

  job.setJobName("Sleep job");

  FileInputFormat.addInputPath(job,new Path("ignored"));

  return job;

}

Location: SleepJob.java

Content: 

private TaskAttemptInfo getSuccessfulAttemptInfo(TaskType type,int task){

  TaskAttemptInfo ret;

  for (int i=0; true; ++i) {

    ret=jobdesc.getTaskAttemptInfo(type,task,i);

    if (ret.getRunState() == TaskStatus.State.SUCCEEDED) {

      break;

    }

  }

  if (ret.getRunState() != TaskStatus.State.SUCCEEDED) {

    LOG.warn("No sucessful attempts tasktype " + type + " task "+ task);

  }

  return ret;

}

Location: SleepJob.java

Content: 

public SleepJob(Configuration conf,long submissionMillis,JobStory jobdesc,Path outRoot,UserGroupInformation ugi,int seq,int numLocations,String[] hosts) throws IOException {

  super(conf,submissionMillis,jobdesc,outRoot,ugi,seq);

  this.fakeLocations=numLocations;

  this.hosts=hosts;

  this.selector=(fakeLocations > 0) ? new Selector(hosts.length,(float)fakeLocations / hosts.length,rand.get()) : null;

  this.mapTasksOnly=conf.getBoolean(SLEEPJOB_MAPTASK_ONLY,false);

  mapMaxSleepTime=conf.getLong(GRIDMIX_SLEEP_MAX_MAP_TIME,Long.MAX_VALUE);

  reduceMaxSleepTime=conf.getLong(GRIDMIX_SLEEP_MAX_REDUCE_TIME,Long.MAX_VALUE);

}

