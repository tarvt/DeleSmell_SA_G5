Location: PipesReducer.java

Content: 

/** 

 * Process all of the keys and values. Start up the application if we haven't started it yet.

 */

public void reduce(K2 key,Iterator<V2> values,OutputCollector<K3,V3> output,Reporter reporter) throws IOException {

  isOk=false;

  startApplication(output,reporter);

  downlink.reduceKey(key);

  while (values.hasNext()) {

    downlink.reduceValue(values.next());

  }

  if (skipping) {

    downlink.flush();

  }

  isOk=true;

}

Location: PipesReducer.java

Content: 

@SuppressWarnings("unchecked") private void startApplication(OutputCollector<K3,V3> output,Reporter reporter) throws IOException {

  if (application == null) {

    try {

      LOG.info("starting application");

      application=new Application<K2,V2,K3,V3>(job,null,output,reporter,(Class<? extends K3>)job.getOutputKeyClass(),(Class<? extends V3>)job.getOutputValueClass());

      downlink=application.getDownlink();

    }

 catch (    InterruptedException ie) {

      throw new RuntimeException("interrupted",ie);

    }

    int reduce=0;

    downlink.runReduce(reduce,Submitter.getIsJavaRecordWriter(job));

  }

}

