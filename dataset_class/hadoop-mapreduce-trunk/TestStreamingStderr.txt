Location: TestStreamingStderr.java

Content: 

protected String[] genArgs(File input,File output,int preLines,int duringLines,int postLines){

  return new String[]{"-input",input.getAbsolutePath(),"-output",output.getAbsolutePath(),"-mapper",UtilTest.makeJavaCommand(StderrApp.class,new String[]{Integer.toString(preLines),Integer.toString(duringLines),Integer.toString(postLines)}),"-reducer",StreamJob.REDUCE_NONE,"-jobconf","mapreduce.task.files.preserve.failedtasks=true","-jobconf","mapreduce.task.timeout=5000","-jobconf","stream.tmpdir=" + System.getProperty("test.build.data","/tmp")};

}

Location: TestStreamingStderr.java

Content: 

public void runStreamJob(String baseName,boolean hasInput,int preLines,int duringLines,int postLines) throws Exception {

  File input=setupInput(baseName,hasInput);

  File output=setupOutput(baseName);

  boolean mayExit=false;

  int returnStatus=0;

  StreamJob job=new StreamJob(genArgs(input,output,preLines,duringLines,postLines),mayExit);

  returnStatus=job.go();

  assertEquals("StreamJob success",0,returnStatus);

}

Location: TestStreamingStderr.java

Content: 

protected File setupInput(String base,boolean hasInput) throws IOException {

  File input=new File(base + "-input.txt");

  UtilTest.recursiveDelete(input);

  FileOutputStream in=new FileOutputStream(input.getAbsoluteFile());

  if (hasInput) {

    in.write("hello\n".getBytes());

  }

  in.close();

  return input;

}

Location: TestStreamingStderr.java

Content: 

protected File setupOutput(String base) throws IOException {

  File output=new File(base + "-out");

  UtilTest.recursiveDelete(output);

  return output;

}

Location: TestStreamingStderr.java

Content: 

@Test public void testStderrAfterOutput() throws Exception {

  runStreamJob("stderr-post",false,0,0,10000);

}

Location: TestStreamingStderr.java

Content: 

@Test public void testStderrCountsAsProgress() throws Exception {

  runStreamJob("stderr-progress",true,10,1000,0);

}

Location: TestStreamingStderr.java

Content: 

@Test public void testStderrNoInput() throws Exception {

  runStreamJob("stderr-pre",false,10000,0,0);

}

Location: TestStreamingStderr.java

Content: 

public TestStreamingStderr() throws IOException {

  UtilTest utilTest=new UtilTest(getClass().getName());

  utilTest.checkUserDir();

  utilTest.redirectIfAntJunit();

}

