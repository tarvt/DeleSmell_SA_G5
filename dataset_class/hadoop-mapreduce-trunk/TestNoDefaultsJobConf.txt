Location: TestNoDefaultsJobConf.java

Content: 

public void testNoDefaults() throws Exception {

  JobConf configuration=new JobConf();

  assertTrue(configuration.get("hadoop.tmp.dir",null) != null);

  configuration=new JobConf(false);

  assertTrue(configuration.get("hadoop.tmp.dir",null) == null);

  Path inDir=new Path("testing/jobconf/input");

  Path outDir=new Path("testing/jobconf/output");

  OutputStream os=getFileSystem().create(new Path(inDir,"text.txt"));

  Writer wr=new OutputStreamWriter(os);

  wr.write("hello\n");

  wr.write("hello\n");

  wr.close();

  JobConf conf=new JobConf(false);

  conf.set(JTConfig.JT_IPC_ADDRESS,createJobConf().get(JTConfig.JT_IPC_ADDRESS));

  conf.set("fs.default.name",createJobConf().get("fs.default.name"));

  conf.setJobName("mr");

  conf.setInputFormat(TextInputFormat.class);

  conf.setMapOutputKeyClass(LongWritable.class);

  conf.setMapOutputValueClass(Text.class);

  conf.setOutputFormat(TextOutputFormat.class);

  conf.setOutputKeyClass(LongWritable.class);

  conf.setOutputValueClass(Text.class);

  conf.setMapperClass(org.apache.hadoop.mapred.lib.IdentityMapper.class);

  conf.setReducerClass(org.apache.hadoop.mapred.lib.IdentityReducer.class);

  FileInputFormat.setInputPaths(conf,inDir);

  FileOutputFormat.setOutputPath(conf,outDir);

  JobClient.runJob(conf);

  Path[] outputFiles=FileUtil.stat2Paths(getFileSystem().listStatus(outDir,new Utils.OutputFileUtils.OutputFilesFilter()));

  if (outputFiles.length > 0) {

    InputStream is=getFileSystem().open(outputFiles[0]);

    BufferedReader reader=new BufferedReader(new InputStreamReader(is));

    String line=reader.readLine();

    int counter=0;

    while (line != null) {

      counter++;

      assertTrue(line.contains("hello"));

      line=reader.readLine();

    }

    reader.close();

    assertEquals(2,counter);

  }

}

Location: TestNoDefaultsJobConf.java

Content: 

public TestNoDefaultsJobConf() throws IOException {

  super(HadoopTestCase.CLUSTER_MR,HadoopTestCase.DFS_FS,1,1);

}

