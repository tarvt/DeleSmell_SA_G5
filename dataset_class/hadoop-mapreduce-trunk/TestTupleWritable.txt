Location: TestTupleWritable.java

Content: 

/** 

 * Tests compatibility with pre-0.21 versions of TupleWritable

 */

public void testPreVersion21Compatibility() throws Exception {

  Writable[] manyWrits=makeRandomWritables(64);

  PreVersion21TupleWritable oldTuple=new PreVersion21TupleWritable(manyWrits);

  for (int i=0; i < manyWrits.length; i++) {

    if (i % 3 == 0) {

      oldTuple.setWritten(i);

    }

  }

  ByteArrayOutputStream out=new ByteArrayOutputStream();

  oldTuple.write(new DataOutputStream(out));

  ByteArrayInputStream in=new ByteArrayInputStream(out.toByteArray());

  TupleWritable dTuple=new TupleWritable();

  dTuple.readFields(new DataInputStream(in));

  assertTrue("Tuple writable is unable to read pre-0.21 versions of TupleWritable",oldTuple.isCompatible(dTuple));

  assertEquals("All tuple data has not been read from the stream",-1,in.read());

}

Location: TestTupleWritable.java

Content: 

public void testPreVersion21CompatibilityEmptyTuple() throws Exception {

  Writable[] manyWrits=new Writable[0];

  PreVersion21TupleWritable oldTuple=new PreVersion21TupleWritable(manyWrits);

  ByteArrayOutputStream out=new ByteArrayOutputStream();

  oldTuple.write(new DataOutputStream(out));

  ByteArrayInputStream in=new ByteArrayInputStream(out.toByteArray());

  TupleWritable dTuple=new TupleWritable();

  dTuple.readFields(new DataInputStream(in));

  assertTrue("Tuple writable is unable to read pre-0.21 versions of TupleWritable",oldTuple.isCompatible(dTuple));

  assertEquals("All tuple data has not been read from the stream",-1,in.read());

}

