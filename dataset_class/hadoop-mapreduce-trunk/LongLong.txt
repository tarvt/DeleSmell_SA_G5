Location: LongLong.java

Content: 

/** 

 * And operation (&). 

 */

long and(long mask){

  return d0 & mask;

}

Location: LongLong.java

Content: 

/** 

 * Compute a*b and store the result to r.

 * @return r

 */

static LongLong multiplication(final LongLong r,final long a,final long b){

  final long a_lower=a & LOWER_MASK;

  final long a_upper=(a & UPPER_MASK) >> MID;

  final long b_lower=b & LOWER_MASK;

  final long b_upper=(b & UPPER_MASK) >> MID;

  final long tmp=a_lower * b_upper + a_upper * b_lower;

  r.d0=a_lower * b_lower + ((tmp << MID) & FULL_MASK);

  r.d1=a_upper * b_upper + (tmp >> MID);

  return r;

}

Location: LongLong.java

Content: 

/** 

 * Plus equal operation (+=). 

 */

LongLong plusEqual(LongLong that){

  this.d0+=that.d0;

  this.d1+=that.d1;

  return this;

}

Location: LongLong.java

Content: 

/** 

 * Set the values. 

 */

LongLong set(long d0,long d1){

  this.d0=d0;

  this.d1=d1;

  return this;

}

Location: LongLong.java

Content: 

/** 

 * Shift right operation (<<). 

 */

long shiftRight(int n){

  return (d1 << (BITS_PER_LONG - n)) + (d0 >>> n);

}

Location: LongLong.java

Content: 

/** 

 * Convert this to a BigInteger. 

 */

BigInteger toBigInteger(){

  return BigInteger.valueOf(d1).shiftLeft(BITS_PER_LONG).add(BigInteger.valueOf(d0));

}

