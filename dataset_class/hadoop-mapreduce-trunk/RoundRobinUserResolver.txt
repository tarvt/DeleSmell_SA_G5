Location: RoundRobinUserResolver.java

Content: 

static String buildEmptyUsersErrorMsg(URI userloc){

  return "Empty user list is not allowed for RoundRobinUserResolver. Provided" + " user resource URI '" + userloc + "' resulted in an empty user list.";

}

Location: RoundRobinUserResolver.java

Content: 

/** 

 * Userlist assumes one user per line. Each line in users-list-file is of the form &lt;username&gt;[,group]*  <br> Group names are ignored(they are not parsed at all).

 */

private List<UserGroupInformation> parseUserList(URI userUri,Configuration conf) throws IOException {

  if (null == userUri) {

    return Collections.emptyList();

  }

  final Path userloc=new Path(userUri.toString());

  final Text rawUgi=new Text();

  final FileSystem fs=userloc.getFileSystem(conf);

  final ArrayList<UserGroupInformation> ugiList=new ArrayList<UserGroupInformation>();

  LineReader in=null;

  try {

    in=new LineReader(fs.open(userloc));

    while (in.readLine(rawUgi) > 0) {

      int e=rawUgi.find(",");

      if (rawUgi.getLength() == 0 || e == 0) {

        throw new IOException("Missing username: " + rawUgi);

      }

      if (e == -1) {

        e=rawUgi.getLength();

      }

      final String username=Text.decode(rawUgi.getBytes(),0,e);

      UserGroupInformation ugi=null;

      try {

        ugi=UserGroupInformation.createProxyUser(username,UserGroupInformation.getLoginUser());

      }

 catch (      IOException ioe) {

        LOG.error("Error while creating a proxy user ",ioe);

      }

      if (ugi != null) {

        ugiList.add(ugi);

      }

    }

  }

  finally {

    if (in != null) {

      in.close();

    }

  }

  return ugiList;

}

