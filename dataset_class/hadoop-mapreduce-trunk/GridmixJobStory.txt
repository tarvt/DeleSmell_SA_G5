Location: GridmixJobStory.java

Content: 

private Map<JobID,ZombieJob> buildJobStories() throws IOException {

  ZombieJobProducer zjp=new ZombieJobProducer(path,null,conf);

  Map<JobID,ZombieJob> hm=new HashMap<JobID,ZombieJob>();

  ZombieJob zj=zjp.getNextJob();

  while (zj != null) {

    hm.put(zj.getJobID(),zj);

    zj=zjp.getNextJob();

  }

  if (hm.size() == 0) {

    return null;

  }

 else {

    return hm;

  }

}

Location: GridmixJobStory.java

Content: 

/** 

 * Get the zombie jobs as a map.

 * @return the zombie jobs map.

 */

public Map<JobID,ZombieJob> getZombieJobs(){

  return zombieJobs;

}

Location: GridmixJobStory.java

Content: 

/** 

 * Get the zombie job of a given job id.

 * @param jobId - gridmix job id.

 * @return - the zombie job object.

 */

public ZombieJob getZombieJob(JobID jobId){

  return zombieJobs.get(jobId);

}

Location: GridmixJobStory.java

Content: 

public GridmixJobStory(Path path,Configuration conf){

  this.path=path;

  this.conf=conf;

  try {

    zombieJobs=buildJobStories();

    if (zombieJobs == null) {

      throw new NullPointerException("No jobs found in a " + " given trace file.");

    }

  }

 catch (  IOException ioe) {

    LOG.warn("Error:" + ioe.getMessage());

  }

catch (  NullPointerException npe) {

    LOG.warn("Error:" + npe.getMessage());

  }

}

