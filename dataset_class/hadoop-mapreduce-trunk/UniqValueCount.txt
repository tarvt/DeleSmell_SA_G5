Location: UniqValueCount.java

Content: 

/** 

 * @return the set of the unique objects

 */

public Set<Object> getUniqueItems(){

  return uniqItems.keySet();

}

Location: UniqValueCount.java

Content: 

/** 

 * Set the limit on the number of unique values

 * @param n the desired limit on the number of unique values

 * @return the new limit on the number of unique values

 */

public long setMaxItems(long n){

  if (n >= numItems) {

    this.maxNumItems=n;

  }

 else   if (this.maxNumItems >= this.numItems) {

    this.maxNumItems=this.numItems;

  }

  return this.maxNumItems;

}

Location: UniqValueCount.java

Content: 

/** 

 * the default constructor

 */

public UniqValueCount(){

  this(Long.MAX_VALUE);

}

Location: UniqValueCount.java

Content: 

/** 

 * constructor

 * @param maxNum the limit in the number of unique values to keep.

 */

public UniqValueCount(long maxNum){

  uniqItems=new TreeMap<Object,Object>();

  this.numItems=0;

  maxNumItems=Long.MAX_VALUE;

  if (maxNum > 0) {

    this.maxNumItems=maxNum;

  }

}

