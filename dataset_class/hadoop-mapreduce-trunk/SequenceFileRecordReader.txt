Location: SequenceFileRecordReader.java

Content: 

protected synchronized void getCurrentValue(V value) throws IOException {

  in.getCurrentValue(value);

}

Location: SequenceFileRecordReader.java

Content: 

/** 

 * The class of value that must be passed to  {@link #next(Object,Object)}.. 

 */

public Class getValueClass(){

  return in.getValueClass();

}

Location: SequenceFileRecordReader.java

Content: 

protected synchronized boolean next(K key) throws IOException {

  if (!more)   return false;

  long pos=in.getPosition();

  boolean remaining=(in.next(key) != null);

  if (pos >= end && in.syncSeen()) {

    more=false;

  }

 else {

    more=remaining;

  }

  return more;

}

Location: SequenceFileRecordReader.java

Content: 

protected synchronized void seek(long pos) throws IOException {

  in.seek(pos);

}

Location: SequenceFileRecordReader.java

Content: 

public SequenceFileRecordReader(Configuration conf,FileSplit split) throws IOException {

  Path path=split.getPath();

  FileSystem fs=path.getFileSystem(conf);

  this.in=new SequenceFile.Reader(fs,path,conf);

  this.end=split.getStart() + split.getLength();

  this.conf=conf;

  if (split.getStart() > in.getPosition())   in.sync(split.getStart());

  this.start=in.getPosition();

  more=start < end;

}

