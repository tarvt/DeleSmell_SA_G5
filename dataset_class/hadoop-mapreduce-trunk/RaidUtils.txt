Location: RaidUtils.java

Content: 

public static void copyBytes(InputStream in,OutputStream out,byte[] buf,long count) throws IOException {

  for (long bytesRead=0; bytesRead < count; ) {

    int toRead=Math.min(buf.length,(int)(count - bytesRead));

    IOUtils.readFully(in,buf,0,toRead);

    bytesRead+=toRead;

    out.write(buf,0,toRead);

  }

}

Location: RaidUtils.java

Content: 

/** 

 * Removes files matching the trash file pattern.

 */

public static void filterTrash(Configuration conf,List<Path> files){

  String trashPattern=conf.get("raid.blockfixer.trash.pattern","^/user/.*/\\.Trash.*");

  for (Iterator<Path> it=files.iterator(); it.hasNext(); ) {

    String pathStr=it.next().toString();

    if (Pattern.matches(trashPattern,pathStr)) {

      it.remove();

    }

  }

}

Location: RaidUtils.java

Content: 

public static void readTillEnd(InputStream in,byte[] buf,boolean eofOK) throws IOException {

  int toRead=buf.length;

  int numRead=0;

  while (numRead < toRead) {

    int nread=in.read(buf,numRead,toRead - numRead);

    if (nread < 0) {

      if (eofOK) {

        Arrays.fill(buf,numRead,toRead,(byte)0);

        numRead=toRead;

      }

 else {

        throw new IOException("Premature EOF");

      }

    }

 else {

      numRead+=nread;

    }

  }

}

