Location: MultipleOutputFormat.java

Content: 

/** 

 * Generate the actual key from the given key/value. The default behavior is that the actual key is equal to the given key

 * @param key the key of the output data

 * @param value the value of the output data

 * @return the actual key derived from the given key/value

 */

protected K generateActualKey(K key,V value){

  return key;

}

Location: MultipleOutputFormat.java

Content: 

/** 

 * Generate the actual value from the given key and value. The default behavior is that the actual value is equal to the given value

 * @param key the key of the output data

 * @param value the value of the output data

 * @return the actual value derived from the given key/value

 */

protected V generateActualValue(K key,V value){

  return value;

}

Location: MultipleOutputFormat.java

Content: 

/** 

 * Generate the file output file name based on the given key and the leaf file name. The default behavior is that the file name does not depend on the key.

 * @param key the key of the output data

 * @param name the leaf file name

 * @return generated file name

 */

protected String generateFileNameForKeyValue(K key,V value,String name){

  return name;

}

Location: MultipleOutputFormat.java

Content: 

/** 

 * Generate the leaf name for the output file name. The default behavior does not change the leaf file name (such as part-00000)

 * @param name the leaf file name for the output file

 * @return the given leaf file name

 */

protected String generateLeafFileName(String name){

  return name;

}

Location: MultipleOutputFormat.java

Content: 

/** 

 * Generate the outfile name based on a given anme and the input file name. If the  {@link JobContext#MAP_INPUT_FILE} does not exists (i.e. this is not for a map only job),the given name is returned unchanged. If the config value for "num.of.trailing.legs.to.use" is not set, or set 0 or negative, the given name is returned unchanged. Otherwise, return a file name consisting of the N trailing legs of the input file name where N is the config value for "num.of.trailing.legs.to.use".

 * @param job the job config

 * @param name the output file name

 * @return the outfile name based on a given anme and the input file name.

 */

protected String getInputFileBasedOutputFileName(JobConf job,String name){

  String infilepath=job.get(MRJobConfig.MAP_INPUT_FILE);

  if (infilepath == null) {

    return name;

  }

  int numOfTrailingLegsToUse=job.getInt("mapred.outputformat.numOfTrailingLegs",0);

  if (numOfTrailingLegsToUse <= 0) {

    return name;

  }

  Path infile=new Path(infilepath);

  Path parent=infile.getParent();

  String midName=infile.getName();

  Path outPath=new Path(midName);

  for (int i=1; i < numOfTrailingLegsToUse; i++) {

    if (parent == null)     break;

    midName=parent.getName();

    if (midName.length() == 0)     break;

    parent=parent.getParent();

    outPath=new Path(midName,outPath);

  }

  return outPath.toString();

}

