Location: ReedSolomonCode.java

Content: 

@Override public void decode(int[] data,int[] erasedLocation,int[] erasedValue){

  if (erasedLocation.length == 0) {

    return;

  }

  assert (erasedLocation.length == erasedValue.length);

  for (int i=0; i < erasedLocation.length; i++) {

    data[erasedLocation[i]]=0;

  }

  for (int i=0; i < erasedLocation.length; i++) {

    errSignature[i]=primitivePower[erasedLocation[i]];

    erasedValue[i]=GF.substitute(data,primitivePower[i]);

  }

  GF.solveVandermondeSystem(errSignature,erasedValue,erasedLocation.length);

}

Location: ReedSolomonCode.java

Content: 

@Override public void encode(int[] message,int[] parity){

  assert (message.length == stripeSize && parity.length == paritySize);

  for (int i=0; i < paritySize; i++) {

    dataBuff[i]=0;

  }

  for (int i=0; i < stripeSize; i++) {

    dataBuff[i + paritySize]=message[i];

  }

  GF.remainder(dataBuff,generatingPolynomial);

  for (int i=0; i < paritySize; i++) {

    parity[i]=dataBuff[i];

  }

}

Location: ReedSolomonCode.java

Content: 

@Override public int paritySize(){

  return this.paritySize;

}

Location: ReedSolomonCode.java

Content: 

public ReedSolomonCode(int stripeSize,int paritySize){

  assert (stripeSize + paritySize < GF.getFieldSize());

  this.stripeSize=stripeSize;

  this.paritySize=paritySize;

  this.errSignature=new int[paritySize];

  this.paritySymbolLocations=new int[paritySize];

  this.dataBuff=new int[paritySize + stripeSize];

  for (int i=0; i < paritySize; i++) {

    paritySymbolLocations[i]=i;

  }

  this.primitivePower=new int[stripeSize + paritySize];

  for (int i=0; i < stripeSize + paritySize; i++) {

    primitivePower[i]=GF.power(PRIMITIVE_ROOT,i);

  }

  int[] gen={1};

  int[] poly=new int[2];

  for (int i=0; i < paritySize; i++) {

    poly[0]=primitivePower[i];

    poly[1]=1;

    gen=GF.multiply(gen,poly);

  }

  generatingPolynomial=gen;

}

Location: ReedSolomonCode.java

Content: 

@Override public int stripeSize(){

  return this.stripeSize;

}

Location: ReedSolomonCode.java

Content: 

@Override public int symbolSize(){

  return (int)Math.round(Math.log(GF.getFieldSize()) / Math.log(2));

}

