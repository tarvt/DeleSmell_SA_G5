Location: ValueAggregatorJobBase.java

Content: 

protected static ArrayList<ValueAggregatorDescriptor> getAggregatorDescriptors(Configuration conf){

  int num=conf.getInt(DESCRIPTOR_NUM,0);

  ArrayList<ValueAggregatorDescriptor> retv=new ArrayList<ValueAggregatorDescriptor>(num);

  for (int i=0; i < num; i++) {

    String spec=conf.get(DESCRIPTOR + "." + i);

    ValueAggregatorDescriptor ad=getValueAggregatorDescriptor(spec,conf);

    if (ad != null) {

      retv.add(ad);

    }

  }

  return retv;

}

Location: ValueAggregatorJobBase.java

Content: 

private static ArrayList<ValueAggregatorDescriptor> getAggregatorDescriptors(JobConf job){

  String advn="aggregator.descriptor";

  int num=job.getInt(advn + ".num",0);

  ArrayList<ValueAggregatorDescriptor> retv=new ArrayList<ValueAggregatorDescriptor>(num);

  for (int i=0; i < num; i++) {

    String spec=job.get(advn + "." + i);

    ValueAggregatorDescriptor ad=getValueAggregatorDescriptor(spec,job);

    if (ad != null) {

      retv.add(ad);

    }

  }

  return retv;

}

Location: ValueAggregatorJobBase.java

Content: 

protected static ValueAggregatorDescriptor getValueAggregatorDescriptor(String spec,Configuration conf){

  if (spec == null)   return null;

  String[] segments=spec.split(",",-1);

  String type=segments[0];

  if (type.compareToIgnoreCase("UserDefined") == 0) {

    String className=segments[1];

    return new UserDefinedValueAggregatorDescriptor(className,conf);

  }

  return null;

}

Location: ValueAggregatorJobBase.java

Content: 

private static ValueAggregatorDescriptor getValueAggregatorDescriptor(String spec,JobConf job){

  if (spec == null)   return null;

  String[] segments=spec.split(",",-1);

  String type=segments[0];

  if (type.compareToIgnoreCase("UserDefined") == 0) {

    String className=segments[1];

    return new UserDefinedValueAggregatorDescriptor(className,job);

  }

  return null;

}

Location: ValueAggregatorJobBase.java

Content: 

private static void initializeMySpec(Configuration conf){

  aggregatorDescriptorList=getAggregatorDescriptors(conf);

  if (aggregatorDescriptorList.size() == 0) {

    aggregatorDescriptorList.add(new UserDefinedValueAggregatorDescriptor(ValueAggregatorBaseDescriptor.class.getCanonicalName(),conf));

  }

}

Location: ValueAggregatorJobBase.java

Content: 

private void initializeMySpec(JobConf job){

  this.aggregatorDescriptorList=getAggregatorDescriptors(job);

  if (this.aggregatorDescriptorList.size() == 0) {

    this.aggregatorDescriptorList.add(new UserDefinedValueAggregatorDescriptor(ValueAggregatorBaseDescriptor.class.getCanonicalName(),job));

  }

}

Location: ValueAggregatorJobBase.java

Content: 

protected static void logSpec(){

}

