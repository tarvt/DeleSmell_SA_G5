Location: EagerTaskInitializationListener.java

Content: 

public EagerTaskInitializationListener(Configuration conf){

  numThreads=conf.getInt(JTConfig.JT_JOBINIT_THREADS,DEFAULT_NUM_THREADS);

  threadPool=Executors.newFixedThreadPool(numThreads);

}

Location: EagerTaskInitializationListener.java

Content: 

/** 

 * We add the JIP to the jobInitQueue, which is processed  asynchronously to handle split-computation and build up the right TaskTracker/Block mapping.

 */

@Override public void jobAdded(JobInProgress job){

synchronized (jobInitQueue) {

    jobInitQueue.add(job);

    resortInitQueue();

    jobInitQueue.notifyAll();

  }

}

Location: EagerTaskInitializationListener.java

Content: 

@Override public void jobRemoved(JobInProgress job){

synchronized (jobInitQueue) {

    jobInitQueue.remove(job);

  }

}

Location: EagerTaskInitializationListener.java

Content: 

private void jobStateChanged(JobStatusChangeEvent event){

  if (event.getEventType() == EventType.START_TIME_CHANGED || event.getEventType() == EventType.PRIORITY_CHANGED) {

synchronized (jobInitQueue) {

      resortInitQueue();

    }

  }

}

Location: EagerTaskInitializationListener.java

Content: 

@Override public void jobUpdated(JobChangeEvent event){

  if (event instanceof JobStatusChangeEvent) {

    jobStateChanged((JobStatusChangeEvent)event);

  }

}

Location: EagerTaskInitializationListener.java

Content: 

/** 

 * Sort jobs by priority and then by start time.

 */

private synchronized void resortInitQueue(){

  Comparator<JobInProgress> comp=new Comparator<JobInProgress>(){

    public int compare(    JobInProgress o1,    JobInProgress o2){

      int res=o1.getPriority().compareTo(o2.getPriority());

      if (res == 0) {

        if (o1.getStartTime() < o2.getStartTime())         res=-1;

 else         res=(o1.getStartTime() == o2.getStartTime() ? 0 : 1);

      }

      return res;

    }

  }

;

synchronized (jobInitQueue) {

    Collections.sort(jobInitQueue,comp);

  }

}

Location: EagerTaskInitializationListener.java

Content: 

public void setTaskTrackerManager(TaskTrackerManager ttm){

  this.ttm=ttm;

}

