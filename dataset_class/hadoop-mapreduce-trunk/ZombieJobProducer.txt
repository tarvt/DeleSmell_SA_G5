Location: ZombieJobProducer.java

Content: 

/** 

 * Constructor

 * @param input The input stream for the JSON trace.

 * @param cluster The topology of the cluster that corresponds to the jobs in the trace. The argument can be null if we do not have knowledge of the cluster topology.

 * @throws IOException

 */

public ZombieJobProducer(InputStream input,ZombieCluster cluster) throws IOException {

  this(new JobTraceReader(input),cluster,false,-1);

}

Location: ZombieJobProducer.java

Content: 

/** 

 * Constructor

 * @param input The input stream for the JSON trace.

 * @param cluster The topology of the cluster that corresponds to the jobs in the trace. The argument can be null if we do not have knowledge of the cluster topology.

 * @param randomSeed use a deterministic seed.

 * @throws IOException

 */

public ZombieJobProducer(InputStream input,ZombieCluster cluster,long randomSeed) throws IOException {

  this(new JobTraceReader(input),cluster,true,randomSeed);

}

Location: ZombieJobProducer.java

Content: 

private ZombieJobProducer(JobTraceReader reader,ZombieCluster cluster,boolean hasRandomSeed,long randomSeed){

  this.reader=reader;

  this.cluster=cluster;

  this.hasRandomSeed=hasRandomSeed;

  this.randomSeed=(hasRandomSeed) ? randomSeed : System.nanoTime();

}

Location: ZombieJobProducer.java

Content: 

/** 

 * Constructor

 * @param path Path to the JSON trace file, possibly compressed.

 * @param cluster The topology of the cluster that corresponds to the jobs in the trace. The argument can be null if we do not have knowledge of the cluster topology.

 * @param conf

 * @throws IOException

 */

public ZombieJobProducer(Path path,ZombieCluster cluster,Configuration conf) throws IOException {

  this(new JobTraceReader(path,conf),cluster,false,-1);

}

Location: ZombieJobProducer.java

Content: 

/** 

 * Constructor

 * @param path Path to the JSON trace file, possibly compressed.

 * @param cluster The topology of the cluster that corresponds to the jobs in the trace. The argument can be null if we do not have knowledge of the cluster topology.

 * @param conf

 * @param randomSeed use a deterministic seed.

 * @throws IOException

 */

public ZombieJobProducer(Path path,ZombieCluster cluster,Configuration conf,long randomSeed) throws IOException {

  this(new JobTraceReader(path,conf),cluster,true,randomSeed);

}

