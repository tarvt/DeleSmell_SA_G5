Location: GridmixTestUtils.java

Content: 

static void changePermission(String user,Path homeDirectory,FileSystem fs) throws IOException {

  fs.setOwner(homeDirectory,user,"");

}

Location: GridmixTestUtils.java

Content: 

/** 

 * Methods to generate the home directory for dummy users.

 * @param conf

 */

public static void createHomeAndStagingDirectory(String user,JobConf conf){

  try {

    FileSystem fs=dfsCluster.getFileSystem();

    String path="/user/" + user;

    Path homeDirectory=new Path(path);

    if (fs.exists(homeDirectory)) {

      fs.delete(homeDirectory,true);

    }

    TestGridmixSubmission.LOG.info("Creating Home directory : " + homeDirectory);

    fs.mkdirs(homeDirectory);

    changePermission(user,homeDirectory,fs);

    Path stagingArea=new Path(conf.get("mapreduce.jobtracker.staging.root.dir","/tmp/hadoop/mapred/staging"));

    TestGridmixSubmission.LOG.info("Creating Staging root directory : " + stagingArea);

    fs.mkdirs(stagingArea);

    fs.setPermission(stagingArea,new FsPermission((short)0777));

  }

 catch (  IOException ioe) {

    ioe.printStackTrace();

  }

}

Location: GridmixTestUtils.java

Content: 

public static void initCluster() throws IOException {

  Configuration conf=new Configuration();

  conf.set("mapred.queue.names","default,q1,q2");

  dfsCluster=new MiniDFSCluster(conf,3,true,null);

  dfs=dfsCluster.getFileSystem();

  conf.set(JTConfig.JT_RETIREJOBS,"false");

  mrCluster=new MiniMRCluster(3,dfs.getUri().toString(),1,null,null,new JobConf(conf));

}

Location: GridmixTestUtils.java

Content: 

public static void shutdownCluster() throws IOException {

  if (mrCluster != null) {

    mrCluster.shutdown();

  }

  if (dfsCluster != null) {

    dfsCluster.shutdown();

  }

}

