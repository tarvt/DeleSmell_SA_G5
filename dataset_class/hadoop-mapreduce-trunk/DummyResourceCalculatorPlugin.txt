Location: DummyResourceCalculatorPlugin.java

Content: 

/** 

 * {@inheritDoc} 

 */

@Override public long getAvailablePhysicalMemorySize(){

  return getConf().getLong(MAXPMEM_TESTING_PROPERTY,-1);

}

Location: DummyResourceCalculatorPlugin.java

Content: 

/** 

 * {@inheritDoc} 

 */

@Override public long getAvailableVirtualMemorySize(){

  return getConf().getLong(MAXVMEM_TESTING_PROPERTY,-1);

}

Location: DummyResourceCalculatorPlugin.java

Content: 

/** 

 * {@inheritDoc} 

 */

@Override public long getCpuFrequency(){

  return getConf().getLong(CPU_FREQUENCY,-1);

}

Location: DummyResourceCalculatorPlugin.java

Content: 

/** 

 * {@inheritDoc} 

 */

@Override public float getCpuUsage(){

  return getConf().getFloat(CPU_USAGE,-1);

}

Location: DummyResourceCalculatorPlugin.java

Content: 

/** 

 * {@inheritDoc} 

 */

@Override public long getCumulativeCpuTime(){

  return getConf().getLong(CUMULATIVE_CPU_TIME,-1);

}

Location: DummyResourceCalculatorPlugin.java

Content: 

/** 

 * {@inheritDoc} 

 */

@Override public int getNumProcessors(){

  return getConf().getInt(NUM_PROCESSORS,-1);

}

Location: DummyResourceCalculatorPlugin.java

Content: 

@Override public ProcResourceValues getProcResourceValues(){

  long cpuTime=getConf().getLong(PROC_CUMULATIVE_CPU_TIME,-1);

  long pMem=getConf().getLong(PROC_PMEM_TESTING_PROPERTY,-1);

  long vMem=getConf().getLong(PROC_VMEM_TESTING_PROPERTY,-1);

  return new ProcResourceValues(cpuTime,pMem,vMem);

}

