Location: TestAuditLogger.java

Content: 

/** 

 * Test  {@link AuditLogger} with IP set.

 */

public void testAuditLoggerWithIP() throws Exception {

  Configuration conf=new Configuration();

  Server server=RPC.getServer(new MyTestRPCServer(),"0.0.0.0",0,conf);

  server.start();

  InetSocketAddress addr=NetUtils.getConnectAddress(server);

  TestProtocol proxy=(TestProtocol)RPC.getProxy(TestProtocol.class,TestProtocol.versionID,addr,conf);

  proxy.ping();

  server.stop();

}

Location: TestAuditLogger.java

Content: 

/** 

 * Test  {@link AuditLogger} without IP set.

 */

public void testAuditLoggerWithoutIP() throws Exception {

  testSuccessLogFormat(false);

  testFailureLogFormat(false);

}

Location: TestAuditLogger.java

Content: 

/** 

 * Test the AuditLog format for failure events.

 */

private void testFailureLogFormat(boolean checkIP){

  testFailureLogFormat(checkIP,PERM);

  testFailureLogFormat(checkIP,null);

}

Location: TestAuditLogger.java

Content: 

/** 

 * Test the AuditLog format for failure events.

 */

private void testFailureLogFormat(boolean checkIP,String perm){

  String fLog=AuditLogger.createFailureLog(USER,OPERATION,perm,TARGET,DESC);

  StringBuilder expLog=new StringBuilder();

  expLog.append("USER=test\t");

  if (checkIP) {

    InetAddress ip=Server.getRemoteIp();

    expLog.append(Keys.IP.name() + "=" + ip.getHostAddress()+ "\t");

  }

  expLog.append("OPERATION=oper\tTARGET=tgt\tRESULT=FAILURE\t");

  expLog.append("DESCRIPTION=description of an audit log\t");

  expLog.append("PERMISSIONS=" + perm);

  assertEquals(expLog.toString(),fLog);

}

Location: TestAuditLogger.java

Content: 

/** 

 * Test the AuditLog format with key-val pair.

 */

public void testKeyValLogFormat(){

  StringBuilder actLog=new StringBuilder();

  StringBuilder expLog=new StringBuilder();

  AuditLogger.start(Keys.USER,USER,actLog);

  expLog.append("USER=test");

  assertEquals(expLog.toString(),actLog.toString());

  AuditLogger.add(Keys.OPERATION,OPERATION,actLog);

  expLog.append("\tOPERATION=oper");

  assertEquals(expLog.toString(),actLog.toString());

  AuditLogger.add(Keys.PERMISSIONS,(String)null,actLog);

  expLog.append("\tPERMISSIONS=null");

  assertEquals(expLog.toString(),actLog.toString());

  AuditLogger.add(Keys.TARGET,TARGET,actLog);

  expLog.append("\tTARGET=tgt");

  assertEquals(expLog.toString(),actLog.toString());

}

Location: TestAuditLogger.java

Content: 

/** 

 * Test the AuditLog format for successful events.

 */

private void testSuccessLogFormat(boolean checkIP){

  String sLog=AuditLogger.createSuccessLog(USER,OPERATION,TARGET);

  StringBuilder expLog=new StringBuilder();

  expLog.append("USER=test\t");

  if (checkIP) {

    InetAddress ip=Server.getRemoteIp();

    expLog.append(Keys.IP.name() + "=" + ip.getHostAddress()+ "\t");

  }

  expLog.append("OPERATION=oper\tTARGET=tgt\tRESULT=SUCCESS");

  assertEquals(expLog.toString(),sLog);

}

