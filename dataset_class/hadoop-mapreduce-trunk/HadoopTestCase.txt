Location: HadoopTestCase.java

Content: 

/** 

 * Creates a testcase for local or cluster MR using DFS. The DFS will be formatted regardless if there was one or not before in the given location.

 * @param mrMode indicates if the MR should be local (LOCAL_MR) or cluster(CLUSTER_MR)

 * @param fsMode indicates if the FS should be local (LOCAL_FS) or DFS (DFS_FS)local FS when using relative PATHs)

 * @param taskTrackers number of task trackers to start when using cluster

 * @param dataNodes number of data nodes to start when using DFS

 * @throws IOException thrown if the base directory cannot be set.

 */

public HadoopTestCase(int mrMode,int fsMode,int taskTrackers,int dataNodes) throws IOException {

  if (mrMode != LOCAL_MR && mrMode != CLUSTER_MR) {

    throw new IllegalArgumentException("Invalid MapRed mode, must be LOCAL_MR or CLUSTER_MR");

  }

  if (fsMode != LOCAL_FS && fsMode != DFS_FS) {

    throw new IllegalArgumentException("Invalid FileSystem mode, must be LOCAL_FS or DFS_FS");

  }

  if (taskTrackers < 1) {

    throw new IllegalArgumentException("Invalid taskTrackers value, must be greater than 0");

  }

  if (dataNodes < 1) {

    throw new IllegalArgumentException("Invalid dataNodes value, must be greater than 0");

  }

  localMR=(mrMode == LOCAL_MR);

  localFS=(fsMode == LOCAL_FS);

  this.taskTrackers=taskTrackers;

  this.dataNodes=dataNodes;

}

Location: HadoopTestCase.java

Content: 

/** 

 * Indicates if the filesystem is local or DFS.

 * @return returns TRUE if the filesystem is local, FALSE if it is DFS.

 */

public boolean isLocalFS(){

  return localFS;

}

Location: HadoopTestCase.java

Content: 

/** 

 * Indicates if the MR is running in local or cluster mode.

 * @return returns TRUE if the MR is running locally, FALSE if running incluster mode.

 */

public boolean isLocalMR(){

  return localMR;

}

