Location: MonsterFactoryTest.java

Content: 

@Test public void localizedMonsterGenerationTest_Cave(){

  location.setLocationType(LocationType.CAVE);

  player.setLocation(location);

  Monster caveMonster=factory.generateMonster(player);

  assertTrue(caveMonster instanceof Troll || caveMonster instanceof Skeleton || caveMonster instanceof Goblin);

}

Location: MonsterFactoryTest.java

Content: 

@Test public void localizedMonsterGenerationTest_Forest(){

  location.setLocationType(LocationType.FOREST);

  player.setLocation(location);

  Monster forestMonster=factory.generateMonster(player);

  assertTrue(forestMonster instanceof Troll || forestMonster instanceof Bugbear || forestMonster instanceof Goblin);

}

Location: MonsterFactoryTest.java

Content: 

@Test public void localizedMonsterGenerationTest_Mountains(){

  location.setLocationType(LocationType.MOUNTAIN);

  player.setLocation(location);

  Monster mountainMonster=factory.generateMonster(player);

  assertTrue(mountainMonster instanceof Giant || mountainMonster instanceof Wolf || mountainMonster instanceof Troll|| mountainMonster instanceof Skeleton);

}

Location: MonsterFactoryTest.java

Content: 

@Test public void localizedMonsterGenerationTest_Plains(){

  location.setLocationType(LocationType.PLAINS);

  player.setLocation(location);

  Monster plansMonster=factory.generateMonster(player);

  assertTrue(plansMonster instanceof Bugbear || plansMonster instanceof Goblin);

}

Location: MonsterFactoryTest.java

Content: 

@Test public void localizedMonsterGenerationTest_Swamp(){

  location.setLocationType(LocationType.SWAMP);

  player.setLocation(location);

  Monster swampMonster=factory.generateMonster(player);

  assertTrue(swampMonster instanceof Goblin || swampMonster instanceof Troll);

}

Location: MonsterFactoryTest.java

Content: 

@Test public void monsterGenerationOnNoDangerLocation(){

  location.setDangerRating(0);

  player.setLocation(location);

  Monster monster=factory.generateMonster(player);

  assertNull(monster);

}

