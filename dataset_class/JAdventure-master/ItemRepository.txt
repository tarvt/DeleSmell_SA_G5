Location: ItemRepository.java

Content: 

void addItem(Item item){

  itemMap.put(item.getId(),item);

}

Location: ItemRepository.java

Content: 

public Item getItem(String id){

  if (id == null || id.trim().length() == 0) {

    return null;

  }

  if (!itemMap.containsKey(id)) {

    throw new RepositoryException("Argument 'id' with value '" + id + "' not found in repository.");

  }

  return itemMap.get(id);

}

Location: ItemRepository.java

Content: 

public Item getRandomArmour(int level){

  return getRandomItem("a",level);

}

Location: ItemRepository.java

Content: 

public Item getRandomFood(int level){

  return getRandomItem("f",level);

}

Location: ItemRepository.java

Content: 

public Item getRandomItem(String start,int level){

  Random rand=new Random();

  int chance=rand.nextInt(100);

  if (chance < 70) {

    Item item=null;

    do {

      item=getRandom(start);

    }

 while (item.getLevel() > level);

    return item;

  }

 else {

    return getRandom(start);

  }

}

Location: ItemRepository.java

Content: 

public Item getRandomPotion(int level){

  return getRandomItem("p",level);

}

Location: ItemRepository.java

Content: 

public Item getRandomWeapon(int level){

  return getRandomItem("w",level);

}

Location: ItemRepository.java

Content: 

private Item getRandom(String start){

  Random rand=new Random();

  Item item=null;

  do {

    int itemIndex=rand.nextInt(itemMap.size() - 2);

    List<Item> items=new ArrayList<>(itemMap.values());

    item=items.get(itemIndex + 2);

  }

 while (!item.getId().startsWith(start));

  return item;

}

Location: ItemRepository.java

Content: 

public void retrieve(JsonReader jsonReader){

  load(jsonReader);

}

Location: ItemRepository.java

Content: 

public void store(JsonWriter writer){

  GsonBuilder bldr=new GsonBuilder().setPrettyPrinting();

  Gson gson=bldr.create();

  Map<String,Map<String,Item>> root=new TreeMap<>();

  root.put("items",itemMap);

  gson.toJson(root,Map.class,writer);

}

