Location: Menus.java

Content: 

public MenuItem displayMenu(List<MenuItem> m){

  int i=1;

  for (  MenuItem menuItem : m) {

    commandMap.put(String.valueOf(i),menuItem);

    commandMap.put(menuItem.getKey(),menuItem);

    for (    String command : menuItem.getAltCommands()) {

      commandMap.put(command.toLowerCase(),menuItem);

    }

    i++;

  }

  MenuItem selectedItem=selectMenu(m);

  return selectedItem;

}

Location: Menus.java

Content: 

private void printMenuItems(List<MenuItem> m){

  int i=1;

  for (  MenuItem menuItem : m) {

    if (menuItem.getDescription() != null) {

      QueueProvider.offer("[" + i + "] "+ menuItem.getCommand()+ " - "+ menuItem.getDescription());

    }

 else {

      QueueProvider.offer("[" + i + "] "+ menuItem.getCommand());

    }

    i++;

  }

}

Location: Menus.java

Content: 

protected MenuItem selectMenu(List<MenuItem> m){

  this.printMenuItems(m);

  String command=QueueProvider.take();

  if (commandMap.containsKey(command.toLowerCase())) {

    return commandMap.get(command.toLowerCase());

  }

 else {

    QueueProvider.offer("I don't know what '" + command + "' means.");

    return this.displayMenu(m);

  }

}

