Location: Line.java

Content: 

public Line display(NPC npc,Player player,List<Line> lines){

  if (responses.size() == 0) {

    return null;

  }

  List<MenuItem> responseList=new ArrayList<>();

  for (  Integer responseNum : responses) {

    Line response=lines.get(responseNum);

    if (ConversationManager.matchesConditions(npc,player,response)) {

      responseList.add(new MenuItem(response.getPlayerPrompt(),null));

    }

  }

  Menus responseMenu=new Menus();

  MenuItem response=responseMenu.displayMenu(responseList);

  for (  int responseNum : responses) {

    Line possibleResponse=lines.get(responseNum);

    if (possibleResponse.getPlayerPrompt().equals(response.getCommand())) {

      return possibleResponse;

    }

  }

  return null;

}

Location: Line.java

Content: 

public ActionType getAction(){

  return action;

}

Location: Line.java

Content: 

public ConditionType getCondition(){

  return condition;

}

Location: Line.java

Content: 

public String getConditionParameter(){

  return conditionParameter;

}

Location: Line.java

Content: 

public String getPlayerPrompt(){

  return playerPrompt;

}

Location: Line.java

Content: 

public String getText(){

  return text;

}

Location: Line.java

Content: 

public Line(int id,String playerPrompt,String text,ConditionType condition,String conditionParameter,List<Integer> responses,ActionType action){

  this.id=id;

  this.playerPrompt=playerPrompt;

  this.text=text;

  this.condition=condition;

  this.conditionParameter=conditionParameter;

  this.responses=responses;

  this.action=action;

}

