Location: MiniTwitService.java

Content: 

public void addMessage(Message message){

  messageDao.insertMessage(message);

}

Location: MiniTwitService.java

Content: 

public LoginResult checkUser(User user){

  LoginResult result=new LoginResult();

  User userFound=userDao.getUserbyUsername(user.getUsername());

  if (userFound == null) {

    result.setError("Invalid username");

  }

 else   if (!PasswordUtil.verifyPassword(user.getPassword(),userFound.getPassword())) {

    result.setError("Invalid password");

  }

 else {

    result.setUser(userFound);

  }

  return result;

}

Location: MiniTwitService.java

Content: 

public void followUser(User follower,User followee){

  userDao.insertFollower(follower,followee);

}

Location: MiniTwitService.java

Content: 

public List<Message> getPublicTimelineMessages(){

  return messageDao.getPublicTimelineMessages();

}

Location: MiniTwitService.java

Content: 

public User getUserbyUsername(String username){

  return userDao.getUserbyUsername(username);

}

Location: MiniTwitService.java

Content: 

public List<Message> getUserFullTimelineMessages(User user){

  return messageDao.getUserFullTimelineMessages(user);

}

Location: MiniTwitService.java

Content: 

public List<Message> getUserTimelineMessages(User user){

  return messageDao.getUserTimelineMessages(user);

}

Location: MiniTwitService.java

Content: 

public boolean isUserFollower(User follower,User followee){

  return userDao.isUserFollower(follower,followee);

}

Location: MiniTwitService.java

Content: 

public void registerUser(User user){

  user.setPassword(PasswordUtil.hashPassword(user.getPassword()));

  userDao.registerUser(user);

}

Location: MiniTwitService.java

Content: 

public void setMessageDao(MessageDao messageDao){

  this.messageDao=messageDao;

}

Location: MiniTwitService.java

Content: 

public void setUserDao(UserDao userDao){

  this.userDao=userDao;

}

Location: MiniTwitService.java

Content: 

public void unfollowUser(User follower,User followee){

  userDao.deleteFollower(follower,followee);

}

