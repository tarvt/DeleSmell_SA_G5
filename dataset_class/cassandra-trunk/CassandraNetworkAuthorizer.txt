Location: CassandraNetworkAuthorizer.java

Content: 

private Set<String> getAuthorizedDcs(String name){

  QueryOptions options=QueryOptions.forInternalCalls(ConsistencyLevel.LOCAL_ONE,Lists.newArrayList(ByteBufferUtil.bytes(name)));

  ResultMessage.Rows rows=select(authorizeUserStatement,options);

  UntypedResultSet result=UntypedResultSet.create(rows.result);

  Set<String> dcs=null;

  if (!result.isEmpty() && result.one().has("dcs")) {

    dcs=result.one().getFrozenSet("dcs",UTF8Type.instance);

  }

  return dcs;

}

Location: CassandraNetworkAuthorizer.java

Content: 

private static String getSetString(DCPermissions permissions){

  if (permissions.restrictsAccess()) {

    StringBuilder builder=new StringBuilder();

    builder.append('{');

    boolean first=true;

    for (    String dc : permissions.allowedDCs()) {

      if (first) {

        first=false;

      }

 else {

        builder.append(", ");

      }

      builder.append('\'');

      builder.append(dc);

      builder.append('\'');

    }

    builder.append('}');

    return builder.toString();

  }

 else {

    return "{}";

  }

}

Location: CassandraNetworkAuthorizer.java

Content: 

@VisibleForTesting void process(String query){

  QueryProcessor.process(query,ConsistencyLevel.LOCAL_ONE);

}

