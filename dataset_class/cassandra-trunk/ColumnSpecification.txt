Location: ColumnSpecification.java

Content: 

/** 

 * Returns true if all ColumnSpecifications are in the same table, false otherwise.

 */

public static boolean allInSameTable(Collection<ColumnSpecification> names){

  if (names == null || names.isEmpty())   return false;

  Iterator<ColumnSpecification> iter=names.iterator();

  ColumnSpecification first=iter.next();

  while (iter.hasNext()) {

    ColumnSpecification name=iter.next();

    if (!name.ksName.equals(first.ksName) || !name.cfName.equals(first.cfName))     return false;

  }

  return true;

}

Location: ColumnSpecification.java

Content: 

public ColumnSpecification(String ksName,String cfName,ColumnIdentifier name,AbstractType<?> type){

  this.ksName=ksName;

  this.cfName=cfName;

  this.name=name;

  this.type=type;

}

Location: ColumnSpecification.java

Content: 

public boolean isReversedType(){

  return type instanceof ReversedType;

}

Location: ColumnSpecification.java

Content: 

/** 

 * Returns a new <code>ColumnSpecification</code> for the same column but with the specified alias.

 * @param alias the column alias

 * @return a new <code>ColumnSpecification</code> for the same column but with the specified alias.

 */

public ColumnSpecification withAlias(ColumnIdentifier alias){

  return new ColumnSpecification(ksName,cfName,alias,type);

}

