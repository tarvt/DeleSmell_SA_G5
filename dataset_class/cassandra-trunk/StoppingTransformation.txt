Location: StoppingTransformation.java

Content: 

@Override protected void attachTo(BasePartitions partitions){

  assert this.partitions == null;

  this.partitions=partitions;

}

Location: StoppingTransformation.java

Content: 

@Override protected void attachTo(BaseRows rows){

  assert this.rows == null;

  this.rows=rows;

}

Location: StoppingTransformation.java

Content: 

@Override protected void onClose(){

  partitions=null;

}

Location: StoppingTransformation.java

Content: 

@Override protected void onPartitionClose(){

  rows=null;

}

Location: StoppingTransformation.java

Content: 

/** 

 * If invoked by a subclass, any rows/unfiltered iterator this transformation has been applied to will terminate after any currently-processing item is returned

 */

@DontInline protected void stopInPartition(){

  if (rows != null) {

    rows.stop.isSignalled=true;

    rows.stopChild.isSignalled=true;

  }

}

