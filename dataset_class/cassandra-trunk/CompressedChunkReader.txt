Location: CompressedChunkReader.java

Content: 

@Override public int chunkSize(){

  return metadata.chunkLength();

}

Location: CompressedChunkReader.java

Content: 

protected CompressedChunkReader(ChannelProxy channel,CompressionMetadata metadata){

  super(channel,metadata.dataLength);

  this.metadata=metadata;

  this.maxCompressedLength=metadata.maxCompressedLength();

  assert Integer.bitCount(metadata.chunkLength()) == 1;

}

Location: CompressedChunkReader.java

Content: 

@VisibleForTesting public double getCrcCheckChance(){

  return metadata.parameters.getCrcCheckChance();

}

Location: CompressedChunkReader.java

Content: 

@Override public Rebufferer instantiateRebufferer(){

  return new BufferManagingRebufferer.Aligned(this);

}

Location: CompressedChunkReader.java

Content: 

@Override public BufferType preferredBufferType(){

  return metadata.compressor().preferredBufferType();

}

Location: CompressedChunkReader.java

Content: 

boolean shouldCheckCrc(){

  return metadata.parameters.shouldCheckCrc();

}

