Location: CombinedTerm.java

Content: 

public CombinedTerm(AbstractType<?> comparator,DataTerm term){

  this.comparator=comparator;

  this.term=term;

}

Location: CombinedTerm.java

Content: 

public int compareTo(CombinedValue<DataTerm> o){

  return term.compareTo(comparator,o.get().getTerm());

}

Location: CombinedTerm.java

Content: 

public ByteBuffer getTerm(){

  return term.getTerm();

}

Location: CombinedTerm.java

Content: 

public RangeIterator<Long,Token> getTokenIterator(){

  RangeIterator.Builder<Long,Token> union=RangeUnionIterator.builder();

  union.add(term.getTokens());

  mergedTerms.stream().map(OnDiskIndex.DataTerm::getTokens).forEach(union::add);

  return union.build();

}

Location: CombinedTerm.java

Content: 

public TokenTreeBuilder getTokenTreeBuilder(){

  return new StaticTokenTreeBuilder(this).finish();

}

Location: CombinedTerm.java

Content: 

public boolean isPartial(){

  return term.isPartial();

}

