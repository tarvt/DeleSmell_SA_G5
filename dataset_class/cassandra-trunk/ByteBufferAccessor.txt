Location: ByteBufferAccessor.java

Content: 

private ByteBufferAccessor(){

}

Location: ByteBufferAccessor.java

Content: 

@Override public int compareByteArrayTo(byte[] left,ByteBuffer right){

  return ByteBufferUtil.compare(left,right);

}

Location: ByteBufferAccessor.java

Content: 

@Override public int compareByteBufferTo(ByteBuffer left,ByteBuffer right){

  return ByteBufferUtil.compareUnsigned(left,right);

}

Location: ByteBufferAccessor.java

Content: 

@Override public <V2>int compare(ByteBuffer left,V2 right,ValueAccessor<V2> accessorR){

  return accessorR.compareByteBufferTo(left,right);

}

Location: ByteBufferAccessor.java

Content: 

@Override public int copyByteArrayTo(byte[] src,int srcOffset,ByteBuffer dst,int dstOffset,int size){

  FastByteOperations.copy(src,srcOffset,dst,dst.position() + dstOffset,size);

  return size;

}

Location: ByteBufferAccessor.java

Content: 

@Override public int copyByteBufferTo(ByteBuffer src,int srcOffset,ByteBuffer dst,int dstOffset,int size){

  FastByteOperations.copy(src,src.position() + srcOffset,dst,dst.position() + dstOffset,size);

  return size;

}

Location: ByteBufferAccessor.java

Content: 

@Override public <V2>int copyTo(ByteBuffer src,int srcOffset,V2 dst,ValueAccessor<V2> dstAccessor,int dstOffset,int size){

  dstAccessor.copyByteBufferTo(src,srcOffset,dst,dstOffset,size);

  return size;

}

Location: ByteBufferAccessor.java

Content: 

@Override public void digest(ByteBuffer value,int offset,int size,Digest digest){

  digest.update(value,value.position() + offset,size);

}

Location: ByteBufferAccessor.java

Content: 

@Override public byte getByte(ByteBuffer value,int offset){

  return value.get(value.position() + offset);

}

Location: ByteBufferAccessor.java

Content: 

@Override public int getInt(ByteBuffer value,int offset){

  return value.getInt(value.position() + offset);

}

Location: ByteBufferAccessor.java

Content: 

@Override public long getLong(ByteBuffer value,int offset){

  return value.getLong(value.position() + offset);

}

Location: ByteBufferAccessor.java

Content: 

@Override public short getShort(ByteBuffer value,int offset){

  return value.getShort(value.position() + offset);

}

Location: ByteBufferAccessor.java

Content: 

@Override public int getUnsignedShort(ByteBuffer value,int offset){

  return ByteBufferUtil.getUnsignedShort(value,value.position() + offset);

}

Location: ByteBufferAccessor.java

Content: 

@Override public int putInt(ByteBuffer dst,int offset,int value){

  dst.putInt(dst.position() + offset,value);

  return TypeSizes.INT_SIZE;

}

Location: ByteBufferAccessor.java

Content: 

@Override public int putLong(ByteBuffer dst,int offset,long value){

  dst.putLong(dst.position() + offset,value);

  return TypeSizes.LONG_SIZE;

}

Location: ByteBufferAccessor.java

Content: 

@Override public int putShort(ByteBuffer dst,int offset,short value){

  dst.putShort(dst.position() + offset,value);

  return TypeSizes.SHORT_SIZE;

}

Location: ByteBufferAccessor.java

Content: 

@Override public int size(ByteBuffer value){

  return value.remaining();

}

Location: ByteBufferAccessor.java

Content: 

@Override public ByteBuffer slice(ByteBuffer input,int offset,int length){

  ByteBuffer copy=input.duplicate();

  copy.position(copy.position() + offset);

  copy.limit(copy.position() + length);

  return copy;

}

Location: ByteBufferAccessor.java

Content: 

@Override public byte[] toArray(ByteBuffer value){

  if (value == null)   return null;

  return ByteBufferUtil.getArray(value);

}

Location: ByteBufferAccessor.java

Content: 

@Override public byte[] toArray(ByteBuffer value,int offset,int length){

  if (value == null)   return null;

  return ByteBufferUtil.getArray(value,value.position() + offset,length);

}

Location: ByteBufferAccessor.java

Content: 

@Override public ByteBuffer toBuffer(ByteBuffer value){

  return value;

}

Location: ByteBufferAccessor.java

Content: 

@Override public byte toByte(ByteBuffer value){

  return ByteBufferUtil.toByte(value);

}

Location: ByteBufferAccessor.java

Content: 

@Override public String toHex(ByteBuffer value){

  return ByteBufferUtil.bytesToHex(value);

}

Location: ByteBufferAccessor.java

Content: 

@Override public String toString(ByteBuffer value,Charset charset) throws CharacterCodingException {

  return ByteBufferUtil.string(value,charset);

}

Location: ByteBufferAccessor.java

Content: 

@Override public UUID toUUID(ByteBuffer value){

  return UUIDGen.getUUID(value);

}

Location: ByteBufferAccessor.java

Content: 

@Override public void write(ByteBuffer value,ByteBuffer out){

  out.put(value.duplicate());

}

Location: ByteBufferAccessor.java

Content: 

@Override public void write(ByteBuffer value,DataOutputPlus out) throws IOException {

  out.write(value);

}

