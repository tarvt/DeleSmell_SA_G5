Location: FieldSelector.java

Content: 

private FieldSelector(UserType type,int field,Selector selected){

  this.type=type;

  this.field=field;

  this.selected=selected;

}

Location: FieldSelector.java

Content: 

public static Factory newFactory(final UserType type,final int field,final Selector.Factory factory){

  return new Factory(){

    protected String getColumnName(){

      return String.format("%s.%s",factory.getColumnName(),type.fieldName(field));

    }

    protected AbstractType<?> getReturnType(){

      return type.fieldType(field);

    }

    protected void addColumnMapping(    SelectionColumnMapping mapping,    ColumnSpecification resultsColumn){

      factory.addColumnMapping(mapping,resultsColumn);

    }

    public Selector newInstance(    QueryOptions options) throws InvalidRequestException {

      return new FieldSelector(type,field,factory.newInstance(options));

    }

    public boolean isAggregateSelectorFactory(){

      return factory.isAggregateSelectorFactory();

    }

    public boolean areAllFetchedColumnsKnown(){

      return factory.areAllFetchedColumnsKnown();

    }

    public void addFetchedColumns(    ColumnFilter.Builder builder){

      factory.addFetchedColumns(builder);

    }

  }

;

}

