Location: TemporalType.java

Content: 

/** 

 * Adds the duration to the specified value.

 * @param temporal the value to add to

 * @param duration the duration to add

 * @return the addition result

 */

public ByteBuffer addDuration(ByteBuffer temporal,ByteBuffer duration){

  long timeInMillis=toTimeInMillis(temporal);

  Duration d=DurationType.instance.compose(duration);

  validateDuration(d);

  return fromTimeInMillis(d.addTo(timeInMillis));

}

Location: TemporalType.java

Content: 

/** 

 * Returns the current temporal value.

 * @return the current temporal value.

 */

public ByteBuffer now(){

  return fromTimeInMillis(System.currentTimeMillis());

}

Location: TemporalType.java

Content: 

/** 

 * Substract the duration from the specified value.

 * @param temporal the value to substract from

 * @param duration the duration to substract

 * @return the substracion result

 */

public ByteBuffer substractDuration(ByteBuffer temporal,ByteBuffer duration){

  long timeInMillis=toTimeInMillis(temporal);

  Duration d=DurationType.instance.compose(duration);

  validateDuration(d);

  return fromTimeInMillis(d.substractFrom(timeInMillis));

}

Location: TemporalType.java

Content: 

protected TemporalType(ComparisonType comparisonType){

  super(comparisonType);

}

