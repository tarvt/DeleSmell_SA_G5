Location: RangeTombstoneBoundMarker.java

Content: 

/** 

 * The deletion time for the range tombstone this is a bound of.

 */

public DeletionTime deletionTime(){

  return deletion;

}

Location: RangeTombstoneBoundMarker.java

Content: 

public static <V>RangeTombstoneBoundMarker exclusiveClose(boolean reversed,ClusteringPrefix<V> from,DeletionTime deletion){

  return exclusiveClose(reversed,from.getRawValues(),from.accessor(),deletion);

}

Location: RangeTombstoneBoundMarker.java

Content: 

public static <V>RangeTombstoneBoundMarker exclusiveClose(boolean reversed,V[] boundValues,ValueAccessor<V> accessor,DeletionTime deletion){

  ClusteringBound<V> bound=accessor.factory().exclusiveClose(reversed,boundValues);

  return new RangeTombstoneBoundMarker(bound,deletion);

}

Location: RangeTombstoneBoundMarker.java

Content: 

public static <V>RangeTombstoneBoundMarker exclusiveOpen(boolean reversed,ClusteringPrefix<V> from,DeletionTime deletion){

  return exclusiveOpen(reversed,from.getRawValues(),from.accessor(),deletion);

}

Location: RangeTombstoneBoundMarker.java

Content: 

public static <V>RangeTombstoneBoundMarker exclusiveOpen(boolean reversed,V[] boundValues,ValueAccessor<V> accessor,DeletionTime deletion){

  ClusteringBound<V> bound=accessor.factory().exclusiveOpen(reversed,boundValues);

  return new RangeTombstoneBoundMarker(bound,deletion);

}

Location: RangeTombstoneBoundMarker.java

Content: 

public static <V>RangeTombstoneBoundMarker inclusiveClose(boolean reversed,ClusteringPrefix<V> from,DeletionTime deletion){

  return inclusiveClose(reversed,from.getRawValues(),from.accessor(),deletion);

}

Location: RangeTombstoneBoundMarker.java

Content: 

public static <V>RangeTombstoneBoundMarker inclusiveClose(boolean reversed,V[] boundValues,ValueAccessor<V> accessor,DeletionTime deletion){

  ClusteringBound<V> bound=accessor.factory().inclusiveClose(reversed,boundValues);

  return new RangeTombstoneBoundMarker(bound,deletion);

}

Location: RangeTombstoneBoundMarker.java

Content: 

public static <V>RangeTombstoneBoundMarker inclusiveOpen(boolean reversed,ClusteringPrefix<V> from,DeletionTime deletion){

  return inclusiveOpen(reversed,from.getRawValues(),from.accessor(),deletion);

}

Location: RangeTombstoneBoundMarker.java

Content: 

public static <V>RangeTombstoneBoundMarker inclusiveOpen(boolean reversed,V[] boundValues,ValueAccessor<V> accessor,DeletionTime deletion){

  ClusteringBound<V> bound=accessor.factory().inclusiveOpen(reversed,boundValues);

  return new RangeTombstoneBoundMarker(bound,deletion);

}

Location: RangeTombstoneBoundMarker.java

Content: 

public RangeTombstoneBoundMarker(ClusteringBound<?> bound,DeletionTime deletion){

  super(bound);

  this.deletion=deletion;

}

