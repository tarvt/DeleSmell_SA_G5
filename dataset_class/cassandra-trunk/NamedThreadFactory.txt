Location: NamedThreadFactory.java

Content: 

@VisibleForTesting public static Thread createThread(Runnable runnable){

  return createThread(null,runnable,"anonymous-" + threadCounter.incrementAndGet());

}

Location: NamedThreadFactory.java

Content: 

public static Thread createThread(Runnable runnable,String name){

  return createThread(null,runnable,name);

}

Location: NamedThreadFactory.java

Content: 

public static Thread createThread(Runnable runnable,String name,boolean daemon){

  return createThread(null,runnable,name,daemon);

}

Location: NamedThreadFactory.java

Content: 

public static Thread createThread(ThreadGroup threadGroup,Runnable runnable,String name){

  return createThread(threadGroup,runnable,name,false);

}

Location: NamedThreadFactory.java

Content: 

public static Thread createThread(ThreadGroup threadGroup,Runnable runnable,String name,boolean daemon){

  String prefix=globalPrefix;

  Thread thread=new FastThreadLocalThread(threadGroup,runnable,prefix != null ? prefix + name : name);

  thread.setDaemon(daemon);

  return thread;

}

Location: NamedThreadFactory.java

Content: 

public static String globalPrefix(){

  String prefix=globalPrefix;

  return prefix == null ? "" : prefix;

}

Location: NamedThreadFactory.java

Content: 

public NamedThreadFactory(String id){

  this(id,Thread.NORM_PRIORITY);

}

Location: NamedThreadFactory.java

Content: 

public NamedThreadFactory(String id,int priority){

  this(id,priority,null,null);

}

Location: NamedThreadFactory.java

Content: 

public NamedThreadFactory(String id,int priority,ClassLoader contextClassLoader,ThreadGroup threadGroup){

  this.id=id;

  this.priority=priority;

  this.contextClassLoader=contextClassLoader;

  this.threadGroup=threadGroup;

}

Location: NamedThreadFactory.java

Content: 

public Thread newThread(Runnable runnable){

  String name=id + ':' + n.getAndIncrement();

  Thread thread=createThread(threadGroup,runnable,name,true);

  thread.setPriority(priority);

  if (contextClassLoader != null)   thread.setContextClassLoader(contextClassLoader);

  return thread;

}

Location: NamedThreadFactory.java

Content: 

public static void setGlobalPrefix(String prefix){

  globalPrefix=prefix;

}

