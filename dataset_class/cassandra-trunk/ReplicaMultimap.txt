Location: ReplicaMultimap.java

Content: 

public Map<K,C> asMap(){

  return map;

}

Location: ReplicaMultimap.java

Content: 

public boolean containsKey(Object key){

  return map.containsKey(key);

}

Location: ReplicaMultimap.java

Content: 

public Set<Map.Entry<K,C>> entrySet(){

  return map.entrySet();

}

Location: ReplicaMultimap.java

Content: 

public Iterable<Map.Entry<K,Replica>> flattenEntries(){

  return () -> {

    Stream<Map.Entry<K,Replica>> s=map.entrySet().stream().flatMap(entry -> entry.getValue().stream().map(replica -> (Map.Entry<K,Replica>)new AbstractMap.SimpleImmutableEntry<>(entry.getKey(),replica)));

    return s.iterator();

  }

;

}

Location: ReplicaMultimap.java

Content: 

public Iterable<Replica> flattenValues(){

  return Iterables.concat(map.values());

}

Location: ReplicaMultimap.java

Content: 

public abstract C get(K key);

Location: ReplicaMultimap.java

Content: 

public Set<K> keySet(){

  return map.keySet();

}

Location: ReplicaMultimap.java

Content: 

ReplicaMultimap(Map<K,C> map){

  this.map=map;

}

