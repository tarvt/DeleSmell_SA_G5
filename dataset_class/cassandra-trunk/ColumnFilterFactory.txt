Location: ColumnFilterFactory.java

Content: 

public static ColumnFilterFactory fromColumns(TableMetadata table,List<ColumnMetadata> selectedColumns,Set<ColumnMetadata> orderingColumns,Set<ColumnMetadata> nonPKRestrictedColumns){

  ColumnFilter.Builder builder=ColumnFilter.allRegularColumnsBuilder(table);

  builder.addAll(selectedColumns);

  builder.addAll(orderingColumns);

  builder.addAll(nonPKRestrictedColumns);

  return new PrecomputedColumnFilter(builder.build());

}

Location: ColumnFilterFactory.java

Content: 

/** 

 * Creates a new  {@code ColumnFilterFactory} instance from the specified {@code SelectorFactories}.

 * @param table the table metadata

 * @param factories the {@code SelectorFactories}

 * @param orderingColumns the columns used for ordering

 * @param nonPKRestrictedColumns the non primary key columns that have been resticted in the WHERE clause

 * @return a new {@code ColumnFilterFactory} instance

 */

public static ColumnFilterFactory fromSelectorFactories(TableMetadata table,SelectorFactories factories,Set<ColumnMetadata> orderingColumns,Set<ColumnMetadata> nonPKRestrictedColumns){

  if (factories.areAllFetchedColumnsKnown()) {

    ColumnFilter.Builder builder=ColumnFilter.allRegularColumnsBuilder(table);

    factories.addFetchedColumns(builder);

    builder.addAll(orderingColumns);

    builder.addAll(nonPKRestrictedColumns);

    return new PrecomputedColumnFilter(builder.build());

  }

  return new OnRequestColumnFilterFactory(table,nonPKRestrictedColumns);

}

Location: ColumnFilterFactory.java

Content: 

/** 

 * Returns the  {@code ColumnFilter} instance corresponding to the specified selectors.

 * @param selectors the selectors for which the {@code ColumnFilter} must be created.

 * @return the {@code ColumnFilter} instance corresponding to the specified selectors

 */

abstract ColumnFilter newInstance(List<Selector> selectors);

Location: ColumnFilterFactory.java

Content: 

public static ColumnFilterFactory wildcard(TableMetadata table){

  return new PrecomputedColumnFilter(ColumnFilter.all(table));

}

