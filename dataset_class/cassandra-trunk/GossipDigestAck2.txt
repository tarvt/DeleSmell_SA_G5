Location: GossipDigestAck2.java

Content: 

Map<InetAddressAndPort,EndpointState> getEndpointStateMap(){

  return epStateMap;

}

Location: GossipDigestAck2.java

Content: 

GossipDigestAck2(Map<InetAddressAndPort,EndpointState> epStateMap){

  this.epStateMap=epStateMap;

}

Location: GossipDigestAck2.java

Content: 

public long serializedSize(GossipDigestAck2 ack2,int version){

  long size=TypeSizes.sizeof(ack2.epStateMap.size());

  for (  Map.Entry<InetAddressAndPort,EndpointState> entry : ack2.epStateMap.entrySet())   size+=inetAddressAndPortSerializer.serializedSize(entry.getKey(),version) + EndpointState.serializer.serializedSize(entry.getValue(),version);

  return size;

}

Location: GossipDigestAck2.java

Content: 

public void serialize(GossipDigestAck2 ack2,DataOutputPlus out,int version) throws IOException {

  out.writeInt(ack2.epStateMap.size());

  for (  Map.Entry<InetAddressAndPort,EndpointState> entry : ack2.epStateMap.entrySet()) {

    InetAddressAndPort ep=entry.getKey();

    inetAddressAndPortSerializer.serialize(ep,out,version);

    EndpointState.serializer.serialize(entry.getValue(),out,version);

  }

}

