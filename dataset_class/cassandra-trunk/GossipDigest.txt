Location: GossipDigest.java

Content: 

public int compareTo(GossipDigest gDigest){

  if (generation != gDigest.generation)   return (generation - gDigest.generation);

  return (maxVersion - gDigest.maxVersion);

}

Location: GossipDigest.java

Content: 

InetAddressAndPort getEndpoint(){

  return endpoint;

}

Location: GossipDigest.java

Content: 

int getMaxVersion(){

  return maxVersion;

}

Location: GossipDigest.java

Content: 

GossipDigest(InetAddressAndPort ep,int gen,int version){

  endpoint=ep;

  generation=gen;

  maxVersion=version;

}

Location: GossipDigest.java

Content: 

public long serializedSize(GossipDigest gDigest,int version){

  long size=inetAddressAndPortSerializer.serializedSize(gDigest.endpoint,version);

  size+=TypeSizes.sizeof(gDigest.generation);

  size+=TypeSizes.sizeof(gDigest.maxVersion);

  return size;

}

Location: GossipDigest.java

Content: 

public void serialize(GossipDigest gDigest,DataOutputPlus out,int version) throws IOException {

  inetAddressAndPortSerializer.serialize(gDigest.endpoint,out,version);

  out.writeInt(gDigest.generation);

  out.writeInt(gDigest.maxVersion);

}

