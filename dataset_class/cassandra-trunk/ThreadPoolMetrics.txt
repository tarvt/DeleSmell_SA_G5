Location: ThreadPoolMetrics.java

Content: 

private static MetricName makeMetricName(String path,String poolName,String metricName){

  return new MetricName("org.apache.cassandra.metrics","ThreadPools",metricName,path + '.' + poolName,format("org.apache.cassandra.metrics:type=ThreadPools,path=%s,scope=%s,name=%s",path,poolName,metricName));

}

Location: ThreadPoolMetrics.java

Content: 

public ThreadPoolMetrics register(){

  Metrics.register(makeMetricName(path,poolName,ACTIVE_TASKS),activeTasks);

  Metrics.register(makeMetricName(path,poolName,PENDING_TASKS),pendingTasks);

  Metrics.register(makeMetricName(path,poolName,COMPLETED_TASKS),completedTasks);

  Metrics.register(makeMetricName(path,poolName,CURRENTLY_BLOCKED_TASKS),currentBlocked);

  Metrics.register(makeMetricName(path,poolName,TOTAL_BLOCKED_TASKS),totalBlocked);

  Metrics.register(makeMetricName(path,poolName,MAX_POOL_SIZE),maxPoolSize);

  Metrics.register(makeMetricName(path,poolName,MAX_TASKS_QUEUED),maxTasksQueued);

  return Metrics.register(this);

}

Location: ThreadPoolMetrics.java

Content: 

/** 

 * Create metrics for given ThreadPoolExecutor.

 * @param executor Thread pool

 * @param path Type of thread pool

 * @param poolName Name of thread pool to identify metrics

 */

public ThreadPoolMetrics(LocalAwareExecutorService executor,String path,String poolName){

  this.path=path;

  this.poolName=poolName;

  totalBlocked=new Counter();

  currentBlocked=new Counter();

  activeTasks=executor::getActiveTaskCount;

  pendingTasks=executor::getPendingTaskCount;

  completedTasks=executor::getCompletedTaskCount;

  maxPoolSize=executor::getMaximumPoolSize;

  maxTasksQueued=executor::getMaxTasksQueued;

}

