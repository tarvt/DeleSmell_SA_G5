Location: SimpleBuilders.java

Content: 

private static Clustering<?> makeClustering(TableMetadata metadata,Object... clusteringColumns){

  if (clusteringColumns.length == 1 && clusteringColumns[0] instanceof Clustering)   return (Clustering<?>)clusteringColumns[0];

  if (clusteringColumns.length == 0) {

    assert metadata.comparator.size() == 0 || !metadata.staticColumns().isEmpty();

    return metadata.comparator.size() == 0 ? Clustering.EMPTY : Clustering.STATIC_CLUSTERING;

  }

 else {

    return metadata.comparator.make(clusteringColumns);

  }

}

Location: SimpleBuilders.java

Content: 

private static DecoratedKey makePartitonKey(TableMetadata metadata,Object... partitionKey){

  if (partitionKey.length == 1 && partitionKey[0] instanceof DecoratedKey)   return (DecoratedKey)partitionKey[0];

  ByteBuffer key=metadata.partitionKeyAsClusteringComparator().make(partitionKey).serializeAsPartitionKey();

  return metadata.partitioner.decorateKey(key);

}

Location: SimpleBuilders.java

Content: 

private SimpleBuilders(){

}

