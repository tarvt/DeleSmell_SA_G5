Location: ChunkCacheMetrics.java

Content: 

/** 

 * Create metrics for the provided chunk cache.

 * @param cache Chunk cache to measure metrics

 */

public ChunkCacheMetrics(ChunkCache cache){

  super("ChunkCache",cache);

  missLatency=Metrics.timer(factory.createMetricName("MissLatency"));

}

Location: ChunkCacheMetrics.java

Content: 

@Override public void recordEviction(){

}

Location: ChunkCacheMetrics.java

Content: 

@Override public void recordHits(int count){

  requests.mark(count);

  hits.mark(count);

}

Location: ChunkCacheMetrics.java

Content: 

@Override public void recordLoadFailure(long loadTime){

}

Location: ChunkCacheMetrics.java

Content: 

@Override public void recordLoadSuccess(long loadTime){

  missLatency.update(loadTime,TimeUnit.NANOSECONDS);

}

Location: ChunkCacheMetrics.java

Content: 

@Override public void recordMisses(int count){

  requests.mark(count);

  misses.mark(count);

}

Location: ChunkCacheMetrics.java

Content: 

@Nonnull @Override public CacheStats snapshot(){

  return new CacheStats(hits.getCount(),misses.getCount(),missLatency.getCount(),0L,missLatency.getCount(),0L,0L);

}

