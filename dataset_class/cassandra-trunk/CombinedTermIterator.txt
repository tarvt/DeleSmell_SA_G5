Location: CombinedTermIterator.java

Content: 

public CombinedTermIterator(Descriptor d,OnDiskIndex... parts){

  descriptor=d;

  union=OnDiskIndexIterator.union(parts);

  AbstractType<?> comparator=parts[0].getComparator();

  ByteBuffer minimum=parts[0].minTerm();

  ByteBuffer maximum=parts[0].maxTerm();

  for (int i=1; i < parts.length; i++) {

    OnDiskIndex part=parts[i];

    if (part == null)     continue;

    minimum=comparator.compare(minimum,part.minTerm()) > 0 ? part.minTerm() : minimum;

    maximum=comparator.compare(maximum,part.maxTerm()) < 0 ? part.maxTerm() : maximum;

  }

  min=minimum;

  max=maximum;

}

Location: CombinedTermIterator.java

Content: 

public CombinedTermIterator(OnDiskIndex... sas){

  this(Descriptor.CURRENT,sas);

}

Location: CombinedTermIterator.java

Content: 

public ByteBuffer maxTerm(){

  return max;

}

Location: CombinedTermIterator.java

Content: 

public ByteBuffer minTerm(){

  return min;

}

