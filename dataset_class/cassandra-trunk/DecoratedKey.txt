Location: DecoratedKey.java

Content: 

public static int compareTo(IPartitioner partitioner,ByteBuffer key,PartitionPosition position){

  if (!(position instanceof DecoratedKey))   return -position.compareTo(partitioner.decorateKey(key));

  DecoratedKey otherKey=(DecoratedKey)position;

  int cmp=partitioner.getToken(key).compareTo(otherKey.getToken());

  return cmp == 0 ? ByteBufferUtil.compareUnsigned(key,otherKey.getKey()) : cmp;

}

Location: DecoratedKey.java

Content: 

public int compareTo(PartitionPosition pos){

  if (this == pos)   return 0;

  if (!(pos instanceof DecoratedKey))   return -pos.compareTo(this);

  DecoratedKey otherKey=(DecoratedKey)pos;

  int cmp=getToken().compareTo(otherKey.getToken());

  return cmp == 0 ? ByteBufferUtil.compareUnsigned(getKey(),otherKey.getKey()) : cmp;

}

Location: DecoratedKey.java

Content: 

public DecoratedKey(Token token){

  assert token != null;

  this.token=token;

}

Location: DecoratedKey.java

Content: 

public void filterHash(long[] dest){

  ByteBuffer key=getKey();

  MurmurHash.hash3_x64_128(key,key.position(),key.remaining(),0,dest);

}

