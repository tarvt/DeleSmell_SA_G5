Location: Component.java

Content: 

public Component(Type type){

  this(type,type.repr);

  assert type != Type.CUSTOM;

}

Location: Component.java

Content: 

public Component(Type type,String name){

  assert name != null : "Component name cannot be null";

  this.type=type;

  this.name=name;

  this.hashCode=Objects.hashCode(type,name);

}

Location: Component.java

Content: 

/** 

 * @return The unique (within an sstable) name for this component.

 */

public String name(){

  return name;

}

Location: Component.java

Content: 

/** 

 * Parse the component part of a sstable filename into a  {@code Component} object.

 * @param name a string representing a sstable component.

 * @return the component corresponding to {@code name}. Note that this always return a component as an unrecognized name is parsed into a CUSTOM component.

 */

public static Component parse(String name){

  Type type=Type.fromRepresentation(name);

switch (type) {

case DATA:

    return Component.DATA;

case PRIMARY_INDEX:

  return Component.PRIMARY_INDEX;

case FILTER:

return Component.FILTER;

case COMPRESSION_INFO:

return Component.COMPRESSION_INFO;

case STATS:

return Component.STATS;

case DIGEST:

return Component.DIGEST;

case CRC:

return Component.CRC;

case SUMMARY:

return Component.SUMMARY;

case TOC:

return Component.TOC;

case SECONDARY_INDEX:

return new Component(Type.SECONDARY_INDEX,name);

case CUSTOM:

return new Component(Type.CUSTOM,name);

default :

throw new AssertionError();

}

}

