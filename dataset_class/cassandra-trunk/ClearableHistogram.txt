Location: ClearableHistogram.java

Content: 

/** 

 * Creates a new  {@link com.codahale.metrics.Histogram} with the given reservoir.

 * @param reservoir the reservoir to create a histogram from

 */

public ClearableHistogram(DecayingEstimatedHistogramReservoir reservoir){

  super(reservoir);

  this.reservoirRef=reservoir;

}

Location: ClearableHistogram.java

Content: 

private void clearCount(){

  try {

    Field countField=Histogram.class.getDeclaredField("count");

    countField.setAccessible(true);

    Object counter=countField.get(this);

    if (counter instanceof LongAdder) {

      ((LongAdder)counter).reset();

    }

 else {

      Method sumThenReset=counter.getClass().getDeclaredMethod("sumThenReset");

      sumThenReset.setAccessible(true);

      sumThenReset.invoke(counter);

    }

  }

 catch (  Exception e) {

    throw new IllegalStateException("Cannot reset the com.codahale.metrics.Histogram count. This might be due to a change of version of the metric library",e);

  }

}

