Location: FilteredPartitions.java

Content: 

FilteredPartitions(Filter filter,UnfilteredPartitions copyFrom){

  super(copyFrom);

  add(filter);

}

Location: FilteredPartitions.java

Content: 

FilteredPartitions(PartitionIterator input){

  super(input);

}

Location: FilteredPartitions.java

Content: 

FilteredPartitions(UnfilteredPartitionIterator input,Filter filter){

  super(input);

  add(filter);

}

Location: FilteredPartitions.java

Content: 

@SuppressWarnings("resource") public static FilteredPartitions filter(UnfilteredPartitionIterator iterator,Filter filter){

  return iterator instanceof UnfilteredPartitions ? new FilteredPartitions(filter,(UnfilteredPartitions)iterator) : new FilteredPartitions(iterator,filter);

}

Location: FilteredPartitions.java

Content: 

/** 

 * Filter any RangeTombstoneMarker from the iterator's iterators, transforming it into a PartitionIterator.

 */

@SuppressWarnings("resource") public static FilteredPartitions filter(UnfilteredPartitionIterator iterator,int nowInSecs){

  FilteredPartitions filtered=filter(iterator,new Filter(nowInSecs,iterator.metadata().enforceStrictLiveness()));

  return (FilteredPartitions)Transformation.apply(filtered,new EmptyPartitionsDiscarder());

}

