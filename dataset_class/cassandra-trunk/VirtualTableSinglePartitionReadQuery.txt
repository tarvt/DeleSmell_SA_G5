Location: VirtualTableSinglePartitionReadQuery.java

Content: 

@Override protected void appendCQLWhereClause(StringBuilder sb){

  sb.append(" WHERE ");

  sb.append(ColumnMetadata.toCQLString(metadata().partitionKeyColumns())).append(" = ");

  DataRange.appendKeyString(sb,metadata().partitionKeyType,partitionKey().getKey());

  if (!rowFilter().isEmpty())   sb.append(" AND ").append(rowFilter());

  String filterString=clusteringIndexFilter().toCQLString(metadata());

  if (!filterString.isEmpty())   sb.append(" AND ").append(filterString);

}

Location: VirtualTableSinglePartitionReadQuery.java

Content: 

@Override public ClusteringIndexFilter clusteringIndexFilter(){

  return clusteringIndexFilter;

}

Location: VirtualTableSinglePartitionReadQuery.java

Content: 

public static VirtualTableSinglePartitionReadQuery create(TableMetadata metadata,int nowInSec,ColumnFilter columnFilter,RowFilter rowFilter,DataLimits limits,DecoratedKey partitionKey,ClusteringIndexFilter clusteringIndexFilter){

  return new VirtualTableSinglePartitionReadQuery(metadata,nowInSec,columnFilter,rowFilter,limits,partitionKey,clusteringIndexFilter);

}

Location: VirtualTableSinglePartitionReadQuery.java

Content: 

@Override public SinglePartitionReadQuery forPaging(Clustering<?> lastReturned,DataLimits limits){

  return new VirtualTableSinglePartitionReadQuery(metadata(),nowInSec(),columnFilter(),rowFilter(),limits,partitionKey(),lastReturned == null ? clusteringIndexFilter : clusteringIndexFilter.forPaging(metadata().comparator,lastReturned,false));

}

Location: VirtualTableSinglePartitionReadQuery.java

Content: 

@Override protected UnfilteredPartitionIterator queryVirtualTable(){

  VirtualTable view=VirtualKeyspaceRegistry.instance.getTableNullable(metadata().id);

  return view.select(partitionKey,clusteringIndexFilter,columnFilter());

}

Location: VirtualTableSinglePartitionReadQuery.java

Content: 

@Override public boolean selectsFullPartition(){

  return clusteringIndexFilter.selectsAllPartition() && !rowFilter().hasExpressionOnClusteringOrRegularColumns();

}

Location: VirtualTableSinglePartitionReadQuery.java

Content: 

private VirtualTableSinglePartitionReadQuery(TableMetadata metadata,int nowInSec,ColumnFilter columnFilter,RowFilter rowFilter,DataLimits limits,DecoratedKey partitionKey,ClusteringIndexFilter clusteringIndexFilter){

  super(metadata,nowInSec,columnFilter,rowFilter,limits);

  this.partitionKey=partitionKey;

  this.clusteringIndexFilter=clusteringIndexFilter;

}

Location: VirtualTableSinglePartitionReadQuery.java

Content: 

@Override public SinglePartitionReadQuery withUpdatedLimit(DataLimits newLimits){

  return new VirtualTableSinglePartitionReadQuery(metadata(),nowInSec(),columnFilter(),rowFilter(),newLimits,partitionKey(),clusteringIndexFilter);

}

