Location: FutureDelegate.java

Content: 

public Future<V> addListeners(GenericFutureListener<? extends Future<? super V>>... genericFutureListeners){

  return delegate.addListeners(genericFutureListeners);

}

Location: FutureDelegate.java

Content: 

public Future<V> addListener(GenericFutureListener<? extends Future<? super V>> genericFutureListener){

  return delegate.addListener(genericFutureListener);

}

Location: FutureDelegate.java

Content: 

public Future<V> await() throws InterruptedException {

  return delegate.await();

}

Location: FutureDelegate.java

Content: 

public Future<V> awaitUninterruptibly(){

  return delegate.awaitUninterruptibly();

}

Location: FutureDelegate.java

Content: 

public boolean awaitUninterruptibly(long l){

  return delegate.awaitUninterruptibly(l);

}

Location: FutureDelegate.java

Content: 

public boolean awaitUninterruptibly(long l,TimeUnit timeUnit){

  return delegate.awaitUninterruptibly(l,timeUnit);

}

Location: FutureDelegate.java

Content: 

public boolean await(long l) throws InterruptedException {

  return delegate.await(l);

}

Location: FutureDelegate.java

Content: 

public boolean await(long l,TimeUnit timeUnit) throws InterruptedException {

  return delegate.await(l,timeUnit);

}

Location: FutureDelegate.java

Content: 

public Throwable cause(){

  return delegate.cause();

}

Location: FutureDelegate.java

Content: 

FutureDelegate(Future<V> delegate){

  this.delegate=delegate;

}

Location: FutureDelegate.java

Content: 

public V getNow(){

  return delegate.getNow();

}

Location: FutureDelegate.java

Content: 

public V get(long timeout,TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {

  return delegate.get(timeout,unit);

}

Location: FutureDelegate.java

Content: 

public boolean isCancellable(){

  return delegate.isCancellable();

}

Location: FutureDelegate.java

Content: 

public boolean isCancelled(){

  return delegate.isCancelled();

}

Location: FutureDelegate.java

Content: 

public boolean isDone(){

  return delegate.isDone();

}

Location: FutureDelegate.java

Content: 

public boolean isSuccess(){

  return delegate.isSuccess();

}

Location: FutureDelegate.java

Content: 

public Future<V> removeListeners(GenericFutureListener<? extends Future<? super V>>... genericFutureListeners){

  return delegate.removeListeners(genericFutureListeners);

}

Location: FutureDelegate.java

Content: 

public Future<V> removeListener(GenericFutureListener<? extends Future<? super V>> genericFutureListener){

  return delegate.removeListener(genericFutureListener);

}

Location: FutureDelegate.java

Content: 

public Future<V> sync() throws InterruptedException {

  return delegate.sync();

}

Location: FutureDelegate.java

Content: 

public Future<V> syncUninterruptibly(){

  return delegate.syncUninterruptibly();

}

