Location: WritetimeOrTTLSelector.java

Content: 

public static Factory newFactory(final ColumnMetadata def,final int idx,final boolean isWritetime){

  return new Factory(){

    protected String getColumnName(){

      return String.format("%s(%s)",isWritetime ? "writetime" : "ttl",def.name.toString());

    }

    protected AbstractType<?> getReturnType(){

      return isWritetime ? LongType.instance : Int32Type.instance;

    }

    protected void addColumnMapping(    SelectionColumnMapping mapping,    ColumnSpecification resultsColumn){

      mapping.addMapping(resultsColumn,def);

    }

    public Selector newInstance(    QueryOptions options){

      return new WritetimeOrTTLSelector(def,idx,isWritetime);

    }

    public boolean isWritetimeSelectorFactory(){

      return isWritetime;

    }

    public boolean isTTLSelectorFactory(){

      return !isWritetime;

    }

    public boolean areAllFetchedColumnsKnown(){

      return true;

    }

    public void addFetchedColumns(    ColumnFilter.Builder builder){

      builder.add(def);

    }

  }

;

}

Location: WritetimeOrTTLSelector.java

Content: 

private WritetimeOrTTLSelector(ColumnMetadata column,int idx,boolean isWritetime){

  this.column=column;

  this.idx=idx;

  this.isWritetime=isWritetime;

}

