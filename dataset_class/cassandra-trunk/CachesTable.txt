Location: CachesTable.java

Content: 

private void addRow(SimpleDataSet result,String name,CacheMetrics metrics){

  result.row(name).column(CAPACITY_BYTES,metrics.capacity.getValue()).column(SIZE_BYTES,metrics.size.getValue()).column(ENTRY_COUNT,metrics.entries.getValue()).column(REQUEST_COUNT,metrics.requests.getCount()).column(HIT_COUNT,metrics.hits.getCount()).column(HIT_RATIO,metrics.hitRate.getValue()).column(RECENT_REQUEST_RATE_PER_SECOND,(long)metrics.requests.getFifteenMinuteRate()).column(RECENT_HIT_RATE_PER_SECOND,(long)metrics.hits.getFifteenMinuteRate());

}

Location: CachesTable.java

Content: 

CachesTable(String keyspace){

  super(TableMetadata.builder(keyspace,"caches").comment("system caches").kind(TableMetadata.Kind.VIRTUAL).partitioner(new LocalPartitioner(UTF8Type.instance)).addPartitionKeyColumn(NAME,UTF8Type.instance).addRegularColumn(CAPACITY_BYTES,LongType.instance).addRegularColumn(SIZE_BYTES,LongType.instance).addRegularColumn(ENTRY_COUNT,Int32Type.instance).addRegularColumn(REQUEST_COUNT,LongType.instance).addRegularColumn(HIT_COUNT,LongType.instance).addRegularColumn(HIT_RATIO,DoubleType.instance).addRegularColumn(RECENT_REQUEST_RATE_PER_SECOND,LongType.instance).addRegularColumn(RECENT_HIT_RATE_PER_SECOND,LongType.instance).build());

}

