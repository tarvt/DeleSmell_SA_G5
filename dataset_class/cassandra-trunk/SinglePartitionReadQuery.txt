Location: SinglePartitionReadQuery.java

Content: 

public static Group<? extends SinglePartitionReadQuery> createGroup(TableMetadata metadata,int nowInSec,ColumnFilter columnFilter,RowFilter rowFilter,DataLimits limits,List<DecoratedKey> partitionKeys,ClusteringIndexFilter clusteringIndexFilter){

  return metadata.isVirtual() ? VirtualTableSinglePartitionReadQuery.Group.create(metadata,nowInSec,columnFilter,rowFilter,limits,partitionKeys,clusteringIndexFilter) : SinglePartitionReadCommand.Group.create(metadata,nowInSec,columnFilter,rowFilter,limits,partitionKeys,clusteringIndexFilter);

}

Location: SinglePartitionReadQuery.java

Content: 

@Override default SinglePartitionPager getPager(PagingState pagingState,ProtocolVersion protocolVersion){

  return new SinglePartitionPager(this,pagingState,protocolVersion);

}

Location: SinglePartitionReadQuery.java

Content: 

default boolean selectsClustering(DecoratedKey key,Clustering<?> clustering){

  if (clustering == Clustering.STATIC_CLUSTERING)   return !columnFilter().fetchedColumns().statics.isEmpty();

  if (!clusteringIndexFilter().selects(clustering))   return false;

  return rowFilter().clusteringKeyRestrictionsAreSatisfiedBy(clustering);

}

Location: SinglePartitionReadQuery.java

Content: 

default boolean selectsKey(DecoratedKey key){

  if (!this.partitionKey().equals(key))   return false;

  return rowFilter().partitionKeyRestrictionsAreSatisfiedBy(key,metadata().partitionKeyType);

}

