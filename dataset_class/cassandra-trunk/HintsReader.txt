Location: HintsReader.java

Content: 

public ChecksummedDataInput getInput(){

  return input;

}

Location: HintsReader.java

Content: 

protected HintsReader(HintsDescriptor descriptor,File file,ChecksummedDataInput reader,RateLimiter rateLimiter){

  this.descriptor=descriptor;

  this.file=file;

  this.input=reader;

  this.rateLimiter=rateLimiter;

}

Location: HintsReader.java

Content: 

@SuppressWarnings("resource") static HintsReader open(File file,RateLimiter rateLimiter){

  ChecksummedDataInput reader=ChecksummedDataInput.open(file);

  try {

    HintsDescriptor descriptor=HintsDescriptor.deserialize(reader);

    if (descriptor.isCompressed()) {

      reader=CompressedChecksummedDataInput.upgradeInput(reader,descriptor.createCompressor());

    }

 else     if (descriptor.isEncrypted())     reader=EncryptedChecksummedDataInput.upgradeInput(reader,descriptor.getCipher(),descriptor.createCompressor());

    return new HintsReader(descriptor,file,reader,rateLimiter);

  }

 catch (  IOException e) {

    reader.close();

    throw new FSReadError(e,file);

  }

}

