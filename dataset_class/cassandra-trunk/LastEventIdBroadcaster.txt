Location: LastEventIdBroadcaster.java

Content: 

public synchronized void addNotificationListener(NotificationListener listener,NotificationFilter filter,Object handback){

  super.addNotificationListener(listener,filter,handback);

  if (scheduledPeriodicalBroadcast.get() == null) {

    ScheduledFuture<?> scheduledFuture=ScheduledExecutors.scheduledTasks.scheduleAtFixedRate(this::broadcastEventIds,PERIODIC_BROADCAST_INTERVAL_MILLIS,PERIODIC_BROADCAST_INTERVAL_MILLIS,TimeUnit.MILLISECONDS);

    if (!this.scheduledPeriodicalBroadcast.compareAndSet(null,scheduledFuture))     scheduledFuture.cancel(false);

  }

}

Location: LastEventIdBroadcaster.java

Content: 

private void broadcastEventIds(){

  if (!summary.isEmpty())   broadcastEventIds(summary);

}

Location: LastEventIdBroadcaster.java

Content: 

private void broadcastEventIds(Map<String,Comparable> summary){

  Notification notification=new Notification("event_last_id_summary","LastEventIdBroadcaster",notificationSerialNumber.incrementAndGet(),System.currentTimeMillis(),"Event last IDs summary");

  notification.setUserData(summary);

  sendNotification(notification);

}

Location: LastEventIdBroadcaster.java

Content: 

private LastEventIdBroadcaster(){

  super(JMXBroadcastExecutor.executor);

  summary.put("last_updated_at",0L);

  MBeanWrapper.instance.registerMBean(this,"org.apache.cassandra.diag:type=LastEventIdBroadcaster");

}

Location: LastEventIdBroadcaster.java

Content: 

private void scheduleBroadcast(){

  ScheduledFuture<?> running=scheduledShortTermBroadcast.get();

  if (running == null || running.isDone()) {

    ScheduledFuture<?> scheduledFuture=ScheduledExecutors.scheduledTasks.schedule((Runnable)this::broadcastEventIds,SHORT_TERM_BROADCAST_DELAY_MILLIS,TimeUnit.MILLISECONDS);

    if (!this.scheduledShortTermBroadcast.compareAndSet(running,scheduledFuture))     scheduledFuture.cancel(false);

  }

}

Location: LastEventIdBroadcaster.java

Content: 

public void setLastEventId(String key,Comparable id){

  if (summary.compute(key,(k,v) -> v == null ? id : id.compareTo(v) > 0 ? id : v) == id) {

    summary.put("last_updated_at",System.currentTimeMillis());

    scheduleBroadcast();

  }

}

