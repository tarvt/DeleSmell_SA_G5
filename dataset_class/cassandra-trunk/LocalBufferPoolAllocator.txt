Location: LocalBufferPoolAllocator.java

Content: 

@Override ByteBuffer getAtLeast(int size){

  if (!eventLoop.inEventLoop())   throw new IllegalStateException("getAtLeast() called from outside of owning event loop");

  return pool.getAtLeast(size);

}

Location: LocalBufferPoolAllocator.java

Content: 

@Override ByteBuffer get(int size){

  if (!eventLoop.inEventLoop())   throw new IllegalStateException("get() called from outside of owning event loop");

  return pool.get(size);

}

Location: LocalBufferPoolAllocator.java

Content: 

LocalBufferPoolAllocator(EventLoop eventLoop){

  this.pool=BufferPools.forNetworking().create().recycleWhenFree(false);

  this.eventLoop=eventLoop;

}

Location: LocalBufferPoolAllocator.java

Content: 

@Override public void release(){

  pool.release();

}

