Location: BatchUpdatesCollector.java

Content: 

BatchUpdatesCollector(Map<TableId,RegularAndStaticColumns> updatedColumns,int updatedRows){

  super();

  this.updatedColumns=updatedColumns;

  this.updatedRows=updatedRows;

}

Location: BatchUpdatesCollector.java

Content: 

private IMutationBuilder getMutationBuilder(TableMetadata metadata,DecoratedKey dk,ConsistencyLevel consistency){

  return keyspaceMap(metadata.keyspace).computeIfAbsent(dk.getKey(),k -> makeMutationBuilder(metadata,dk,consistency));

}

Location: BatchUpdatesCollector.java

Content: 

/** 

 * Returns the key-mutation mappings for the specified keyspace.

 * @param ksName the keyspace name

 * @return the key-mutation mappings for the specified keyspace.

 */

private Map<ByteBuffer,IMutationBuilder> keyspaceMap(String ksName){

  return mutationBuilders.computeIfAbsent(ksName,k -> new HashMap<>());

}

Location: BatchUpdatesCollector.java

Content: 

private IMutationBuilder makeMutationBuilder(TableMetadata metadata,DecoratedKey partitionKey,ConsistencyLevel cl){

  if (metadata.isVirtual()) {

    return new VirtualMutationBuilder(metadata.keyspace,partitionKey);

  }

 else {

    MutationBuilder builder=new MutationBuilder(metadata.keyspace,partitionKey);

    return metadata.isCounter() ? new CounterMutationBuilder(builder,cl) : builder;

  }

}

