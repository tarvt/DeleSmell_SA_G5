Location: CassandraCompressedStreamWriter.java

Content: 

public CassandraCompressedStreamWriter(SSTableReader sstable,CassandraStreamHeader header,StreamSession session){

  super(sstable,header,session);

  this.compressionInfo=header.compressionInfo;

  this.totalSize=header.size();

}

Location: CassandraCompressedStreamWriter.java

Content: 

private List<Section> fuseAdjacentChunks(CompressionMetadata.Chunk[] chunks){

  if (chunks.length == 0)   return Collections.emptyList();

  long start=chunks[0].offset;

  long end=start + chunks[0].length + CRC_LENGTH;

  List<Section> sections=new ArrayList<>();

  for (int i=1; i < chunks.length; i++) {

    CompressionMetadata.Chunk chunk=chunks[i];

    if (chunk.offset == end) {

      end+=(chunk.length + CRC_LENGTH);

    }

 else {

      sections.add(new Section(start,end));

      start=chunk.offset;

      end=start + chunk.length + CRC_LENGTH;

    }

  }

  sections.add(new Section(start,end));

  return sections;

}

