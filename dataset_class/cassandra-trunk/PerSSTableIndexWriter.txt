Location: PerSSTableIndexWriter.java

Content: 

public Descriptor getDescriptor(){

  return descriptor;

}

Location: PerSSTableIndexWriter.java

Content: 

public Index getIndex(ColumnMetadata columnDef){

  return indexes.get(columnDef);

}

Location: PerSSTableIndexWriter.java

Content: 

protected long maxMemorySize(ColumnIndex columnIndex){

  return source == OperationType.FLUSH ? 1073741824L : columnIndex.getMode().maxCompactionFlushMemoryInBytes;

}

Location: PerSSTableIndexWriter.java

Content: 

@VisibleForTesting protected Index newIndex(ColumnIndex columnIndex){

  return new Index(columnIndex);

}

Location: PerSSTableIndexWriter.java

Content: 

public PerSSTableIndexWriter(AbstractType<?> keyValidator,Descriptor descriptor,OperationType source,Map<ColumnMetadata,ColumnIndex> supportedIndexes){

  this.keyValidator=keyValidator;

  this.descriptor=descriptor;

  this.source=source;

  this.indexes=Maps.newHashMapWithExpectedSize(supportedIndexes.size());

  for (  Map.Entry<ColumnMetadata,ColumnIndex> entry : supportedIndexes.entrySet())   indexes.put(entry.getKey(),newIndex(entry.getValue()));

}

