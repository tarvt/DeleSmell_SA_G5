Location: DataInputBuffer.java

Content: 

public DataInputBuffer(byte[] buffer){

  super(ByteBuffer.wrap(buffer));

}

Location: DataInputBuffer.java

Content: 

/** 

 * @param buffer

 * @param duplicate Whether or not to duplicate the buffer to ensure thread safety

 */

public DataInputBuffer(ByteBuffer buffer,boolean duplicate){

  super(duplicate ? buffer.duplicate() : buffer);

}

Location: DataInputBuffer.java

Content: 

public DataInputBuffer(byte[] buffer,int offset,int length){

  super(slice(buffer,offset,length));

}

Location: DataInputBuffer.java

Content: 

private static ByteBuffer slice(byte[] buffer,int offset,int length){

  ByteBuffer buf=ByteBuffer.wrap(buffer);

  if (offset > 0 || length < buf.capacity()) {

    buf.position(offset);

    buf.limit(offset + length);

    buf=buf.slice();

  }

  return buf;

}

