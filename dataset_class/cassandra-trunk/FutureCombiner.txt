Location: FutureCombiner.java

Content: 

FutureCombiner(Collection<? extends Future<?>> combine){

  this(AsyncPromise.uncancellable(GlobalEventExecutor.INSTANCE),combine);

}

Location: FutureCombiner.java

Content: 

private FutureCombiner(Promise<Void> combined,Collection<? extends Future<?>> combine){

  super(combined);

  if (0 == (waitingOn=combine.size()))   combined.trySuccess(null);

  GenericFutureListener<? extends Future<Object>> listener=result -> {

    if (!result.isSuccess()) {

      firstCauseUpdater.compareAndSet(this,null,result.cause());

      failed=true;

    }

    if (0 == waitingOnUpdater.decrementAndGet(this)) {

      if (failed)       combined.tryFailure(firstCause);

 else       combined.trySuccess(null);

    }

  }

;

  for (  Future<?> future : combine)   future.addListener(listener);

}

