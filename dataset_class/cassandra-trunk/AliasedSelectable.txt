Location: AliasedSelectable.java

Content: 

public AliasedSelectable(Selectable selectable,ColumnIdentifier alias){

  this.selectable=selectable;

  this.alias=alias;

}

Location: AliasedSelectable.java

Content: 

@Override public AbstractType<?> getExactTypeIfKnown(String keyspace){

  return selectable.getExactTypeIfKnown(keyspace);

}

Location: AliasedSelectable.java

Content: 

@Override public Factory newSelectorFactory(TableMetadata table,AbstractType<?> expectedType,List<ColumnMetadata> defs,VariableSpecifications boundNames){

  final Factory delegate=selectable.newSelectorFactory(table,expectedType,defs,boundNames);

  final ColumnSpecification columnSpec=delegate.getColumnSpecification(table).withAlias(alias);

  return new ForwardingFactory(){

    @Override protected Factory delegate(){

      return delegate;

    }

    @Override public ColumnSpecification getColumnSpecification(    TableMetadata table){

      return columnSpec;

    }

  }

;

}

Location: AliasedSelectable.java

Content: 

@Override public boolean selectColumns(Predicate<ColumnMetadata> predicate){

  return selectable.selectColumns(predicate);

}

