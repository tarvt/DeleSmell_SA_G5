Location: BasePartitions.java

Content: 

void add(Transformation transformation){

  transformation.attachTo(this);

  super.add(transformation);

  next=applyOne(next,transformation);

}

Location: BasePartitions.java

Content: 

protected BaseRowIterator<?> applyOne(BaseRowIterator<?> value,Transformation transformation){

  return value == null ? null : transformation.applyToPartition(value);

}

Location: BasePartitions.java

Content: 

BasePartitions(BasePartitions<?,? extends I> copyFrom){

  super(copyFrom);

}

Location: BasePartitions.java

Content: 

public BasePartitions(I input){

  super(input);

}

Location: BasePartitions.java

Content: 

protected Throwable runOnClose(int length){

  Throwable fail=null;

  Transformation[] fs=stack;

  for (int i=0; i < length; i++) {

    try {

      fs[i].onClose();

    }

 catch (    Throwable t) {

      fail=merge(fail,t);

    }

  }

  return fail;

}

