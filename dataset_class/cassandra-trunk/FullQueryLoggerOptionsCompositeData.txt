Location: FullQueryLoggerOptionsCompositeData.java

Content: 

public static FullQueryLoggerOptions fromCompositeData(final CompositeData data){

  assert data.getCompositeType().equals(COMPOSITE_TYPE);

  final Object[] values=data.getAll(ITEM_NAMES);

  final FullQueryLoggerOptions options=new FullQueryLoggerOptions();

  options.log_dir=(String)values[0];

  options.archive_command=(String)values[1];

  options.roll_cycle=(String)values[2];

  options.block=(Boolean)values[3];

  options.max_queue_weight=(Integer)values[4];

  options.max_log_size=(Long)values[5];

  options.max_archive_retries=(Integer)values[6];

  return options;

}

Location: FullQueryLoggerOptionsCompositeData.java

Content: 

public static CompositeData toCompositeData(final FullQueryLoggerOptions options){

  Map<String,Object> valueMap=new HashMap<>();

  valueMap.put(ITEM_NAMES[0],options.log_dir);

  valueMap.put(ITEM_NAMES[1],options.archive_command);

  valueMap.put(ITEM_NAMES[2],options.roll_cycle);

  valueMap.put(ITEM_NAMES[3],options.block);

  valueMap.put(ITEM_NAMES[4],options.max_queue_weight);

  valueMap.put(ITEM_NAMES[5],options.max_log_size);

  valueMap.put(ITEM_NAMES[6],options.max_archive_retries);

  try {

    return new CompositeDataSupport(COMPOSITE_TYPE,valueMap);

  }

 catch (  final OpenDataException e) {

    throw new RuntimeException(e);

  }

}

