Location: SSTableIndex.java

Content: 

public SSTableReader getSSTable(){

  return sstable;

}

Location: SSTableIndex.java

Content: 

public boolean isObsolete(){

  return obsolete.get();

}

Location: SSTableIndex.java

Content: 

public void markObsolete(){

  obsolete.getAndSet(true);

  release();

}

Location: SSTableIndex.java

Content: 

public boolean reference(){

  while (true) {

    int n=references.get();

    if (n <= 0)     return false;

    if (references.compareAndSet(n,n + 1))     return true;

  }

}

Location: SSTableIndex.java

Content: 

public SSTableIndex(ColumnIndex index,File indexFile,SSTableReader referent){

  this.columnIndex=index;

  this.sstableRef=referent.tryRef();

  this.sstable=sstableRef.get();

  if (sstable == null)   throw new IllegalStateException("Couldn't acquire reference to the sstable: " + referent);

  AbstractType<?> validator=columnIndex.getValidator();

  assert validator != null;

  assert indexFile.exists() : String.format("SSTable %s should have index %s.",sstable.getFilename(),columnIndex.getIndexName());

  this.index=new OnDiskIndex(indexFile,validator,new DecoratedKeyFetcher(sstable));

}

