Location: SelectionColumnMapping.java

Content: 

protected SelectionColumnMapping addMapping(ColumnSpecification colSpec,ColumnMetadata column){

  columnSpecifications.add(colSpec);

  if (column != null)   columnMappings.put(colSpec,column);

  return this;

}

Location: SelectionColumnMapping.java

Content: 

protected SelectionColumnMapping addMapping(ColumnSpecification colSpec,Iterable<ColumnMetadata> columns){

  columnSpecifications.add(colSpec);

  columnMappings.putAll(colSpec,columns);

  return this;

}

Location: SelectionColumnMapping.java

Content: 

public List<ColumnSpecification> getColumnSpecifications(){

  return Lists.newArrayList(columnSpecifications);

}

Location: SelectionColumnMapping.java

Content: 

public Multimap<ColumnSpecification,ColumnMetadata> getMappings(){

  return Multimaps.unmodifiableMultimap(columnMappings);

}

Location: SelectionColumnMapping.java

Content: 

protected static SelectionColumnMapping newMapping(){

  return new SelectionColumnMapping();

}

Location: SelectionColumnMapping.java

Content: 

private SelectionColumnMapping(){

  this.columnSpecifications=new ArrayList<>();

  this.columnMappings=HashMultimap.create();

}

Location: SelectionColumnMapping.java

Content: 

protected static SelectionColumnMapping simpleMapping(Iterable<ColumnMetadata> columnDefinitions){

  SelectionColumnMapping mapping=new SelectionColumnMapping();

  for (  ColumnMetadata def : columnDefinitions)   mapping.addMapping(def,def);

  return mapping;

}

