Location: PurgeFunction.java

Content: 

protected abstract LongPredicate getPurgeEvaluator();

Location: PurgeFunction.java

Content: 

protected void onEmptyPartitionPostPurge(DecoratedKey partitionKey){

}

Location: PurgeFunction.java

Content: 

protected void onNewPartition(DecoratedKey partitionKey){

}

Location: PurgeFunction.java

Content: 

public PurgeFunction(int nowInSec,int gcBefore,int oldestUnrepairedTombstone,boolean onlyPurgeRepairedTombstones,boolean enforceStrictLiveness){

  this.nowInSec=nowInSec;

  this.purger=(timestamp,localDeletionTime) -> !(onlyPurgeRepairedTombstones && localDeletionTime >= oldestUnrepairedTombstone) && localDeletionTime < gcBefore && getPurgeEvaluator().test(timestamp);

  this.enforceStrictLiveness=enforceStrictLiveness;

}

Location: PurgeFunction.java

Content: 

protected void setReverseOrder(boolean isReverseOrder){

  this.isReverseOrder=isReverseOrder;

}

Location: PurgeFunction.java

Content: 

protected void updateProgress(){

}

