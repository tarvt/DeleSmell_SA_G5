Location: WrappedLifecycleTransaction.java

Content: 

public SSTableReader current(SSTableReader reader){

  return delegate.current(reader);

}

Location: WrappedLifecycleTransaction.java

Content: 

public boolean isObsolete(SSTableReader reader){

  return delegate.isObsolete(reader);

}

Location: WrappedLifecycleTransaction.java

Content: 

public boolean isOffline(){

  return delegate.isOffline();

}

Location: WrappedLifecycleTransaction.java

Content: 

public void obsoleteOriginals(){

  delegate.obsoleteOriginals();

}

Location: WrappedLifecycleTransaction.java

Content: 

public void obsolete(SSTableReader reader){

  delegate.obsolete(reader);

}

Location: WrappedLifecycleTransaction.java

Content: 

public OperationType opType(){

  return delegate.opType();

}

Location: WrappedLifecycleTransaction.java

Content: 

public Set<SSTableReader> originals(){

  return delegate.originals();

}

Location: WrappedLifecycleTransaction.java

Content: 

public void trackNew(SSTable table){

  delegate.trackNew(table);

}

Location: WrappedLifecycleTransaction.java

Content: 

public void untrackNew(SSTable table){

  delegate.untrackNew(table);

}

Location: WrappedLifecycleTransaction.java

Content: 

public void update(Collection<SSTableReader> readers,boolean original){

  delegate.update(readers,original);

}

Location: WrappedLifecycleTransaction.java

Content: 

public void update(SSTableReader reader,boolean original){

  delegate.update(reader,original);

}

Location: WrappedLifecycleTransaction.java

Content: 

public WrappedLifecycleTransaction(ILifecycleTransaction delegate){

  this.delegate=delegate;

}

