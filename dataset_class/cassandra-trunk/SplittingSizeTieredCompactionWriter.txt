Location: SplittingSizeTieredCompactionWriter.java

Content: 

public SplittingSizeTieredCompactionWriter(ColumnFamilyStore cfs,Directories directories,LifecycleTransaction txn,Set<SSTableReader> nonExpiredSSTables){

  this(cfs,directories,txn,nonExpiredSSTables,DEFAULT_SMALLEST_SSTABLE_BYTES);

}

Location: SplittingSizeTieredCompactionWriter.java

Content: 

public SplittingSizeTieredCompactionWriter(ColumnFamilyStore cfs,Directories directories,LifecycleTransaction txn,Set<SSTableReader> nonExpiredSSTables,long smallestSSTable){

  super(cfs,directories,txn,nonExpiredSSTables,false,false);

  this.allSSTables=txn.originals();

  totalSize=cfs.getExpectedCompactedFileSize(nonExpiredSSTables,txn.opType());

  double[] potentialRatios=new double[20];

  double currentRatio=1;

  for (int i=0; i < potentialRatios.length; i++) {

    currentRatio/=2;

    potentialRatios[i]=currentRatio;

  }

  int noPointIndex=0;

  for (  double ratio : potentialRatios) {

    noPointIndex++;

    if (ratio * totalSize < smallestSSTable) {

      break;

    }

  }

  ratios=Arrays.copyOfRange(potentialRatios,0,noPointIndex);

  currentBytesToWrite=Math.round(totalSize * ratios[currentRatioIndex]);

}

