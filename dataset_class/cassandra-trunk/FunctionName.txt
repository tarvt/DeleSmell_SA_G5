Location: FunctionName.java

Content: 

public void appendCqlTo(CqlBuilder builder){

  if (equalsNativeFunction(TOKEN_FUNCTION_NAME)) {

    builder.append(name);

  }

 else {

    if (keyspace != null) {

      builder.appendQuotingIfNeeded(keyspace).append('.');

    }

    builder.appendQuotingIfNeeded(name);

  }

}

Location: FunctionName.java

Content: 

public FunctionName asNativeFunction(){

  return FunctionName.nativeFunction(name);

}

Location: FunctionName.java

Content: 

public final boolean equalsNativeFunction(FunctionName nativeFunction){

  assert nativeFunction.keyspace.equals(SchemaConstants.SYSTEM_KEYSPACE_NAME);

  if (this.hasKeyspace() && !this.keyspace.equals(SchemaConstants.SYSTEM_KEYSPACE_NAME))   return false;

  return Objects.equal(this.name,nativeFunction.name);

}

Location: FunctionName.java

Content: 

public FunctionName(String keyspace,String name){

  assert name != null : "Name parameter must not be null";

  this.keyspace=keyspace;

  this.name=name;

}

Location: FunctionName.java

Content: 

public boolean hasKeyspace(){

  return keyspace != null;

}

Location: FunctionName.java

Content: 

public static FunctionName nativeFunction(String name){

  return new FunctionName(SchemaConstants.SYSTEM_KEYSPACE_NAME,name);

}

