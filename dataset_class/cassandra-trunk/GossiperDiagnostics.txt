Location: GossiperDiagnostics.java

Content: 

static void convicted(Gossiper gossiper,InetAddressAndPort endpoint,double phi){

  if (isEnabled(GossiperEventType.CONVICTED))   service.publish(new GossiperEvent(GossiperEventType.CONVICTED,gossiper,endpoint,null,null));

}

Location: GossiperDiagnostics.java

Content: 

static void evictedFromMembership(Gossiper gossiper,InetAddressAndPort endpoint){

  if (isEnabled(GossiperEventType.EVICTED_FROM_MEMBERSHIP))   service.publish(new GossiperEvent(GossiperEventType.EVICTED_FROM_MEMBERSHIP,gossiper,endpoint,null,null));

}

Location: GossiperDiagnostics.java

Content: 

private GossiperDiagnostics(){

}

Location: GossiperDiagnostics.java

Content: 

private static boolean isEnabled(GossiperEventType type){

  return service.isEnabled(GossiperEvent.class,type);

}

Location: GossiperDiagnostics.java

Content: 

static void majorStateChangeHandled(Gossiper gossiper,InetAddressAndPort addr,EndpointState state){

  if (isEnabled(GossiperEventType.MAJOR_STATE_CHANGE_HANDLED))   service.publish(new GossiperEvent(GossiperEventType.MAJOR_STATE_CHANGE_HANDLED,gossiper,addr,null,state));

}

Location: GossiperDiagnostics.java

Content: 

static void markedAlive(Gossiper gossiper,InetAddressAndPort addr,EndpointState localState){

  if (isEnabled(GossiperEventType.MARKED_ALIVE))   service.publish(new GossiperEvent(GossiperEventType.MARKED_ALIVE,gossiper,addr,null,localState));

}

Location: GossiperDiagnostics.java

Content: 

static void markedAsShutdown(Gossiper gossiper,InetAddressAndPort endpoint){

  if (isEnabled(GossiperEventType.MARKED_AS_SHUTDOWN))   service.publish(new GossiperEvent(GossiperEventType.MARKED_AS_SHUTDOWN,gossiper,endpoint,null,null));

}

Location: GossiperDiagnostics.java

Content: 

static void markedDead(Gossiper gossiper,InetAddressAndPort addr,EndpointState localState){

  if (isEnabled(GossiperEventType.MARKED_DEAD))   service.publish(new GossiperEvent(GossiperEventType.MARKED_DEAD,gossiper,addr,null,localState));

}

Location: GossiperDiagnostics.java

Content: 

static void quarantinedEndpoint(Gossiper gossiper,InetAddressAndPort endpoint,long quarantineExpiration){

  if (isEnabled(GossiperEventType.QUARANTINED_ENDPOINT))   service.publish(new GossiperEvent(GossiperEventType.QUARANTINED_ENDPOINT,gossiper,endpoint,quarantineExpiration,null));

}

Location: GossiperDiagnostics.java

Content: 

static void realMarkedAlive(Gossiper gossiper,InetAddressAndPort addr,EndpointState localState){

  if (isEnabled(GossiperEventType.REAL_MARKED_ALIVE))   service.publish(new GossiperEvent(GossiperEventType.REAL_MARKED_ALIVE,gossiper,addr,null,localState));

}

Location: GossiperDiagnostics.java

Content: 

static void removedEndpoint(Gossiper gossiper,InetAddressAndPort endpoint){

  if (isEnabled(GossiperEventType.REMOVED_ENDPOINT))   service.publish(new GossiperEvent(GossiperEventType.REMOVED_ENDPOINT,gossiper,endpoint,null,null));

}

Location: GossiperDiagnostics.java

Content: 

static void replacedEndpoint(Gossiper gossiper,InetAddressAndPort endpoint){

  if (isEnabled(GossiperEventType.REPLACED_ENDPOINT))   service.publish(new GossiperEvent(GossiperEventType.REPLACED_ENDPOINT,gossiper,endpoint,null,null));

}

Location: GossiperDiagnostics.java

Content: 

static void replacementQuarantine(Gossiper gossiper,InetAddressAndPort endpoint){

  if (isEnabled(GossiperEventType.REPLACEMENT_QUARANTINE))   service.publish(new GossiperEvent(GossiperEventType.REPLACEMENT_QUARANTINE,gossiper,endpoint,null,null));

}

Location: GossiperDiagnostics.java

Content: 

static void sendGossipDigestSyn(Gossiper gossiper,InetAddressAndPort to){

  if (isEnabled(GossiperEventType.SEND_GOSSIP_DIGEST_SYN))   service.publish(new GossiperEvent(GossiperEventType.SEND_GOSSIP_DIGEST_SYN,gossiper,to,null,null));

}

