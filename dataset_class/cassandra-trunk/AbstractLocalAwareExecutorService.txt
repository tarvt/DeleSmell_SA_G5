Location: AbstractLocalAwareExecutorService.java

Content: 

protected abstract void addTask(FutureTask<?> futureTask);

Location: AbstractLocalAwareExecutorService.java

Content: 

public <T>List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks){

  throw new UnsupportedOperationException();

}

Location: AbstractLocalAwareExecutorService.java

Content: 

public <T>List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks,long timeout,TimeUnit unit) throws InterruptedException {

  throw new UnsupportedOperationException();

}

Location: AbstractLocalAwareExecutorService.java

Content: 

public <T>T invokeAny(Collection<? extends Callable<T>> tasks) throws InterruptedException, ExecutionException {

  throw new UnsupportedOperationException();

}

Location: AbstractLocalAwareExecutorService.java

Content: 

public <T>T invokeAny(Collection<? extends Callable<T>> tasks,long timeout,TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {

  throw new UnsupportedOperationException();

}

Location: AbstractLocalAwareExecutorService.java

Content: 

protected <T>FutureTask<T> newTaskFor(Runnable runnable,T result,ExecutorLocals locals){

  if (locals != null) {

    if (runnable instanceof LocalSessionFutureTask)     return (LocalSessionFutureTask<T>)runnable;

    return new LocalSessionFutureTask<T>(runnable,result,locals);

  }

  if (runnable instanceof FutureTask)   return (FutureTask<T>)runnable;

  return new FutureTask<>(runnable,result);

}

Location: AbstractLocalAwareExecutorService.java

Content: 

protected abstract void onCompletion();

Location: AbstractLocalAwareExecutorService.java

Content: 

/** 

 * Task Submission / Creation / Objects 

 */

public <T>FutureTask<T> submit(Callable<T> task){

  return submit(newTaskFor(task));

}

Location: AbstractLocalAwareExecutorService.java

Content: 

private <T>FutureTask<T> submit(FutureTask<T> task){

  addTask(task);

  return task;

}

Location: AbstractLocalAwareExecutorService.java

Content: 

public FutureTask<?> submit(Runnable task){

  return submit(newTaskFor(task,null));

}

Location: AbstractLocalAwareExecutorService.java

Content: 

public <T>FutureTask<T> submit(Runnable task,T result){

  return submit(newTaskFor(task,result));

}

