Location: MultiColumnRestriction.java

Content: 

protected abstract SingleRestriction doMergeWith(SingleRestriction otherRestriction);

Location: MultiColumnRestriction.java

Content: 

/** 

 * Returns the names of the columns that are specified within this <code>Restrictions</code> and the other one as a comma separated <code>String</code>.

 * @param otherRestriction the other restrictions

 * @return the names of the columns that are specified within this <code>Restrictions</code> and the other oneas a comma separated <code>String</code>.

 */

protected final String getColumnsInCommons(Restriction otherRestriction){

  Set<ColumnMetadata> commons=new HashSet<>(getColumnDefs());

  commons.retainAll(otherRestriction.getColumnDefs());

  StringBuilder builder=new StringBuilder();

  for (  ColumnMetadata columnMetadata : commons) {

    if (builder.length() != 0)     builder.append(" ,");

    builder.append(columnMetadata.name);

  }

  return builder.toString();

}

Location: MultiColumnRestriction.java

Content: 

@Override public boolean isMultiColumn(){

  return true;

}

Location: MultiColumnRestriction.java

Content: 

/** 

 * Check if this type of restriction is supported for by the specified index.

 * @param index the secondary index

 * @return <code>true</code> this type of restriction is supported by the specified index,<code>false</code> otherwise.

 */

protected abstract boolean isSupportedBy(Index index);

Location: MultiColumnRestriction.java

Content: 

@Override public final SingleRestriction mergeWith(SingleRestriction otherRestriction){

  if (!otherRestriction.isMultiColumn() && ((SingleColumnRestriction)otherRestriction).canBeConvertedToMultiColumnRestriction()) {

    return doMergeWith(((SingleColumnRestriction)otherRestriction).toMultiColumnRestriction());

  }

  return doMergeWith(otherRestriction);

}

Location: MultiColumnRestriction.java

Content: 

public MultiColumnRestriction(List<ColumnMetadata> columnDefs){

  this.columnDefs=columnDefs;

}

