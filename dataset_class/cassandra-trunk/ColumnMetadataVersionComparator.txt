Location: ColumnMetadataVersionComparator.java

Content: 

private ColumnMetadataVersionComparator(){

}

Location: ColumnMetadataVersionComparator.java

Content: 

@Override public int compare(ColumnMetadata v1,ColumnMetadata v2){

  assert v1.ksName.equals(v2.ksName) && v1.cfName.equals(v2.cfName) && v1.name.equals(v2.name) : v1.debugString() + " != " + v2.debugString();

  AbstractType<?> v1Type=v1.type;

  AbstractType<?> v2Type=v2.type;

  if (v1Type.equals(v2Type))   return 0;

  if (v1Type.isValueCompatibleWith(v2Type)) {

    return v2Type.isValueCompatibleWith(v1Type) ? 0 : 1;

  }

 else   if (v2Type.isValueCompatibleWith(v1Type)) {

    return -1;

  }

 else {

    throw new IllegalArgumentException(String.format("Found 2 incompatible versions of column %s in %s.%s: one " + "of type %s and one of type %s (but both types are incompatible)",v1.name,v1.ksName,v1.cfName,v1Type,v2Type));

  }

}

