Location: CollectionType.java

Content: 

protected CollectionType(ComparisonType comparisonType,Kind kind){

  super(comparisonType);

  this.kind=kind;

}

Location: CollectionType.java

Content: 

/** 

 * Checks if this collection is Map.

 * @return <code>true</code> if this collection is a Map, <code>false</code> otherwise.

 */

public boolean isMap(){

  return kind == Kind.MAP;

}

Location: CollectionType.java

Content: 

public ColumnSpecification makeCollectionReceiver(ColumnSpecification collection,boolean isKey){

  return kind.makeCollectionReceiver(collection,isKey);

}

Location: CollectionType.java

Content: 

public ByteBuffer serializeForNativeProtocol(Iterator<Cell<?>> cells,ProtocolVersion version){

  assert isMultiCell();

  List<ByteBuffer> values=serializedValues(cells);

  int size=collectionSize(values);

  return CollectionSerializer.pack(values,ByteBufferAccessor.instance,size,version);

}

