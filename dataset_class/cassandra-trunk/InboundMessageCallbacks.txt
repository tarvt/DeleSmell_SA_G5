Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked if a large message arrived in time, but had one or more of its frames corrupted in flight.

 */

void onArrivedCorrupt(int messageSize,Header header,long timeElapsed,TimeUnit unit);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked if a message arrived too late to be processed, after its expiration.  {@code wasCorrupt} mightbe set to  {@code true} if 1+ corrupt frames were encountered while assembling an expired large message.

 */

void onArrivedExpired(int messageSize,Header header,boolean wasCorrupt,long timeElapsed,TimeUnit unit);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked once an entire message worth of bytes has arrived, small or large.

 */

void onArrived(int messageSize,Header header,long timeElapsed,TimeUnit unit);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked if  {@link InboundMessageHandler} was closed before receiving all frames of a large message.{@code wasCorrupt} will be set to {@code true} if some corrupt frames had been already encountered,{@code wasExpired} will be set to {@code true} if the message had expired in flight.

 */

void onClosedBeforeArrival(int messageSize,Header header,int bytesReceived,boolean wasCorrupt,boolean wasExpired);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked just before a message-processing task is scheduled on the appropriate  {@link Stage}for the  {@link Verb} of the message.

 */

void onDispatched(int messageSize,Header header);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked at the very end of execution of the message-processing task, no matter the outcome of processing.

 */

void onExecuted(int messageSize,Header header,long timeElapsed,TimeUnit unit);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked at the very beginning of execution of the message-processing task on the appropriate  {@link Stage}.

 */

void onExecuting(int messageSize,Header header,long timeElapsed,TimeUnit unit);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked if the message had expired while waiting to be processed in the queue of the  {@link Stage}. Otherwise, {@link #onProcessed(int,Header)} will be invoked.

 */

void onExpired(int messageSize,Header header,long timeElapsed,TimeUnit unit);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked if a deserializer threw an exception while attempting to deserialize a message.

 */

void onFailedDeserialize(int messageSize,Header header,Throwable t);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked once the header of a message has arrived, small or large.

 */

void onHeaderArrived(int messageSize,Header header,long timeElapsed,TimeUnit unit);

Location: InboundMessageCallbacks.java

Content: 

/** 

 * Invoked upon 'successful' processing of the message. Alternatively,  {@link #onExpired(int,Header,long,TimeUnit)}will be invoked if the message had expired while waiting to be processed in the queue of the  {@link Stage}.

 */

void onProcessed(int messageSize,Header header);

