Location: DynamicCompositeType.java

Content: 

private DynamicCompositeType(Map<Byte,AbstractType<?>> aliases){

  this.aliases=aliases;

}

Location: DynamicCompositeType.java

Content: 

private <V>AbstractType<?> getComparator(V value,ValueAccessor<V> accessor,int offset){

  try {

    int header=accessor.getShort(value,offset);

    if ((header & 0x8000) == 0) {

      String name=accessor.toString(accessor.slice(value,offset + 2,header));

      return TypeParser.parse(name);

    }

 else {

      return aliases.get((byte)(header & 0xFF));

    }

  }

 catch (  CharacterCodingException e) {

    throw new RuntimeException(e);

  }

}

Location: DynamicCompositeType.java

Content: 

public static DynamicCompositeType getInstance(Map<Byte,AbstractType<?>> aliases){

  DynamicCompositeType dct=instances.get(aliases);

  return null == dct ? instances.computeIfAbsent(aliases,DynamicCompositeType::new) : dct;

}

