Location: CQLFragmentParser.java

Content: 

/** 

 * Just call a parser method in  {@link CqlParser} - does not do any error handling.

 */

public static <R>R parseAnyUnhandled(CQLParserFunction<R> parserFunction,String input) throws RecognitionException {

  ErrorCollector errorCollector=new ErrorCollector(input);

  CharStream stream=new ANTLRStringStream(input);

  CqlLexer lexer=new CqlLexer(stream);

  lexer.addErrorListener(errorCollector);

  TokenStream tokenStream=new CommonTokenStream(lexer);

  CqlParser parser=new CqlParser(tokenStream);

  parser.addErrorListener(errorCollector);

  R r=parserFunction.parse(parser);

  errorCollector.throwFirstSyntaxError();

  return r;

}

Location: CQLFragmentParser.java

Content: 

public static <R>R parseAny(CQLParserFunction<R> parserFunction,String input,String meaning){

  try {

    return parseAnyUnhandled(parserFunction,input);

  }

 catch (  RuntimeException re) {

    throw new SyntaxException(String.format("Failed parsing %s: [%s] reason: %s %s",meaning,input,re.getClass().getSimpleName(),re.getMessage()));

  }

catch (  RecognitionException e) {

    throw new SyntaxException("Invalid or malformed " + meaning + ": "+ e.getMessage());

  }

}

