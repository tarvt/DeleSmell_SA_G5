Location: Replicas.java

Content: 

/** 

 * increment each of the map's DC entries for each matching replica provided

 */

public static void addToCountPerDc(ObjectIntHashMap<String> perDc,Iterable<Replica> replicas,int add){

  IEndpointSnitch snitch=DatabaseDescriptor.getEndpointSnitch();

  for (  Replica replica : replicas) {

    String dc=snitch.getDatacenter(replica);

    perDc.addTo(dc,add);

  }

}

Location: Replicas.java

Content: 

/** 

 * For areas of the code that should never see a transient replica

 */

public static void assertFull(Iterable<Replica> replicas){

  if (!all(replicas,Replica::isFull)) {

    throw new UnsupportedOperationException("transient replicas are currently unsupported: " + Iterables.toString(replicas));

  }

}

Location: Replicas.java

Content: 

public static int countFull(ReplicaCollection<?> replicas){

  int count=0;

  for (  Replica replica : replicas)   if (replica.isFull())   ++count;

  return count;

}

Location: Replicas.java

Content: 

public static ReplicaCount countInOurDc(ReplicaCollection<?> replicas){

  ReplicaCount count=new ReplicaCount();

  Predicate<Replica> inOurDc=InOurDcTester.replicas();

  for (  Replica replica : replicas)   if (inOurDc.test(replica))   count.increment(replica);

  return count;

}

Location: Replicas.java

Content: 

/** 

 * count the number of full and transient replicas, separately, for each DC

 */

public static ObjectObjectHashMap<String,ReplicaCount> countPerDc(Collection<String> dataCenters,Iterable<Replica> replicas){

  ObjectObjectHashMap<String,ReplicaCount> perDc=new ObjectObjectHashMap<>(dataCenters.size());

  for (  String dc : dataCenters)   perDc.put(dc,new ReplicaCount());

  IEndpointSnitch snitch=DatabaseDescriptor.getEndpointSnitch();

  for (  Replica replica : replicas) {

    String dc=snitch.getDatacenter(replica);

    perDc.get(dc).increment(replica);

  }

  return perDc;

}

Location: Replicas.java

Content: 

public static List<String> stringify(ReplicaCollection<?> replicas,boolean withPort){

  List<String> stringEndpoints=new ArrayList<>(replicas.size());

  for (  Replica replica : replicas) {

    stringEndpoints.add(replica.endpoint().getHostAddress(withPort));

  }

  return stringEndpoints;

}

Location: Replicas.java

Content: 

/** 

 * A placeholder for areas of the code that cannot yet handle transient replicas, but should do so in future

 */

public static void temporaryAssertFull(Iterable<Replica> replicas){

  if (!all(replicas,Replica::isFull)) {

    throw new UnsupportedOperationException("transient replicas are currently unsupported: " + Iterables.toString(replicas));

  }

}

Location: Replicas.java

Content: 

/** 

 * A placeholder for areas of the code that cannot yet handle transient replicas, but should do so in future

 */

public static void temporaryAssertFull(Replica replica){

  if (!replica.isFull()) {

    throw new UnsupportedOperationException("transient replicas are currently unsupported: " + replica);

  }

}

