Location: GoogleCloudSnitch.java

Content: 

String gceApiCall(String url) throws IOException, ConfigurationException {

  HttpURLConnection conn=(HttpURLConnection)new URL(url).openConnection();

  DataInputStream d=null;

  try {

    conn.setRequestMethod("GET");

    conn.setRequestProperty("Metadata-Flavor","Google");

    if (conn.getResponseCode() != 200)     throw new ConfigurationException("GoogleCloudSnitch was unable to execute the API call. Not a gce node?");

    int cl=conn.getContentLength();

    byte[] b=new byte[cl];

    d=new DataInputStream((FilterInputStream)conn.getContent());

    d.readFully(b);

    return new String(b,StandardCharsets.UTF_8);

  }

  finally {

    FileUtils.close(d);

    conn.disconnect();

  }

}

Location: GoogleCloudSnitch.java

Content: 

public GoogleCloudSnitch() throws IOException, ConfigurationException {

  String response=gceApiCall(ZONE_NAME_QUERY_URL);

  String[] splits=response.split("/");

  String az=splits[splits.length - 1];

  splits=az.split("-");

  gceZone=splits[splits.length - 1];

  int lastRegionIndex=az.lastIndexOf("-");

  gceRegion=az.substring(0,lastRegionIndex);

  String datacenterSuffix=(new SnitchProperties()).get("dc_suffix","");

  gceRegion=gceRegion.concat(datacenterSuffix);

  logger.info("GCESnitch using region: {}, zone: {}.",gceRegion,gceZone);

}

