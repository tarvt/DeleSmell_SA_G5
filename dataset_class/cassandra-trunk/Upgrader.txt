Location: Upgrader.java

Content: 

private SSTableWriter createCompactionWriter(StatsMetadata metadata){

  MetadataCollector sstableMetadataCollector=new MetadataCollector(cfs.getComparator());

  sstableMetadataCollector.sstableLevel(sstable.getSSTableLevel());

  return SSTableWriter.create(cfs.newSSTableDescriptor(directory),estimatedRows,metadata.repairedAt,metadata.pendingRepair,metadata.isTransient,cfs.metadata,sstableMetadataCollector,SerializationHeader.make(cfs.metadata(),Sets.newHashSet(sstable)),cfs.indexManager.listIndexes(),transaction);

}

Location: Upgrader.java

Content: 

public Upgrader(ColumnFamilyStore cfs,LifecycleTransaction txn,OutputHandler outputHandler){

  this.cfs=cfs;

  this.transaction=txn;

  this.sstable=txn.onlyOne();

  this.outputHandler=outputHandler;

  this.directory=new File(sstable.getFilename()).getParentFile();

  this.controller=new UpgradeController(cfs);

  this.strategyManager=cfs.getCompactionStrategyManager();

  long estimatedTotalKeys=Math.max(cfs.metadata().params.minIndexInterval,SSTableReader.getApproximateKeyCount(Arrays.asList(this.sstable)));

  long estimatedSSTables=Math.max(1,SSTableReader.getTotalBytes(Arrays.asList(this.sstable)) / strategyManager.getMaxSSTableBytes());

  this.estimatedRows=(long)Math.ceil((double)estimatedTotalKeys / estimatedSSTables);

}

Location: Upgrader.java

Content: 

public void upgrade(boolean keepOriginals){

  outputHandler.output("Upgrading " + sstable);

  int nowInSec=FBUtilities.nowInSeconds();

  try (SSTableRewriter writer=SSTableRewriter.construct(cfs,transaction,keepOriginals,CompactionTask.getMaxDataAge(transaction.originals()));AbstractCompactionStrategy.ScannerList scanners=strategyManager.getScanners(transaction.originals());CompactionIterator iter=new CompactionIterator(transaction.opType(),scanners.scanners,controller,nowInSec,UUIDGen.getTimeUUID())){

    writer.switchWriter(createCompactionWriter(sstable.getSSTableMetadata()));

    while (iter.hasNext())     writer.append(iter.next());

    writer.finish();

    outputHandler.output("Upgrade of " + sstable + " complete.");

  }

 catch (  Exception e) {

    Throwables.propagate(e);

  }

 finally {

    controller.close();

  }

}

