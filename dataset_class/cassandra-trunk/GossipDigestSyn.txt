Location: GossipDigestSyn.java

Content: 

List<GossipDigest> getGossipDigests(){

  return gDigests;

}

Location: GossipDigestSyn.java

Content: 

public GossipDigestSyn(String clusterId,String partioner,List<GossipDigest> gDigests){

  this.clusterId=clusterId;

  this.partioner=partioner;

  this.gDigests=gDigests;

}

Location: GossipDigestSyn.java

Content: 

public long serializedSize(GossipDigestSyn syn,int version){

  long size=TypeSizes.sizeof(syn.clusterId);

  size+=TypeSizes.sizeof(syn.partioner);

  size+=GossipDigestSerializationHelper.serializedSize(syn.gDigests,version);

  return size;

}

Location: GossipDigestSyn.java

Content: 

static int serializedSize(List<GossipDigest> digests,int version){

  int size=TypeSizes.sizeof(digests.size());

  for (  GossipDigest digest : digests)   size+=GossipDigest.serializer.serializedSize(digest,version);

  return size;

}

Location: GossipDigestSyn.java

Content: 

public void serialize(GossipDigestSyn gDigestSynMessage,DataOutputPlus out,int version) throws IOException {

  out.writeUTF(gDigestSynMessage.clusterId);

  out.writeUTF(gDigestSynMessage.partioner);

  GossipDigestSerializationHelper.serialize(gDigestSynMessage.gDigests,out,version);

}

Location: GossipDigestSyn.java

Content: 

static void serialize(List<GossipDigest> gDigestList,DataOutputPlus out,int version) throws IOException {

  out.writeInt(gDigestList.size());

  for (  GossipDigest gDigest : gDigestList)   GossipDigest.serializer.serialize(gDigest,out,version);

}

