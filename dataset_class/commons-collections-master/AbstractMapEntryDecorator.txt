Location: AbstractMapEntryDecorator.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param entry  the {@code Map.Entry} to decorate, must not be null

 * @throws NullPointerException if the collection is null

 */

public AbstractMapEntryDecorator(final Map.Entry<K,V> entry){

  this.entry=Objects.requireNonNull(entry,"entry");

}

Location: AbstractMapEntryDecorator.java

Content: 

/** 

 * Gets the map being decorated.

 * @return the decorated map

 */

protected Map.Entry<K,V> getMapEntry(){

  return entry;

}

Location: AbstractMapEntryDecorator.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param entry  the {@code Map.Entry} to decorate, must not be null

 * @throws NullPointerException if the collection is null

 */

public AbstractMapEntryDecorator(final Map.Entry<K,V> entry){

  this.entry=Objects.requireNonNull(entry,"entry");

}

Location: AbstractMapEntryDecorator.java

Content: 

/** 

 * Gets the map being decorated.

 * @return the decorated map

 */

protected Map.Entry<K,V> getMapEntry(){

  return entry;

}

