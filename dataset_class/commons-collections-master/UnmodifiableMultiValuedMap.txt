Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public Map<K,Collection<V>> asMap(){

  return UnmodifiableMap.unmodifiableMap(decorated().asMap());

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public Collection<Entry<K,V>> entries(){

  return UnmodifiableCollection.unmodifiableCollection(decorated().entries());

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public Collection<V> get(final K key){

  return UnmodifiableCollection.unmodifiableCollection(decorated().get(key));

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public boolean putAll(final K key,final Iterable<? extends V> values){

  throw new UnsupportedOperationException();

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public boolean putAll(final MultiValuedMap<? extends K,? extends V> map){

  throw new UnsupportedOperationException();

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public boolean removeMapping(final Object key,final Object item){

  throw new UnsupportedOperationException();

}

Location: UnmodifiableMultiValuedMap.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the MultiValuedMap to decorate, may not be null

 * @throws NullPointerException if the map is null

 */

@SuppressWarnings("unchecked") private UnmodifiableMultiValuedMap(final MultiValuedMap<? extends K,? extends V> map){

  super((MultiValuedMap<K,V>)map);

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public Map<K,Collection<V>> asMap(){

  return UnmodifiableMap.unmodifiableMap(decorated().asMap());

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public Collection<Entry<K,V>> entries(){

  return UnmodifiableCollection.unmodifiableCollection(decorated().entries());

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public Collection<V> get(final K key){

  return UnmodifiableCollection.unmodifiableCollection(decorated().get(key));

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public boolean putAll(final K key,final Iterable<? extends V> values){

  throw new UnsupportedOperationException();

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public boolean putAll(final MultiValuedMap<? extends K,? extends V> map){

  throw new UnsupportedOperationException();

}

Location: UnmodifiableMultiValuedMap.java

Content: 

@Override public boolean removeMapping(final Object key,final Object item){

  throw new UnsupportedOperationException();

}

Location: UnmodifiableMultiValuedMap.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the MultiValuedMap to decorate, may not be null

 * @throws NullPointerException if the map is null

 */

@SuppressWarnings("unchecked") private UnmodifiableMultiValuedMap(final MultiValuedMap<? extends K,? extends V> map){

  super((MultiValuedMap<K,V>)map);

}

