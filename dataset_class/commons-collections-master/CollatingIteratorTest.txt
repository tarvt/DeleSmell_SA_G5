Location: CollatingIteratorTest.java

Content: 

public CollatingIteratorTest(final String testName){

  super(testName);

}

Location: CollatingIteratorTest.java

Content: 

public void testGetSetComparator(){

  final CollatingIterator<Integer> iter=new CollatingIterator<>();

  assertNull(iter.getComparator());

  iter.setComparator(comparator);

  assertSame(comparator,iter.getComparator());

  iter.setComparator(null);

  assertNull(iter.getComparator());

}

Location: CollatingIteratorTest.java

Content: 

public void testNullComparator(){

  final List<Integer> l1=Arrays.asList(1,3,5);

  final List<Integer> l2=Arrays.asList(2,4,6);

  final CollatingIterator<Integer> collatingIterator1=new CollatingIterator<>(null,l1.iterator(),l2.iterator());

  try {

    collatingIterator1.next();

  }

 catch (  final NullPointerException e) {

    assertTrue(e.getMessage().startsWith("You must invoke setComparator"));

  }

  int i=0;

  final CollatingIterator<Integer> collatingIterator2=new CollatingIterator<>(null,l1.iterator(),l2.iterator());

  collatingIterator2.setComparator(new ComparableComparator<Integer>());

  for (; collatingIterator2.hasNext(); i++) {

    final Integer n=collatingIterator2.next();

    assertEquals("wrong order",(int)n,i + 1);

  }

  assertEquals("wrong size",i,l1.size() + l2.size());

}

Location: CollatingIteratorTest.java

Content: 

public CollatingIteratorTest(final String testName){

  super(testName);

}

Location: CollatingIteratorTest.java

Content: 

public void testGetSetComparator(){

  final CollatingIterator<Integer> iter=new CollatingIterator<>();

  assertNull(iter.getComparator());

  iter.setComparator(comparator);

  assertSame(comparator,iter.getComparator());

  iter.setComparator(null);

  assertNull(iter.getComparator());

}

Location: CollatingIteratorTest.java

Content: 

public void testNullComparator(){

  final List<Integer> l1=Arrays.asList(1,3,5);

  final List<Integer> l2=Arrays.asList(2,4,6);

  final CollatingIterator<Integer> collatingIterator1=new CollatingIterator<>(null,l1.iterator(),l2.iterator());

  try {

    collatingIterator1.next();

  }

 catch (  final NullPointerException e) {

    assertTrue(e.getMessage().startsWith("You must invoke setComparator"));

  }

  int i=0;

  final CollatingIterator<Integer> collatingIterator2=new CollatingIterator<>(null,l1.iterator(),l2.iterator());

  collatingIterator2.setComparator(new ComparableComparator<Integer>());

  for (; collatingIterator2.hasNext(); i++) {

    final Integer n=collatingIterator2.next();

    assertEquals("wrong order",(int)n,i + 1);

  }

  assertEquals("wrong size",i,l1.size() + l2.size());

}

