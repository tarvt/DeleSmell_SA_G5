Location: AbstractMultiValuedMap.java

Content: 

/** 

 * Constructor needed for subclass serialisation.

 */

protected AbstractMultiValuedMap(){

}

Location: AbstractMultiValuedMap.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the map to wrap, must not be null

 * @throws NullPointerException if the map is null

 */

@SuppressWarnings("unchecked") protected AbstractMultiValuedMap(final Map<K,? extends Collection<V>> map){

  this.map=(Map<K,Collection<V>>)Objects.requireNonNull(map,"map");

}

Location: AbstractMultiValuedMap.java

Content: 

/** 

 * Constructor needed for subclass serialisation.

 */

protected AbstractMultiValuedMap(){

}

Location: AbstractMultiValuedMap.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the map to wrap, must not be null

 * @throws NullPointerException if the map is null

 */

@SuppressWarnings("unchecked") protected AbstractMultiValuedMap(final Map<K,? extends Collection<V>> map){

  this.map=(Map<K,Collection<V>>)Objects.requireNonNull(map,"map");

}

