Location: StaticBucketMapTest.java

Content: 

/** 

 * {@inheritDoc}

 */

@Override public boolean isFailFastExpected(){

  return false;

}

Location: StaticBucketMapTest.java

Content: 

public StaticBucketMapTest(final String name){

  super(name);

}

Location: StaticBucketMapTest.java

Content: 

@SuppressWarnings("unchecked") public void test_containsKey_nullMatchesIncorrectly(){

  final StaticBucketMap<K,V> map=new StaticBucketMap<>(17);

  map.put(null,(V)"A");

  assertTrue(map.containsKey(null));

  for (int i='A'; i <= 'Z'; i++) {

    final String str=String.valueOf((char)i);

    assertFalse("String: " + str,map.containsKey(str));

  }

}

Location: StaticBucketMapTest.java

Content: 

@SuppressWarnings("unchecked") public void test_containsValue_nullMatchesIncorrectly(){

  final StaticBucketMap<K,V> map=new StaticBucketMap<>(17);

  map.put((K)"A",null);

  assertTrue(map.containsValue(null));

  for (int i='A'; i <= 'Z'; i++) {

    final String str=String.valueOf((char)i);

    assertFalse("String: " + str,map.containsValue(str));

  }

}

Location: StaticBucketMapTest.java

Content: 

@SuppressWarnings("unchecked") public void test_get_nullMatchesIncorrectly(){

  final StaticBucketMap<K,V> map=new StaticBucketMap<>(17);

  map.put(null,(V)"A");

  assertEquals("A",map.get(null));

  for (int i='A'; i <= 'Z'; i++) {

    final String str=String.valueOf((char)i);

    assertNull("String: " + str,map.get(str));

  }

}

Location: StaticBucketMapTest.java

Content: 

/** 

 * {@inheritDoc}

 */

@Override public boolean isFailFastExpected(){

  return false;

}

Location: StaticBucketMapTest.java

Content: 

public StaticBucketMapTest(final String name){

  super(name);

}

Location: StaticBucketMapTest.java

Content: 

@SuppressWarnings("unchecked") public void test_containsKey_nullMatchesIncorrectly(){

  final StaticBucketMap<K,V> map=new StaticBucketMap<>(17);

  map.put(null,(V)"A");

  assertTrue(map.containsKey(null));

  for (int i='A'; i <= 'Z'; i++) {

    final String str=String.valueOf((char)i);

    assertFalse("String: " + str,map.containsKey(str));

  }

}

Location: StaticBucketMapTest.java

Content: 

@SuppressWarnings("unchecked") public void test_containsValue_nullMatchesIncorrectly(){

  final StaticBucketMap<K,V> map=new StaticBucketMap<>(17);

  map.put((K)"A",null);

  assertTrue(map.containsValue(null));

  for (int i='A'; i <= 'Z'; i++) {

    final String str=String.valueOf((char)i);

    assertFalse("String: " + str,map.containsValue(str));

  }

}

Location: StaticBucketMapTest.java

Content: 

@SuppressWarnings("unchecked") public void test_get_nullMatchesIncorrectly(){

  final StaticBucketMap<K,V> map=new StaticBucketMap<>(17);

  map.put(null,(V)"A");

  assertEquals("A",map.get(null));

  for (int i='A'; i <= 'Z'; i++) {

    final String str=String.valueOf((char)i);

    assertNull("String: " + str,map.get(str));

  }

}

