Location: InstanceofPredicate.java

Content: 

/** 

 * Evaluates the predicate returning true if the input object is of the correct type.

 * @param object  the input object

 * @return true if input is of stored type

 */

@Override public boolean evaluate(final Object object){

  return iType.isInstance(object);

}

Location: InstanceofPredicate.java

Content: 

/** 

 * Gets the type to compare to.

 * @return the type

 * @since 3.1

 */

public Class<?> getType(){

  return iType;

}

Location: InstanceofPredicate.java

Content: 

/** 

 * Constructor that performs no validation. Use  {@code instanceOfPredicate} if you want that.

 * @param type  the type to check for

 */

public InstanceofPredicate(final Class<?> type){

  iType=type;

}

Location: InstanceofPredicate.java

Content: 

/** 

 * Evaluates the predicate returning true if the input object is of the correct type.

 * @param object  the input object

 * @return true if input is of stored type

 */

@Override public boolean evaluate(final Object object){

  return iType.isInstance(object);

}

Location: InstanceofPredicate.java

Content: 

/** 

 * Gets the type to compare to.

 * @return the type

 * @since 3.1

 */

public Class<?> getType(){

  return iType;

}

Location: InstanceofPredicate.java

Content: 

/** 

 * Constructor that performs no validation. Use  {@code instanceOfPredicate} if you want that.

 * @param type  the type to check for

 */

public InstanceofPredicate(final Class<?> type){

  iType=type;

}

