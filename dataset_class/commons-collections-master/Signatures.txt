Location: Signatures.java

Content: 

/** 

 * Gets the standard signature for the hash function. The signature is prepared as: <pre><code> int seed = 0; return hashFunction.apply(HashFunctionIdentity.prepareSignatureBuffer(hashFunction), seed); </code></pre>

 * @param hashFunction the hash function

 * @return the signature

 * @see HashFunctionIdentity#prepareSignatureBuffer(HashFunctionIdentity)

 * @see HashFunction#apply(byte[],int)

 */

static long getSignature(final HashFunction hashFunction){

  return hashFunction.apply(HashFunctionIdentity.prepareSignatureBuffer(hashFunction),0);

}

Location: Signatures.java

Content: 

/** 

 * No instances. 

 */

private Signatures(){

}

Location: Signatures.java

Content: 

/** 

 * Gets the standard signature for the hash function. The signature is prepared as: <pre><code> int seed = 0; return hashFunction.apply(HashFunctionIdentity.prepareSignatureBuffer(hashFunction), seed); </code></pre>

 * @param hashFunction the hash function

 * @return the signature

 * @see HashFunctionIdentity#prepareSignatureBuffer(HashFunctionIdentity)

 * @see HashFunction#apply(byte[],int)

 */

static long getSignature(final HashFunction hashFunction){

  return hashFunction.apply(HashFunctionIdentity.prepareSignatureBuffer(hashFunction),0);

}

Location: Signatures.java

Content: 

/** 

 * No instances. 

 */

private Signatures(){

}

