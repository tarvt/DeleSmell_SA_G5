Location: ArrayIterator2Test.java

Content: 

public ArrayIterator2Test(final String testName){

  super(testName);

}

Location: ArrayIterator2Test.java

Content: 

public ArrayIterator<E> makeArrayIterator(final Object array){

  return new ArrayIterator<>(array);

}

Location: ArrayIterator2Test.java

Content: 

public ArrayIterator<E> makeArrayIterator(final Object array,final int index){

  return new ArrayIterator<>(array,index);

}

Location: ArrayIterator2Test.java

Content: 

public ArrayIterator<E> makeArrayIterator(final Object array,final int start,final int end){

  return new ArrayIterator<>(array,start,end);

}

Location: ArrayIterator2Test.java

Content: 

public void testIndexedArray(){

  Iterator<E> iter=makeArrayIterator(testArray,2);

  int count=0;

  while (iter.hasNext()) {

    ++count;

    iter.next();

  }

  assertEquals("the count should be right using ArrayIterator(Object,2) ",count,testArray.length - 2);

  iter=makeArrayIterator(testArray,1,testArray.length - 1);

  count=0;

  while (iter.hasNext()) {

    ++count;

    iter.next();

  }

  assertEquals("the count should be right using ArrayIterator(Object,1," + (testArray.length - 1) + ") ",count,testArray.length - 2);

  try {

    iter=makeArrayIterator(testArray,-1);

    fail("new ArrayIterator(Object,-1) should throw an ArrayIndexOutOfBoundsException");

  }

 catch (  final ArrayIndexOutOfBoundsException aioobe) {

  }

  try {

    iter=makeArrayIterator(testArray,testArray.length + 1);

    fail("new ArrayIterator(Object,length+1) should throw an ArrayIndexOutOfBoundsException");

  }

 catch (  final ArrayIndexOutOfBoundsException aioobe) {

  }

  try {

    iter=makeArrayIterator(testArray,0,-1);

    fail("new ArrayIterator(Object,0,-1) should throw an ArrayIndexOutOfBoundsException");

  }

 catch (  final ArrayIndexOutOfBoundsException aioobe) {

  }

  try {

    iter=makeArrayIterator(testArray,0,testArray.length + 1);

    fail("new ArrayIterator(Object,0,length+1) should throw an ArrayIndexOutOfBoundsException");

  }

 catch (  final ArrayIndexOutOfBoundsException aioobe) {

  }

  try {

    iter=makeArrayIterator(testArray,1,1);

  }

 catch (  final IllegalArgumentException iae) {

    fail("new ArrayIterator(Object,1,1) should NOT throw an IllegalArgumentException");

  }

  try {

    iter=makeArrayIterator(testArray,testArray.length - 1,testArray.length - 2);

    fail("new ArrayIterator(Object,length-2,length-1) should throw an IllegalArgumentException");

  }

 catch (  final IllegalArgumentException iae) {

  }

}

Location: ArrayIterator2Test.java

Content: 

public ArrayIterator2Test(final String testName){

  super(testName);

}

Location: ArrayIterator2Test.java

Content: 

public ArrayIterator<E> makeArrayIterator(final Object array){

  return new ArrayIterator<>(array);

}

Location: ArrayIterator2Test.java

Content: 

public ArrayIterator<E> makeArrayIterator(final Object array,final int index){

  return new ArrayIterator<>(array,index);

}

Location: ArrayIterator2Test.java

Content: 

public ArrayIterator<E> makeArrayIterator(final Object array,final int start,final int end){

  return new ArrayIterator<>(array,start,end);

}

Location: ArrayIterator2Test.java

Content: 

public void testIndexedArray(){

  Iterator<E> iter=makeArrayIterator(testArray,2);

  int count=0;

  while (iter.hasNext()) {

    ++count;

    iter.next();

  }

  assertEquals("the count should be right using ArrayIterator(Object,2) ",count,testArray.length - 2);

  iter=makeArrayIterator(testArray,1,testArray.length - 1);

  count=0;

  while (iter.hasNext()) {

    ++count;

    iter.next();

  }

  assertEquals("the count should be right using ArrayIterator(Object,1," + (testArray.length - 1) + ") ",count,testArray.length - 2);

  try {

    iter=makeArrayIterator(testArray,-1);

    fail("new ArrayIterator(Object,-1) should throw an ArrayIndexOutOfBoundsException");

  }

 catch (  final ArrayIndexOutOfBoundsException aioobe) {

  }

  try {

    iter=makeArrayIterator(testArray,testArray.length + 1);

    fail("new ArrayIterator(Object,length+1) should throw an ArrayIndexOutOfBoundsException");

  }

 catch (  final ArrayIndexOutOfBoundsException aioobe) {

  }

  try {

    iter=makeArrayIterator(testArray,0,-1);

    fail("new ArrayIterator(Object,0,-1) should throw an ArrayIndexOutOfBoundsException");

  }

 catch (  final ArrayIndexOutOfBoundsException aioobe) {

  }

  try {

    iter=makeArrayIterator(testArray,0,testArray.length + 1);

    fail("new ArrayIterator(Object,0,length+1) should throw an ArrayIndexOutOfBoundsException");

  }

 catch (  final ArrayIndexOutOfBoundsException aioobe) {

  }

  try {

    iter=makeArrayIterator(testArray,1,1);

  }

 catch (  final IllegalArgumentException iae) {

    fail("new ArrayIterator(Object,1,1) should NOT throw an IllegalArgumentException");

  }

  try {

    iter=makeArrayIterator(testArray,testArray.length - 1,testArray.length - 2);

    fail("new ArrayIterator(Object,length-2,length-1) should throw an IllegalArgumentException");

  }

 catch (  final IllegalArgumentException iae) {

  }

}

