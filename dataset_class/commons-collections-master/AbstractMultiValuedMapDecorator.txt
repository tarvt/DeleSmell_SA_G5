Location: AbstractMultiValuedMapDecorator.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the map to decorate, must not be null

 * @throws NullPointerException if the map is null

 */

protected AbstractMultiValuedMapDecorator(final MultiValuedMap<K,V> map){

  this.map=Objects.requireNonNull(map,"map");

}

Location: AbstractMultiValuedMapDecorator.java

Content: 

@Override public boolean containsMapping(final Object key,final Object value){

  return decorated().containsMapping(key,value);

}

Location: AbstractMultiValuedMapDecorator.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the map to decorate, must not be null

 * @throws NullPointerException if the map is null

 */

protected AbstractMultiValuedMapDecorator(final MultiValuedMap<K,V> map){

  this.map=Objects.requireNonNull(map,"map");

}

Location: AbstractMultiValuedMapDecorator.java

Content: 

@Override public boolean containsMapping(final Object key,final Object value){

  return decorated().containsMapping(key,value);

}

