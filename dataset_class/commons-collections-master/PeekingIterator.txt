Location: PeekingIterator.java

Content: 

private void fill(){

  if (exhausted || slotFilled) {

    return;

  }

  if (iterator.hasNext()) {

    slot=iterator.next();

    slotFilled=true;

  }

 else {

    exhausted=true;

    slot=null;

    slotFilled=false;

  }

}

Location: PeekingIterator.java

Content: 

/** 

 * Constructor.

 * @param iterator  the iterator to decorate

 */

public PeekingIterator(final Iterator<? extends E> iterator){

  this.iterator=iterator;

}

Location: PeekingIterator.java

Content: 

private void fill(){

  if (exhausted || slotFilled) {

    return;

  }

  if (iterator.hasNext()) {

    slot=iterator.next();

    slotFilled=true;

  }

 else {

    exhausted=true;

    slot=null;

    slotFilled=false;

  }

}

Location: PeekingIterator.java

Content: 

/** 

 * Constructor.

 * @param iterator  the iterator to decorate

 */

public PeekingIterator(final Iterator<? extends E> iterator){

  this.iterator=iterator;

}

