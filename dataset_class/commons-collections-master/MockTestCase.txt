Location: MockTestCase.java

Content: 

@SuppressWarnings("unchecked") protected <T>T createMock(final Class<?> name){

  final T mock=(T)EasyMock.createMock(name);

  return registerMock(mock);

}

Location: MockTestCase.java

Content: 

protected <T>IExpectationSetters<T> expect(final T t){

  return EasyMock.expect(t);

}

Location: MockTestCase.java

Content: 

private <T>T registerMock(final T mock){

  mockObjects.add(mock);

  return mock;

}

Location: MockTestCase.java

Content: 

protected final void replay(){

  for (  final Object o : mockObjects) {

    EasyMock.replay(o);

  }

}

Location: MockTestCase.java

Content: 

@SuppressWarnings("unchecked") protected <T>T createMock(final Class<?> name){

  final T mock=(T)EasyMock.createMock(name);

  return registerMock(mock);

}

Location: MockTestCase.java

Content: 

protected <T>IExpectationSetters<T> expect(final T t){

  return EasyMock.expect(t);

}

Location: MockTestCase.java

Content: 

private <T>T registerMock(final T mock){

  mockObjects.add(mock);

  return mock;

}

Location: MockTestCase.java

Content: 

protected final void replay(){

  for (  final Object o : mockObjects) {

    EasyMock.replay(o);

  }

}

