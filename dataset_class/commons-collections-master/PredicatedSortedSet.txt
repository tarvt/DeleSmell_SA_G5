Location: PredicatedSortedSet.java

Content: 

/** 

 * Constructor that wraps (not copies). <p> If there are any elements already in the set being decorated, they are validated.

 * @param set  the set to decorate, must not be null

 * @param predicate  the predicate to use for validation, must not be null

 * @throws NullPointerException if set or predicate is null

 * @throws IllegalArgumentException if the set contains invalid elements

 */

protected PredicatedSortedSet(final SortedSet<E> set,final Predicate<? super E> predicate){

  super(set,predicate);

}

Location: PredicatedSortedSet.java

Content: 

/** 

 * Constructor that wraps (not copies). <p> If there are any elements already in the set being decorated, they are validated.

 * @param set  the set to decorate, must not be null

 * @param predicate  the predicate to use for validation, must not be null

 * @throws NullPointerException if set or predicate is null

 * @throws IllegalArgumentException if the set contains invalid elements

 */

protected PredicatedSortedSet(final SortedSet<E> set,final Predicate<? super E> predicate){

  super(set,predicate);

}

