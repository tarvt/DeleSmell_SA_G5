Location: ObjectsHashIterative.java

Content: 

@Override public long apply(final byte[] buffer,final int seed){

  if (seed == 0) {

    last=0;

  }

  final long result=31 * (31 + Long.hashCode(last)) + Arrays.hashCode(buffer);

  last+=result;

  return result;

}

Location: ObjectsHashIterative.java

Content: 

@Override public String getName(){

  return NAME;

}

Location: ObjectsHashIterative.java

Content: 

@Override public ProcessType getProcessType(){

  return ProcessType.ITERATIVE;

}

Location: ObjectsHashIterative.java

Content: 

@Override public String getProvider(){

  return "Apache Commons Collections";

}

Location: ObjectsHashIterative.java

Content: 

@Override public long getSignature(){

  return signature;

}

Location: ObjectsHashIterative.java

Content: 

@Override public Signedness getSignedness(){

  return Signedness.SIGNED;

}

Location: ObjectsHashIterative.java

Content: 

/** 

 * Constructs a hash that uses the Objects.hash method to has values.

 */

public ObjectsHashIterative(){

  signature=Signatures.getSignature(this);

}

Location: ObjectsHashIterative.java

Content: 

@Override public long apply(final byte[] buffer,final int seed){

  if (seed == 0) {

    last=0;

  }

  final long result=31 * (31 + Long.hashCode(last)) + Arrays.hashCode(buffer);

  last+=result;

  return result;

}

Location: ObjectsHashIterative.java

Content: 

@Override public String getName(){

  return NAME;

}

Location: ObjectsHashIterative.java

Content: 

@Override public ProcessType getProcessType(){

  return ProcessType.ITERATIVE;

}

Location: ObjectsHashIterative.java

Content: 

@Override public String getProvider(){

  return "Apache Commons Collections";

}

Location: ObjectsHashIterative.java

Content: 

@Override public long getSignature(){

  return signature;

}

Location: ObjectsHashIterative.java

Content: 

@Override public Signedness getSignedness(){

  return Signedness.SIGNED;

}

Location: ObjectsHashIterative.java

Content: 

/** 

 * Constructs a hash that uses the Objects.hash method to has values.

 */

public ObjectsHashIterative(){

  signature=Signatures.getSignature(this);

}

