Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an empty HashSetValuedHashMap with the default initial map capacity (16) and the default initial set capacity (3).

 */

public HashSetValuedHashMap(){

  this(DEFAULT_INITIAL_MAP_CAPACITY,DEFAULT_INITIAL_SET_CAPACITY);

}

Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an empty HashSetValuedHashMap with the default initial map capacity (16) and the specified initial set capacity.

 * @param initialSetCapacity  the initial capacity used for value collections

 */

public HashSetValuedHashMap(final int initialSetCapacity){

  this(DEFAULT_INITIAL_MAP_CAPACITY,initialSetCapacity);

}

Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an empty HashSetValuedHashMap with the specified initial map and list capacities.

 * @param initialMapCapacity  the initial hashmap capacity

 * @param initialSetCapacity  the initial capacity used for value collections

 */

public HashSetValuedHashMap(final int initialMapCapacity,final int initialSetCapacity){

  super(new HashMap<K,HashSet<V>>(initialMapCapacity));

  this.initialSetCapacity=initialSetCapacity;

}

Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an HashSetValuedHashMap copying all the mappings of the given map.

 * @param map a {@code Map} to copy into this map

 */

public HashSetValuedHashMap(final Map<? extends K,? extends V> map){

  this(map.size(),DEFAULT_INITIAL_SET_CAPACITY);

  super.putAll(map);

}

Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an HashSetValuedHashMap copying all the mappings of the given map.

 * @param map a {@code MultiValuedMap} to copy into this map

 */

public HashSetValuedHashMap(final MultiValuedMap<? extends K,? extends V> map){

  this(map.size(),DEFAULT_INITIAL_SET_CAPACITY);

  super.putAll(map);

}

Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an empty HashSetValuedHashMap with the default initial map capacity (16) and the default initial set capacity (3).

 */

public HashSetValuedHashMap(){

  this(DEFAULT_INITIAL_MAP_CAPACITY,DEFAULT_INITIAL_SET_CAPACITY);

}

Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an empty HashSetValuedHashMap with the default initial map capacity (16) and the specified initial set capacity.

 * @param initialSetCapacity  the initial capacity used for value collections

 */

public HashSetValuedHashMap(final int initialSetCapacity){

  this(DEFAULT_INITIAL_MAP_CAPACITY,initialSetCapacity);

}

Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an empty HashSetValuedHashMap with the specified initial map and list capacities.

 * @param initialMapCapacity  the initial hashmap capacity

 * @param initialSetCapacity  the initial capacity used for value collections

 */

public HashSetValuedHashMap(final int initialMapCapacity,final int initialSetCapacity){

  super(new HashMap<K,HashSet<V>>(initialMapCapacity));

  this.initialSetCapacity=initialSetCapacity;

}

Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an HashSetValuedHashMap copying all the mappings of the given map.

 * @param map a {@code Map} to copy into this map

 */

public HashSetValuedHashMap(final Map<? extends K,? extends V> map){

  this(map.size(),DEFAULT_INITIAL_SET_CAPACITY);

  super.putAll(map);

}

Location: HashSetValuedHashMap.java

Content: 

/** 

 * Creates an HashSetValuedHashMap copying all the mappings of the given map.

 * @param map a {@code MultiValuedMap} to copy into this map

 */

public HashSetValuedHashMap(final MultiValuedMap<? extends K,? extends V> map){

  this(map.size(),DEFAULT_INITIAL_SET_CAPACITY);

  super.putAll(map);

}

