Location: EqualPredicateTest.java

Content: 

@Override protected Predicate<Object> generatePredicate(){

  return equalPredicate(null);

}

Location: EqualPredicateTest.java

Content: 

@Test public void objectFactoryUsesEqualsForTest() throws Exception {

  final Predicate<EqualsTestObject> predicate=equalPredicate(FALSE_OBJECT);

  assertPredicateFalse(predicate,FALSE_OBJECT);

  assertPredicateTrue(equalPredicate(TRUE_OBJECT),TRUE_OBJECT);

}

Location: EqualPredicateTest.java

Content: 

@Test public void testNullArgumentEqualsNullPredicate() throws Exception {

  assertSame(nullPredicate(),equalPredicate(null));

}

Location: EqualPredicateTest.java

Content: 

@SuppressWarnings("boxing") @Test public void testPredicateTypeCanBeSuperClassOfObject() throws Exception {

  final Predicate<Number> predicate=equalPredicate((Number)4);

  assertPredicateTrue(predicate,4);

}

Location: EqualPredicateTest.java

Content: 

@Override protected Predicate<Object> generatePredicate(){

  return equalPredicate(null);

}

Location: EqualPredicateTest.java

Content: 

@Test public void objectFactoryUsesEqualsForTest() throws Exception {

  final Predicate<EqualsTestObject> predicate=equalPredicate(FALSE_OBJECT);

  assertPredicateFalse(predicate,FALSE_OBJECT);

  assertPredicateTrue(equalPredicate(TRUE_OBJECT),TRUE_OBJECT);

}

Location: EqualPredicateTest.java

Content: 

@Test public void testNullArgumentEqualsNullPredicate() throws Exception {

  assertSame(nullPredicate(),equalPredicate(null));

}

Location: EqualPredicateTest.java

Content: 

@SuppressWarnings("boxing") @Test public void testPredicateTypeCanBeSuperClassOfObject() throws Exception {

  final Predicate<Number> predicate=equalPredicate((Number)4);

  assertPredicateTrue(predicate,4);

}

