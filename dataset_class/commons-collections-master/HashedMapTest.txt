Location: HashedMapTest.java

Content: 

public HashedMapTest(final String testName){

  super(testName);

}

Location: HashedMapTest.java

Content: 

public void testInternalState(){

  final HashedMap<Integer,Integer> map=new HashedMap<>(42,0.75f);

  assertEquals(0.75f,map.loadFactor,0.1f);

  assertEquals(0,map.size);

  assertEquals(64,map.data.length);

  assertEquals(48,map.threshold);

  assertEquals(0,map.modCount);

  final HashedMap<Integer,Integer> tmpMap=new HashedMap<>();

  for (int i=1; i <= map.threshold; i++) {

    tmpMap.put(i,i);

  }

  map.putAll(tmpMap);

  assertEquals(96,map.threshold);

}

Location: HashedMapTest.java

Content: 

public HashedMapTest(final String testName){

  super(testName);

}

Location: HashedMapTest.java

Content: 

public void testInternalState(){

  final HashedMap<Integer,Integer> map=new HashedMap<>(42,0.75f);

  assertEquals(0.75f,map.loadFactor,0.1f);

  assertEquals(0,map.size);

  assertEquals(64,map.data.length);

  assertEquals(48,map.threshold);

  assertEquals(0,map.modCount);

  final HashedMap<Integer,Integer> tmpMap=new HashedMap<>();

  for (int i=1; i <= map.threshold; i++) {

    tmpMap.put(i,i);

  }

  map.putAll(tmpMap);

  assertEquals(96,map.threshold);

}

