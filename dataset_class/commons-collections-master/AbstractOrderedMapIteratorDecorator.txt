Location: AbstractOrderedMapIteratorDecorator.java

Content: 

/** 

 * Constructor that decorates the specified iterator.

 * @param iterator  the iterator to decorate, must not be null

 * @throws NullPointerException if the iterator is null

 */

public AbstractOrderedMapIteratorDecorator(final OrderedMapIterator<K,V> iterator){

  this.iterator=Objects.requireNonNull(iterator,"iterator");

}

Location: AbstractOrderedMapIteratorDecorator.java

Content: 

/** 

 * Gets the iterator being decorated.

 * @return the decorated iterator

 */

protected OrderedMapIterator<K,V> getOrderedMapIterator(){

  return iterator;

}

Location: AbstractOrderedMapIteratorDecorator.java

Content: 

/** 

 * Constructor that decorates the specified iterator.

 * @param iterator  the iterator to decorate, must not be null

 * @throws NullPointerException if the iterator is null

 */

public AbstractOrderedMapIteratorDecorator(final OrderedMapIterator<K,V> iterator){

  this.iterator=Objects.requireNonNull(iterator,"iterator");

}

Location: AbstractOrderedMapIteratorDecorator.java

Content: 

/** 

 * Gets the iterator being decorated.

 * @return the decorated iterator

 */

protected OrderedMapIterator<K,V> getOrderedMapIterator(){

  return iterator;

}

