Location: LoopingIterator.java

Content: 

/** 

 * Constructor that wraps a collection. <p> There is no way to reset an Iterator instance without recreating it from the original source, so the Collection must be passed in.

 * @param collection  the collection to wrap

 * @throws NullPointerException if the collection is null

 */

public LoopingIterator(final Collection<? extends E> collection){

  this.collection=Objects.requireNonNull(collection,"collection");

  reset();

}

Location: LoopingIterator.java

Content: 

/** 

 * Constructor that wraps a collection. <p> There is no way to reset an Iterator instance without recreating it from the original source, so the Collection must be passed in.

 * @param collection  the collection to wrap

 * @throws NullPointerException if the collection is null

 */

public LoopingIterator(final Collection<? extends E> collection){

  this.collection=Objects.requireNonNull(collection,"collection");

  reset();

}

