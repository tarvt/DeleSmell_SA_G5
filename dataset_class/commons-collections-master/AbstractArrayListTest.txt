Location: AbstractArrayListTest.java

Content: 

public AbstractArrayListTest(final String testName){

  super(testName);

}

Location: AbstractArrayListTest.java

Content: 

public void testNewArrayList(){

  final ArrayList<E> list=makeObject();

  assertTrue("New list is empty",list.isEmpty());

  assertEquals("New list has size zero",0,list.size());

  try {

    list.get(1);

    fail("get(int i) should have thrown IndexOutOfBoundsException");

  }

 catch (  final IndexOutOfBoundsException e) {

  }

}

Location: AbstractArrayListTest.java

Content: 

@SuppressWarnings("unchecked") public void testSearch(){

  final ArrayList<E> list=makeObject();

  list.add((E)"First Item");

  list.add((E)"Last Item");

  assertEquals("First item is 'First Item'","First Item",list.get(0));

  assertEquals("Last Item is 'Last Item'","Last Item",list.get(1));

}

Location: AbstractArrayListTest.java

Content: 

public AbstractArrayListTest(final String testName){

  super(testName);

}

Location: AbstractArrayListTest.java

Content: 

public void testNewArrayList(){

  final ArrayList<E> list=makeObject();

  assertTrue("New list is empty",list.isEmpty());

  assertEquals("New list has size zero",0,list.size());

  try {

    list.get(1);

    fail("get(int i) should have thrown IndexOutOfBoundsException");

  }

 catch (  final IndexOutOfBoundsException e) {

  }

}

Location: AbstractArrayListTest.java

Content: 

@SuppressWarnings("unchecked") public void testSearch(){

  final ArrayList<E> list=makeObject();

  list.add((E)"First Item");

  list.add((E)"Last Item");

  assertEquals("First item is 'First Item'","First Item",list.get(0));

  assertEquals("Last Item is 'Last Item'","Last Item",list.get(1));

}

