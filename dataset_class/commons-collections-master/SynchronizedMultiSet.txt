Location: SynchronizedMultiSet.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param multiset  the multiset to decorate, must not be null

 * @throws NullPointerException if multiset is null

 */

protected SynchronizedMultiSet(final MultiSet<E> multiset){

  super(multiset);

}

Location: SynchronizedMultiSet.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param multiset  the multiset to decorate, must not be null

 * @param lock  the lock to use, must not be null

 * @throws NullPointerException if multiset or lock is null

 */

protected SynchronizedMultiSet(final MultiSet<E> multiset,final Object lock){

  super(multiset,lock);

}

Location: SynchronizedMultiSet.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param multiset  the multiset to decorate, must not be null

 * @throws NullPointerException if multiset is null

 */

protected SynchronizedMultiSet(final MultiSet<E> multiset){

  super(multiset);

}

Location: SynchronizedMultiSet.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param multiset  the multiset to decorate, must not be null

 * @param lock  the lock to use, must not be null

 * @throws NullPointerException if multiset or lock is null

 */

protected SynchronizedMultiSet(final MultiSet<E> multiset,final Object lock){

  super(multiset,lock);

}

