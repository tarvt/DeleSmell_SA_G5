Location: FixedSizeListTest.java

Content: 

public FixedSizeListTest(final String testName){

  super(testName);

}

Location: FixedSizeListTest.java

Content: 

private FixedSizeList<String> initFixedSizeList(){

  final List<String> decoratedList=new ArrayList<>();

  decoratedList.add("item 1");

  decoratedList.add("item 2");

  return FixedSizeList.fixedSizeList(decoratedList);

}

Location: FixedSizeListTest.java

Content: 

public void testAddAll(){

  final FixedSizeList<String> fixedSizeList=initFixedSizeList();

  final List<String> addList=new ArrayList<>();

  addList.add("item 3");

  addList.add("item 4");

  try {

    fixedSizeList.addAll(2,addList);

    fail();

  }

 catch (  final UnsupportedOperationException ex) {

  }

}

Location: FixedSizeListTest.java

Content: 

public void testIsFull(){

  final FixedSizeList<String> fixedSizeList=initFixedSizeList();

  Assert.assertTrue(fixedSizeList.isFull());

}

Location: FixedSizeListTest.java

Content: 

public void testListAllowsMutationOfUnderlyingCollection(){

  final List<String> decoratedList=new ArrayList<>();

  decoratedList.add("item 1");

  decoratedList.add("item 2");

  final FixedSizeList<String> fixedSizeList=FixedSizeList.fixedSizeList(decoratedList);

  final int sizeBefore=fixedSizeList.size();

  final boolean changed=decoratedList.add("New Value");

  Assert.assertTrue(changed);

  Assert.assertEquals("Modifying an the underlying list is allowed",sizeBefore + 1,fixedSizeList.size());

}

Location: FixedSizeListTest.java

Content: 

public void testMaxSize(){

  final FixedSizeList<String> fixedSizeList=initFixedSizeList();

  Assert.assertEquals(2,fixedSizeList.maxSize());

}

Location: FixedSizeListTest.java

Content: 

public FixedSizeListTest(final String testName){

  super(testName);

}

Location: FixedSizeListTest.java

Content: 

private FixedSizeList<String> initFixedSizeList(){

  final List<String> decoratedList=new ArrayList<>();

  decoratedList.add("item 1");

  decoratedList.add("item 2");

  return FixedSizeList.fixedSizeList(decoratedList);

}

Location: FixedSizeListTest.java

Content: 

public void testAddAll(){

  final FixedSizeList<String> fixedSizeList=initFixedSizeList();

  final List<String> addList=new ArrayList<>();

  addList.add("item 3");

  addList.add("item 4");

  try {

    fixedSizeList.addAll(2,addList);

    fail();

  }

 catch (  final UnsupportedOperationException ex) {

  }

}

Location: FixedSizeListTest.java

Content: 

public void testIsFull(){

  final FixedSizeList<String> fixedSizeList=initFixedSizeList();

  Assert.assertTrue(fixedSizeList.isFull());

}

Location: FixedSizeListTest.java

Content: 

public void testListAllowsMutationOfUnderlyingCollection(){

  final List<String> decoratedList=new ArrayList<>();

  decoratedList.add("item 1");

  decoratedList.add("item 2");

  final FixedSizeList<String> fixedSizeList=FixedSizeList.fixedSizeList(decoratedList);

  final int sizeBefore=fixedSizeList.size();

  final boolean changed=decoratedList.add("New Value");

  Assert.assertTrue(changed);

  Assert.assertEquals("Modifying an the underlying list is allowed",sizeBefore + 1,fixedSizeList.size());

}

Location: FixedSizeListTest.java

Content: 

public void testMaxSize(){

  final FixedSizeList<String> fixedSizeList=initFixedSizeList();

  Assert.assertEquals(2,fixedSizeList.maxSize());

}

