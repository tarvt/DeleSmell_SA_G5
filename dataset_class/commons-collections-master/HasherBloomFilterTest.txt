Location: HasherBloomFilterTest.java

Content: 

/** 

 * Tests that the constructor works correctly.

 */

@Test public void constructorTest_NonStatic(){

  final Shape shape=new Shape(new MD5Cyclic(),3,72,17);

  final DynamicHasher hasher=new DynamicHasher.Builder(new MD5Cyclic()).with("Hello",StandardCharsets.UTF_8).build();

  final HasherBloomFilter filter=createFilter(hasher,shape);

  final long[] lb=filter.getBits();

  assertEquals(2,lb.length);

  assertEquals(0x6203101001888c44L,lb[0]);

  assertEquals(0x60L,lb[1]);

}

Location: HasherBloomFilterTest.java

Content: 

/** 

 * Test the edge case where the filter is empty and the getBits() function returns a zero length array.

 */

@Test public void getBitsTest_Empty(){

  final BloomFilter filter=createEmptyFilter(shape);

  assertArrayEquals(new long[0],filter.getBits());

}

Location: HasherBloomFilterTest.java

Content: 

/** 

 * Test the edge case where the filter has only 1 bit in the lowest index and the getBits() function returns an array of length 1.

 */

@Test public void getBitsTest_LowestBitOnly(){

  final BloomFilter filter=createEmptyFilter(shape);

  filter.merge(new Hasher(){

    @Override public OfInt iterator(    final Shape shape){

      return Arrays.stream(new int[]{0}).iterator();

    }

    @Override public HashFunctionIdentity getHashFunctionIdentity(){

      return shape.getHashFunctionIdentity();

    }

  }

);

  assertArrayEquals(new long[]{1L},filter.getBits());

}

Location: HasherBloomFilterTest.java

Content: 

/** 

 * Tests that the constructor works correctly.

 */

@Test public void constructorTest_NonStatic(){

  final Shape shape=new Shape(new MD5Cyclic(),3,72,17);

  final DynamicHasher hasher=new DynamicHasher.Builder(new MD5Cyclic()).with("Hello",StandardCharsets.UTF_8).build();

  final HasherBloomFilter filter=createFilter(hasher,shape);

  final long[] lb=filter.getBits();

  assertEquals(2,lb.length);

  assertEquals(0x6203101001888c44L,lb[0]);

  assertEquals(0x60L,lb[1]);

}

Location: HasherBloomFilterTest.java

Content: 

/** 

 * Test the edge case where the filter is empty and the getBits() function returns a zero length array.

 */

@Test public void getBitsTest_Empty(){

  final BloomFilter filter=createEmptyFilter(shape);

  assertArrayEquals(new long[0],filter.getBits());

}

Location: HasherBloomFilterTest.java

Content: 

/** 

 * Test the edge case where the filter has only 1 bit in the lowest index and the getBits() function returns an array of length 1.

 */

@Test public void getBitsTest_LowestBitOnly(){

  final BloomFilter filter=createEmptyFilter(shape);

  filter.merge(new Hasher(){

    @Override public OfInt iterator(    final Shape shape){

      return Arrays.stream(new int[]{0}).iterator();

    }

    @Override public HashFunctionIdentity getHashFunctionIdentity(){

      return shape.getHashFunctionIdentity();

    }

  }

);

  assertArrayEquals(new long[]{1L},filter.getBits());

}

