Location: SynchronizedQueue.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param queue the queue to decorate, must not be null

 * @throws NullPointerException if queue is null

 */

protected SynchronizedQueue(final Queue<E> queue){

  super(queue);

}

Location: SynchronizedQueue.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param queue the queue to decorate, must not be null

 * @param lock the lock to use, must not be null

 * @throws NullPointerException if queue or lock is null

 */

protected SynchronizedQueue(final Queue<E> queue,final Object lock){

  super(queue,lock);

}

Location: SynchronizedQueue.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param queue the queue to decorate, must not be null

 * @throws NullPointerException if queue is null

 */

protected SynchronizedQueue(final Queue<E> queue){

  super(queue);

}

Location: SynchronizedQueue.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param queue the queue to decorate, must not be null

 * @param lock the lock to use, must not be null

 * @throws NullPointerException if queue or lock is null

 */

protected SynchronizedQueue(final Queue<E> queue,final Object lock){

  super(queue,lock);

}

