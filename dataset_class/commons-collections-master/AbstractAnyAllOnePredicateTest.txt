Location: AbstractAnyAllOnePredicateTest.java

Content: 

/** 

 * Creates a new  {@code TestCompositePredicate}.

 * @param testValue the value which the mock predicates should expect to see (may be null).

 */

protected AbstractAnyAllOnePredicateTest(final T testValue){

  super(testValue);

}

Location: AbstractAnyAllOnePredicateTest.java

Content: 

/** 

 * Tests creating composite predicate instances with single predicates and verifies that the composite returns the same value as the single predicate does.

 */

@SuppressWarnings("boxing") public final void singleValues(){

  assertTrue(getPredicateInstance(true).evaluate(null));

  assertFalse(getPredicateInstance(false).evaluate(null));

}

Location: AbstractAnyAllOnePredicateTest.java

Content: 

/** 

 * Creates a new  {@code TestCompositePredicate}.

 * @param testValue the value which the mock predicates should expect to see (may be null).

 */

protected AbstractAnyAllOnePredicateTest(final T testValue){

  super(testValue);

}

Location: AbstractAnyAllOnePredicateTest.java

Content: 

/** 

 * Tests creating composite predicate instances with single predicates and verifies that the composite returns the same value as the single predicate does.

 */

@SuppressWarnings("boxing") public final void singleValues(){

  assertTrue(getPredicateInstance(true).evaluate(null));

  assertFalse(getPredicateInstance(false).evaluate(null));

}

