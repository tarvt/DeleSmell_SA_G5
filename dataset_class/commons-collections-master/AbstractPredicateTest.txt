Location: AbstractPredicateTest.java

Content: 

protected <T>void assertPredicateFalse(final Predicate<T> predicate,final T testObject){

  Assert.assertFalse(predicate.evaluate(testObject));

}

Location: AbstractPredicateTest.java

Content: 

protected <T>void assertPredicateTrue(final Predicate<T> predicate,final T testObject){

  Assert.assertTrue(predicate.evaluate(testObject));

}

Location: AbstractPredicateTest.java

Content: 

@BeforeEach public void initializeTestObjects() throws Exception {

  cObject=new Object();

  cString="Hello";

  cInteger=Integer.valueOf(6);

}

Location: AbstractPredicateTest.java

Content: 

@Test public void predicateSanityTests() throws Exception {

  final Predicate<?> predicate=generatePredicate();

  Assert.assertNotNull(predicate);

}

Location: AbstractPredicateTest.java

Content: 

protected <T>void assertPredicateFalse(final Predicate<T> predicate,final T testObject){

  Assert.assertFalse(predicate.evaluate(testObject));

}

Location: AbstractPredicateTest.java

Content: 

protected <T>void assertPredicateTrue(final Predicate<T> predicate,final T testObject){

  Assert.assertTrue(predicate.evaluate(testObject));

}

Location: AbstractPredicateTest.java

Content: 

@BeforeEach public void initializeTestObjects() throws Exception {

  cObject=new Object();

  cString="Hello";

  cInteger=Integer.valueOf(6);

}

Location: AbstractPredicateTest.java

Content: 

@Test public void predicateSanityTests() throws Exception {

  final Predicate<?> predicate=generatePredicate();

  Assert.assertNotNull(predicate);

}

