Location: SingletonListIteratorTest.java

Content: 

/** 

 * Returns a SingletonListIterator from which the element has already been removed.

 */

@Override public SingletonListIterator<E> makeEmptyIterator(){

  final SingletonListIterator<E> iter=makeObject();

  iter.next();

  iter.remove();

  iter.reset();

  return iter;

}

Location: SingletonListIteratorTest.java

Content: 

public SingletonListIteratorTest(final String testName){

  super(testName);

}

Location: SingletonListIteratorTest.java

Content: 

@Override public boolean supportsAdd(){

  return false;

}

Location: SingletonListIteratorTest.java

Content: 

@Override public boolean supportsEmptyIterator(){

  return true;

}

Location: SingletonListIteratorTest.java

Content: 

@Override public boolean supportsRemove(){

  return true;

}

Location: SingletonListIteratorTest.java

Content: 

/** 

 * Returns a SingletonListIterator from which the element has already been removed.

 */

@Override public SingletonListIterator<E> makeEmptyIterator(){

  final SingletonListIterator<E> iter=makeObject();

  iter.next();

  iter.remove();

  iter.reset();

  return iter;

}

Location: SingletonListIteratorTest.java

Content: 

public SingletonListIteratorTest(final String testName){

  super(testName);

}

Location: SingletonListIteratorTest.java

Content: 

@Override public boolean supportsAdd(){

  return false;

}

Location: SingletonListIteratorTest.java

Content: 

@Override public boolean supportsEmptyIterator(){

  return true;

}

Location: SingletonListIteratorTest.java

Content: 

@Override public boolean supportsRemove(){

  return true;

}

