Location: AbstractIterableGetMapDecorator.java

Content: 

/** 

 * Constructor only used in deserialization, do not use otherwise.

 */

protected AbstractIterableGetMapDecorator(){

}

Location: AbstractIterableGetMapDecorator.java

Content: 

/** 

 * Create a new AbstractSplitMapDecorator.

 * @param map the map to decorate, must not be null

 * @throws NullPointerException if map is null

 */

public AbstractIterableGetMapDecorator(final Map<K,V> map){

  this.map=Objects.requireNonNull(map,"map");

}

Location: AbstractIterableGetMapDecorator.java

Content: 

/** 

 * Gets the map being decorated.

 * @return the decorated map

 */

protected Map<K,V> decorated(){

  return map;

}

Location: AbstractIterableGetMapDecorator.java

Content: 

/** 

 * Constructor only used in deserialization, do not use otherwise.

 */

protected AbstractIterableGetMapDecorator(){

}

Location: AbstractIterableGetMapDecorator.java

Content: 

/** 

 * Create a new AbstractSplitMapDecorator.

 * @param map the map to decorate, must not be null

 * @throws NullPointerException if map is null

 */

public AbstractIterableGetMapDecorator(final Map<K,V> map){

  this.map=Objects.requireNonNull(map,"map");

}

Location: AbstractIterableGetMapDecorator.java

Content: 

/** 

 * Gets the map being decorated.

 * @return the decorated map

 */

protected Map<K,V> decorated(){

  return map;

}

