Location: EmptySetMutator.java

Content: 

@Override public boolean addAll(final CompositeSet<E> composite,final List<Set<E>> collections,final Collection<? extends E> coll){

  return contained.addAll(coll);

}

Location: EmptySetMutator.java

Content: 

@Override public boolean add(final CompositeSet<E> composite,final List<Set<E>> collections,final E obj){

  return contained.add(obj);

}

Location: EmptySetMutator.java

Content: 

EmptySetMutator(final Set<E> set){

  this.contained=set;

}

Location: EmptySetMutator.java

Content: 

@Override public void resolveCollision(final CompositeSet<E> comp,final Set<E> existing,final Set<E> added,final Collection<E> intersects){

  throw new IllegalArgumentException();

}

Location: EmptySetMutator.java

Content: 

@Override public boolean addAll(final CompositeSet<E> composite,final List<Set<E>> collections,final Collection<? extends E> coll){

  return contained.addAll(coll);

}

Location: EmptySetMutator.java

Content: 

@Override public boolean add(final CompositeSet<E> composite,final List<Set<E>> collections,final E obj){

  return contained.add(obj);

}

Location: EmptySetMutator.java

Content: 

EmptySetMutator(final Set<E> set){

  this.contained=set;

}

Location: EmptySetMutator.java

Content: 

@Override public void resolveCollision(final CompositeSet<E> comp,final Set<E> existing,final Set<E> added,final Collection<E> intersects){

  throw new IllegalArgumentException();

}

