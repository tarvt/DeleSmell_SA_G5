Location: AllPredicate.java

Content: 

/** 

 * Factory to create the predicate. <p> If the collection is size zero, the predicate always returns true. If the collection is size one, then that predicate is returned.

 * @param < T > the type that the predicate queries

 * @param predicates  the predicates to check, cloned, not null

 * @return the {@code all} predicate

 * @throws NullPointerException if the predicates array is null

 * @throws NullPointerException if any predicate in the array is null

 */

public static <T>Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates){

  final Predicate<? super T>[] preds=validate(predicates);

  if (preds.length == 0) {

    return truePredicate();

  }

  if (preds.length == 1) {

    return coerce(preds[0]);

  }

  return new AllPredicate<>(preds);

}

Location: AllPredicate.java

Content: 

/** 

 * Constructor that performs no validation. Use  {@code allPredicate} if you want that.

 * @param predicates  the predicates to check, not cloned, not null

 */

public AllPredicate(final Predicate<? super T>... predicates){

  super(predicates);

}

Location: AllPredicate.java

Content: 

/** 

 * Factory to create the predicate. <p> If the collection is size zero, the predicate always returns true. If the collection is size one, then that predicate is returned.

 * @param < T > the type that the predicate queries

 * @param predicates  the predicates to check, cloned, not null

 * @return the {@code all} predicate

 * @throws NullPointerException if the predicates array is null

 * @throws NullPointerException if any predicate in the array is null

 */

public static <T>Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates){

  final Predicate<? super T>[] preds=validate(predicates);

  if (preds.length == 0) {

    return truePredicate();

  }

  if (preds.length == 1) {

    return coerce(preds[0]);

  }

  return new AllPredicate<>(preds);

}

Location: AllPredicate.java

Content: 

/** 

 * Constructor that performs no validation. Use  {@code allPredicate} if you want that.

 * @param predicates  the predicates to check, not cloned, not null

 */

public AllPredicate(final Predicate<? super T>... predicates){

  super(predicates);

}

