Location: PermutationIterator.java

Content: 

/** 

 * Standard constructor for this class.

 * @param collection  the collection to generate permutations for

 * @throws NullPointerException if coll is null

 */

public PermutationIterator(final Collection<? extends E> collection){

  Objects.requireNonNull(collection,"collection");

  keys=new int[collection.size()];

  direction=new boolean[collection.size()];

  Arrays.fill(direction,false);

  int value=1;

  objectMap=new HashMap<>();

  for (  final E e : collection) {

    objectMap.put(Integer.valueOf(value),e);

    keys[value - 1]=value;

    value++;

  }

  nextPermutation=new ArrayList<>(collection);

}

Location: PermutationIterator.java

Content: 

/** 

 * Standard constructor for this class.

 * @param collection  the collection to generate permutations for

 * @throws NullPointerException if coll is null

 */

public PermutationIterator(final Collection<? extends E> collection){

  Objects.requireNonNull(collection,"collection");

  keys=new int[collection.size()];

  direction=new boolean[collection.size()];

  Arrays.fill(direction,false);

  int value=1;

  objectMap=new HashMap<>();

  for (  final E e : collection) {

    objectMap.put(Integer.valueOf(value),e);

    keys[value - 1]=value;

    value++;

  }

  nextPermutation=new ArrayList<>(collection);

}

