Location: DefaultMapEntry.java

Content: 

/** 

 * Constructs a new entry from the specified  {@code KeyValue}.

 * @param pair  the pair to copy, must not be null

 * @throws NullPointerException if the entry is null

 */

public DefaultMapEntry(final KeyValue<? extends K,? extends V> pair){

  super(pair.getKey(),pair.getValue());

}

Location: DefaultMapEntry.java

Content: 

/** 

 * Constructs a new entry with the specified key and given value.

 * @param key  the key for the entry, may be null

 * @param value  the value for the entry, may be null

 */

public DefaultMapEntry(final K key,final V value){

  super(key,value);

}

Location: DefaultMapEntry.java

Content: 

/** 

 * Constructs a new entry from the specified  {@code Map.Entry}.

 * @param entry  the entry to copy, must not be null

 * @throws NullPointerException if the entry is null

 */

public DefaultMapEntry(final Map.Entry<? extends K,? extends V> entry){

  super(entry.getKey(),entry.getValue());

}

Location: DefaultMapEntry.java

Content: 

/** 

 * Constructs a new entry from the specified  {@code KeyValue}.

 * @param pair  the pair to copy, must not be null

 * @throws NullPointerException if the entry is null

 */

public DefaultMapEntry(final KeyValue<? extends K,? extends V> pair){

  super(pair.getKey(),pair.getValue());

}

Location: DefaultMapEntry.java

Content: 

/** 

 * Constructs a new entry with the specified key and given value.

 * @param key  the key for the entry, may be null

 * @param value  the value for the entry, may be null

 */

public DefaultMapEntry(final K key,final V value){

  super(key,value);

}

Location: DefaultMapEntry.java

Content: 

/** 

 * Constructs a new entry from the specified  {@code Map.Entry}.

 * @param entry  the entry to copy, must not be null

 * @throws NullPointerException if the entry is null

 */

public DefaultMapEntry(final Map.Entry<? extends K,? extends V> entry){

  super(entry.getKey(),entry.getValue());

}

