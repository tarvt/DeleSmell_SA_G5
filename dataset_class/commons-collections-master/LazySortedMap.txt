Location: LazySortedMap.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the map to decorate, must not be null

 * @param factory  the factory to use, must not be null

 * @throws NullPointerException if map or factory is null

 */

protected LazySortedMap(final SortedMap<K,V> map,final Factory<? extends V> factory){

  super(map,factory);

}

Location: LazySortedMap.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the map to decorate, must not be null

 * @param factory  the factory to use, must not be null

 * @throws NullPointerException if map or factory is null

 */

protected LazySortedMap(final SortedMap<K,V> map,final Transformer<? super K,? extends V> factory){

  super(map,factory);

}

Location: LazySortedMap.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the map to decorate, must not be null

 * @param factory  the factory to use, must not be null

 * @throws NullPointerException if map or factory is null

 */

protected LazySortedMap(final SortedMap<K,V> map,final Factory<? extends V> factory){

  super(map,factory);

}

Location: LazySortedMap.java

Content: 

/** 

 * Constructor that wraps (not copies).

 * @param map  the map to decorate, must not be null

 * @param factory  the factory to use, must not be null

 * @throws NullPointerException if map or factory is null

 */

protected LazySortedMap(final SortedMap<K,V> map,final Transformer<? super K,? extends V> factory){

  super(map,factory);

}

