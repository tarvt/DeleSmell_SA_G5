Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an empty ArrayListValuedHashMap with the default initial map capacity (16) and the default initial list capacity (3).

 */

public ArrayListValuedHashMap(){

  this(DEFAULT_INITIAL_MAP_CAPACITY,DEFAULT_INITIAL_LIST_CAPACITY);

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an empty ArrayListValuedHashMap with the default initial map capacity (16) and the specified initial list capacity.

 * @param initialListCapacity  the initial capacity used for value collections

 */

public ArrayListValuedHashMap(final int initialListCapacity){

  this(DEFAULT_INITIAL_MAP_CAPACITY,initialListCapacity);

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an empty ArrayListValuedHashMap with the specified initial map and list capacities.

 * @param initialMapCapacity  the initial hashmap capacity

 * @param initialListCapacity  the initial capacity used for value collections

 */

public ArrayListValuedHashMap(final int initialMapCapacity,final int initialListCapacity){

  super(new HashMap<K,ArrayList<V>>(initialMapCapacity));

  this.initialListCapacity=initialListCapacity;

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an ArrayListValuedHashMap copying all the mappings of the given map.

 * @param map a {@code Map} to copy into this map

 */

public ArrayListValuedHashMap(final Map<? extends K,? extends V> map){

  this(map.size(),DEFAULT_INITIAL_LIST_CAPACITY);

  super.putAll(map);

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an ArrayListValuedHashMap copying all the mappings of the given map.

 * @param map a {@code MultiValuedMap} to copy into this map

 */

public ArrayListValuedHashMap(final MultiValuedMap<? extends K,? extends V> map){

  this(map.size(),DEFAULT_INITIAL_LIST_CAPACITY);

  super.putAll(map);

}

Location: ArrayListValuedHashMap.java

Content: 

@Override protected ArrayList<V> createCollection(){

  return new ArrayList<>(initialListCapacity);

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Trims the capacity of all value collections to their current size.

 */

public void trimToSize(){

  for (  final Collection<V> coll : getMap().values()) {

    final ArrayList<V> list=(ArrayList<V>)coll;

    list.trimToSize();

  }

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an empty ArrayListValuedHashMap with the default initial map capacity (16) and the default initial list capacity (3).

 */

public ArrayListValuedHashMap(){

  this(DEFAULT_INITIAL_MAP_CAPACITY,DEFAULT_INITIAL_LIST_CAPACITY);

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an empty ArrayListValuedHashMap with the default initial map capacity (16) and the specified initial list capacity.

 * @param initialListCapacity  the initial capacity used for value collections

 */

public ArrayListValuedHashMap(final int initialListCapacity){

  this(DEFAULT_INITIAL_MAP_CAPACITY,initialListCapacity);

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an empty ArrayListValuedHashMap with the specified initial map and list capacities.

 * @param initialMapCapacity  the initial hashmap capacity

 * @param initialListCapacity  the initial capacity used for value collections

 */

public ArrayListValuedHashMap(final int initialMapCapacity,final int initialListCapacity){

  super(new HashMap<K,ArrayList<V>>(initialMapCapacity));

  this.initialListCapacity=initialListCapacity;

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an ArrayListValuedHashMap copying all the mappings of the given map.

 * @param map a {@code Map} to copy into this map

 */

public ArrayListValuedHashMap(final Map<? extends K,? extends V> map){

  this(map.size(),DEFAULT_INITIAL_LIST_CAPACITY);

  super.putAll(map);

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Creates an ArrayListValuedHashMap copying all the mappings of the given map.

 * @param map a {@code MultiValuedMap} to copy into this map

 */

public ArrayListValuedHashMap(final MultiValuedMap<? extends K,? extends V> map){

  this(map.size(),DEFAULT_INITIAL_LIST_CAPACITY);

  super.putAll(map);

}

Location: ArrayListValuedHashMap.java

Content: 

@Override protected ArrayList<V> createCollection(){

  return new ArrayList<>(initialListCapacity);

}

Location: ArrayListValuedHashMap.java

Content: 

/** 

 * Trims the capacity of all value collections to their current size.

 */

public void trimToSize(){

  for (  final Collection<V> coll : getMap().values()) {

    final ArrayList<V> list=(ArrayList<V>)coll;

    list.trimToSize();

  }

}

