Location: BooleanComparatorTest.java

Content: 

protected void allTests(final boolean trueFirst,final BooleanComparator comp){

  orderIndependentTests(comp);

  if (trueFirst) {

    trueFirstTests(comp);

  }

 else {

    falseFirstTests(comp);

  }

}

Location: BooleanComparatorTest.java

Content: 

public BooleanComparatorTest(final String testName){

  super(testName);

}

Location: BooleanComparatorTest.java

Content: 

protected void falseFirstTests(final BooleanComparator comp){

  assertNotNull(comp);

  assertEquals(0,comp.compare(true,true));

  assertEquals(0,comp.compare(false,false));

  assertTrue(comp.compare(false,true) < 0);

  assertTrue(comp.compare(true,false) > 0);

}

Location: BooleanComparatorTest.java

Content: 

protected void nullArgumentTests(final BooleanComparator comp){

  assertNotNull(comp);

  try {

    comp.compare(null,null);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

  try {

    comp.compare(Boolean.TRUE,null);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

  try {

    comp.compare(Boolean.FALSE,null);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

  try {

    comp.compare(null,Boolean.TRUE);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

  try {

    comp.compare(null,Boolean.FALSE);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

}

Location: BooleanComparatorTest.java

Content: 

protected void orderIndependentTests(final BooleanComparator comp){

  nullArgumentTests(comp);

}

Location: BooleanComparatorTest.java

Content: 

@Test public void testEqualsCompatibleInstance(){

  assertEquals(new BooleanComparator(),new BooleanComparator(false));

  assertEquals(new BooleanComparator(false),new BooleanComparator(false));

  assertEquals(new BooleanComparator(false),BooleanComparator.getFalseFirstComparator());

  assertSame(BooleanComparator.getFalseFirstComparator(),BooleanComparator.booleanComparator(false));

  assertEquals(new BooleanComparator(true),new BooleanComparator(true));

  assertEquals(new BooleanComparator(true),BooleanComparator.getTrueFirstComparator());

  assertSame(BooleanComparator.getTrueFirstComparator(),BooleanComparator.booleanComparator(true));

  assertNotEquals(new BooleanComparator(),new BooleanComparator(true));

  assertNotEquals(new BooleanComparator(true),new BooleanComparator(false));

}

Location: BooleanComparatorTest.java

Content: 

@Test public void testStaticFactoryMethods(){

  allTests(false,BooleanComparator.getFalseFirstComparator());

  allTests(false,BooleanComparator.booleanComparator(false));

  allTests(true,BooleanComparator.getTrueFirstComparator());

  allTests(true,BooleanComparator.booleanComparator(true));

}

Location: BooleanComparatorTest.java

Content: 

protected void trueFirstTests(final BooleanComparator comp){

  assertNotNull(comp);

  assertEquals(0,comp.compare(true,true));

  assertEquals(0,comp.compare(false,false));

  assertTrue(comp.compare(false,true) > 0);

  assertTrue(comp.compare(true,false) < 0);

}

Location: BooleanComparatorTest.java

Content: 

protected void allTests(final boolean trueFirst,final BooleanComparator comp){

  orderIndependentTests(comp);

  if (trueFirst) {

    trueFirstTests(comp);

  }

 else {

    falseFirstTests(comp);

  }

}

Location: BooleanComparatorTest.java

Content: 

public BooleanComparatorTest(final String testName){

  super(testName);

}

Location: BooleanComparatorTest.java

Content: 

protected void falseFirstTests(final BooleanComparator comp){

  assertNotNull(comp);

  assertEquals(0,comp.compare(true,true));

  assertEquals(0,comp.compare(false,false));

  assertTrue(comp.compare(false,true) < 0);

  assertTrue(comp.compare(true,false) > 0);

}

Location: BooleanComparatorTest.java

Content: 

protected void nullArgumentTests(final BooleanComparator comp){

  assertNotNull(comp);

  try {

    comp.compare(null,null);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

  try {

    comp.compare(Boolean.TRUE,null);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

  try {

    comp.compare(Boolean.FALSE,null);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

  try {

    comp.compare(null,Boolean.TRUE);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

  try {

    comp.compare(null,Boolean.FALSE);

    fail("Expected NullPointerException");

  }

 catch (  final NullPointerException e) {

  }

}

Location: BooleanComparatorTest.java

Content: 

protected void orderIndependentTests(final BooleanComparator comp){

  nullArgumentTests(comp);

}

Location: BooleanComparatorTest.java

Content: 

@Test public void testEqualsCompatibleInstance(){

  assertEquals(new BooleanComparator(),new BooleanComparator(false));

  assertEquals(new BooleanComparator(false),new BooleanComparator(false));

  assertEquals(new BooleanComparator(false),BooleanComparator.getFalseFirstComparator());

  assertSame(BooleanComparator.getFalseFirstComparator(),BooleanComparator.booleanComparator(false));

  assertEquals(new BooleanComparator(true),new BooleanComparator(true));

  assertEquals(new BooleanComparator(true),BooleanComparator.getTrueFirstComparator());

  assertSame(BooleanComparator.getTrueFirstComparator(),BooleanComparator.booleanComparator(true));

  assertNotEquals(new BooleanComparator(),new BooleanComparator(true));

  assertNotEquals(new BooleanComparator(true),new BooleanComparator(false));

}

Location: BooleanComparatorTest.java

Content: 

@Test public void testStaticFactoryMethods(){

  allTests(false,BooleanComparator.getFalseFirstComparator());

  allTests(false,BooleanComparator.booleanComparator(false));

  allTests(true,BooleanComparator.getTrueFirstComparator());

  allTests(true,BooleanComparator.booleanComparator(true));

}

Location: BooleanComparatorTest.java

Content: 

protected void trueFirstTests(final BooleanComparator comp){

  assertNotNull(comp);

  assertEquals(0,comp.compare(true,true));

  assertEquals(0,comp.compare(false,false));

  assertTrue(comp.compare(false,true) > 0);

  assertTrue(comp.compare(true,false) < 0);

}

