Location: DOM3SerializerImpl.java

Content: 

/** 

 * Constructor

 * @param handler An instance of the SerializationHandler interface.

 */

public DOM3SerializerImpl(SerializationHandler handler){

  fSerializationHandler=handler;

}

Location: DOM3SerializerImpl.java

Content: 

/** 

 * Returns a DOMErrorHandler set on the DOM Level 3 Serializer. This interface is a public API.

 * @return A Level 3 DOMErrorHandler

 */

public DOMErrorHandler getErrorHandler(){

  return fErrorHandler;

}

Location: DOM3SerializerImpl.java

Content: 

/** 

 * Gets the end-of-line sequence of characters to be used during serialization.

 */

public char[] getNewLine(){

  return (fNewLine != null) ? fNewLine.toCharArray() : null;

}

Location: DOM3SerializerImpl.java

Content: 

/** 

 * Returns a LSSerializerFilter set on the DOM Level 3 Serializer to filter nodes during serialization. This interface is a public API.

 * @return The Level 3 LSSerializerFilter

 */

public LSSerializerFilter getNodeFilter(){

  return fSerializerFilter;

}

Location: DOM3SerializerImpl.java

Content: 

/** 

 * Serializes the Level 3 DOM node by creating an instance of DOM3TreeWalker which traverses the DOM tree and invokes handler events to serialize the DOM NOde. Throws an exception only if an I/O exception occured while serializing. This interface is a public API.

 * @param node the Level 3 DOM node to serialize

 * @throws IOException if an I/O exception occured while serializing

 */

public void serializeDOM3(Node node) throws IOException {

  try {

    DOM3TreeWalker walker=new DOM3TreeWalker(fSerializationHandler,fErrorHandler,fSerializerFilter,fNewLine);

    walker.traverse(node);

  }

 catch (  org.xml.sax.SAXException se) {

    throw new WrappedRuntimeException(se);

  }

}

Location: DOM3SerializerImpl.java

Content: 

/** 

 * Sets a DOMErrorHandler on the DOM Level 3 Serializer. This interface is a public API.

 * @param handler the Level 3 DOMErrorHandler

 */

public void setErrorHandler(DOMErrorHandler handler){

  fErrorHandler=handler;

}

Location: DOM3SerializerImpl.java

Content: 

/** 

 * Sets the end-of-line sequence of characters to be used during serialization.

 * @param newLine The end-of-line sequence of characters to be used duringserialization.

 */

public void setNewLine(char[] newLine){

  fNewLine=(newLine != null) ? new String(newLine) : null;

}

Location: DOM3SerializerImpl.java

Content: 

/** 

 * Sets a LSSerializerFilter on the DOM Level 3 Serializer to filter nodes during serialization. This interface is a public API.

 * @param filter the Level 3 LSSerializerFilter

 */

public void setNodeFilter(LSSerializerFilter filter){

  fSerializerFilter=filter;

}

Location: DOM3SerializerImpl.java

Content: 

/** 

 * Sets a SerializationHandler on the DOM Serializer. This interface is a public API.

 * @param handler An instance of SerializationHandler

 */

public void setSerializationHandler(SerializationHandler handler){

  fSerializationHandler=handler;

}

