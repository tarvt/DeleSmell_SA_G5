Location: StringToStringTableVector.java

Content: 

/** 

 * Append a StringToStringTable object onto the vector.

 * @param value StringToStringTable object to add

 */

public final void addElement(StringToStringTable value){

  if ((m_firstFree + 1) >= m_mapSize) {

    m_mapSize+=m_blocksize;

    StringToStringTable newMap[]=new StringToStringTable[m_mapSize];

    System.arraycopy(m_map,0,newMap,0,m_firstFree + 1);

    m_map=newMap;

  }

  m_map[m_firstFree]=value;

  m_firstFree++;

}

Location: StringToStringTableVector.java

Content: 

/** 

 * Given a string, find out if there is a value in this table that matches the key.

 * @param key String to look for

 * @return True if the string was found in table, null if not

 */

public final boolean containsKey(String key){

  for (int i=m_firstFree - 1; i >= 0; --i) {

    if (m_map[i].get(key) != null)     return true;

  }

  return false;

}

Location: StringToStringTableVector.java

Content: 

/** 

 * Tell if the table contains the given StringToStringTable.

 * @param s The StringToStringTable to find

 * @return True if the StringToStringTable is found

 */

public final boolean contains(StringToStringTable s){

  for (int i=0; i < m_firstFree; i++) {

    if (m_map[i].equals(s))     return true;

  }

  return false;

}

Location: StringToStringTableVector.java

Content: 

/** 

 * Remove the last element.

 */

public final void removeLastElem(){

  if (m_firstFree > 0) {

    m_map[m_firstFree]=null;

    m_firstFree--;

  }

}

Location: StringToStringTableVector.java

Content: 

/** 

 * Default constructor. Note that the default block size is very small, for small lists.

 */

public StringToStringTableVector(){

  m_blocksize=8;

  m_mapSize=m_blocksize;

  m_map=new StringToStringTable[m_blocksize];

}

Location: StringToStringTableVector.java

Content: 

/** 

 * Construct a StringToStringTableVector, using the given block size.

 * @param blocksize Size of blocks to allocate

 */

public StringToStringTableVector(int blocksize){

  m_blocksize=blocksize;

  m_mapSize=blocksize;

  m_map=new StringToStringTable[blocksize];

}

