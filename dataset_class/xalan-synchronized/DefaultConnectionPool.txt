Location: DefaultConnectionPool.java

Content: 

/** 

 * @param value

 */

private void addConnection(PooledConnection value){

  m_pool.addElement(value);

}

Location: DefaultConnectionPool.java

Content: 

/** 

 * @throws SQLException

 */

private Connection createConnection() throws SQLException {

  Connection con=null;

  con=m_Driver.connect(m_url,m_ConnectionProtocol);

  return con;

}

Location: DefaultConnectionPool.java

Content: 

/** 

 */

public DefaultConnectionPool(){

}

Location: DefaultConnectionPool.java

Content: 

/** 

 * @throws IllegalArgumentException

 * @throws SQLException

 */

public synchronized void initializePool() throws IllegalArgumentException, SQLException {

  if (m_driver == null) {

    throw new IllegalArgumentException(XSLMessages.createMessage(XSLTErrorResources.ER_NO_DRIVER_NAME_SPECIFIED,null));

  }

  if (m_url == null) {

    throw new IllegalArgumentException(XSLMessages.createMessage(XSLTErrorResources.ER_NO_URL_SPECIFIED,null));

  }

  if (m_PoolMinSize < 1) {

    throw new IllegalArgumentException(XSLMessages.createMessage(XSLTErrorResources.ER_POOLSIZE_LESS_THAN_ONE,null));

  }

  try {

    m_Driver=(Driver)ObjectFactory.newInstance(m_driver,ObjectFactory.findClassLoader(),true);

    DriverManager.registerDriver(m_Driver);

  }

 catch (  ObjectFactory.ConfigurationError e) {

    throw new IllegalArgumentException(XSLMessages.createMessage(XSLTErrorResources.ER_INVALID_DRIVER_NAME,null));

  }

catch (  Exception e) {

    throw new IllegalArgumentException(XSLMessages.createMessage(XSLTErrorResources.ER_INVALID_DRIVER_NAME,null));

  }

  if (!m_IsActive)   return;

  do {

    Connection con=createConnection();

    if (con != null) {

      PooledConnection pcon=new PooledConnection(con);

      addConnection(pcon);

      if (DEBUG)       System.out.println("Adding DB Connection to the Pool");

    }

  }

 while (m_pool.size() < m_PoolMinSize);

}

