Location: ElemText.java

Content: 

/** 

 * Get the "disable-output-escaping" attribute. Normally, the xml output method escapes & and < (and possibly other characters) when outputting text nodes. This ensures that the output is well-formed XML. However, it is sometimes convenient to be able to produce output that is almost, but not quite well-formed XML; for example, the output may include ill-formed sections which are intended to be transformed into well-formed XML by a subsequent non-XML aware process. For this reason, XSLT provides a mechanism for disabling output escaping. An xsl:value-of or xsl:text element may have a disable-output-escaping attribute; the allowed values are yes or no; the default is no; if the value is yes, then a text node generated by instantiating the xsl:value-of or xsl:text element should be output without any escaping.

 * @see <a href=

	 *      "http://www.w3.org/TR/xslt#disable-output-escaping">disable-output-escaping

	 *      in XSLT Specification</a>

 * @return Boolean flag indicating whether this element should disable escaping

 */

public boolean getDisableOutputEscaping(){

  return m_disableOutputEscaping;

}

Location: ElemText.java

Content: 

/** 

 * Set the "disable-output-escaping" attribute. Normally, the xml output method escapes & and < (and possibly other characters) when outputting text nodes. This ensures that the output is well-formed XML. However, it is sometimes convenient to be able to produce output that is almost, but not quite well-formed XML; for example, the output may include ill-formed sections which are intended to be transformed into well-formed XML by a subsequent non-XML aware process. For this reason, XSLT provides a mechanism for disabling output escaping. An xsl:value-of or xsl:text element may have a disable-output-escaping attribute; the allowed values are yes or no; the default is no; if the value is yes, then a text node generated by instantiating the xsl:value-of or xsl:text element should be output without any escaping.

 * @see <a href=

	 *      "http://www.w3.org/TR/xslt#disable-output-escaping">disable-output-escaping

	 *      in XSLT Specification</a>

 * @param v Boolean flag indicating whether this element should disable escaping

 */

public void setDisableOutputEscaping(boolean v){

  m_disableOutputEscaping=v;

}

