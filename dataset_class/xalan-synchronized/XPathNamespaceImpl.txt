Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#appendChild(Node)

 */

public Node appendChild(Node arg0) throws DOMException {

  return null;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#cloneNode(boolean)

 */

public Node cloneNode(boolean arg0){

  throw new DOMException(DOMException.NOT_SUPPORTED_ERR,null);

}

Location: XPathNamespaceImpl.java

Content: 

public short compareDocumentPosition(Node other) throws DOMException {

  return 0;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getAttributes()

 */

public NamedNodeMap getAttributes(){

  return m_attributeNode.getAttributes();

}

Location: XPathNamespaceImpl.java

Content: 

public String getBaseURI(){

  return null;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getChildNodes()

 */

public NodeList getChildNodes(){

  return m_attributeNode.getChildNodes();

}

Location: XPathNamespaceImpl.java

Content: 

public Object getFeature(String feature,String version){

  return null;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getFirstChild()

 */

public Node getFirstChild(){

  return m_attributeNode.getFirstChild();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getLastChild()

 */

public Node getLastChild(){

  return m_attributeNode.getLastChild();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getNamespaceURI()

 */

public String getNamespaceURI(){

  return m_attributeNode.getNodeValue();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getNextSibling()

 */

public Node getNextSibling(){

  return m_attributeNode.getNextSibling();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getNodeName()

 */

public String getNodeName(){

  return "#namespace";

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getNodeType()

 */

public short getNodeType(){

  return XPathNamespace.XPATH_NAMESPACE_NODE;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getNodeValue()

 */

public String getNodeValue() throws DOMException {

  return m_attributeNode.getNodeValue();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getOwnerDocument()

 */

public Document getOwnerDocument(){

  return m_attributeNode.getOwnerDocument();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.apache.xalan.dom3.xpath.XPathNamespace#getOwnerElement()

 */

public Element getOwnerElement(){

  return ((Attr)m_attributeNode).getOwnerElement();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getParentNode()

 */

public Node getParentNode(){

  return m_attributeNode.getParentNode();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getPrefix()

 */

public String getPrefix(){

  return m_attributeNode.getPrefix();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#getPreviousSibling()

 */

public Node getPreviousSibling(){

  return m_attributeNode.getPreviousSibling();

}

Location: XPathNamespaceImpl.java

Content: 

public String getTextContent() throws DOMException {

  return textContent;

}

Location: XPathNamespaceImpl.java

Content: 

public Object getUserData(String key){

  return null;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#hasAttributes()

 */

public boolean hasAttributes(){

  return m_attributeNode.hasAttributes();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#hasChildNodes()

 */

public boolean hasChildNodes(){

  return false;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#insertBefore(Node,Node)

 */

public Node insertBefore(Node arg0,Node arg1) throws DOMException {

  return null;

}

Location: XPathNamespaceImpl.java

Content: 

public boolean isDefaultNamespace(String namespaceURI){

  return false;

}

Location: XPathNamespaceImpl.java

Content: 

public boolean isEqualNode(Node arg){

  return false;

}

Location: XPathNamespaceImpl.java

Content: 

public boolean isSameNode(Node other){

  return false;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#isSupported(String,String)

 */

public boolean isSupported(String arg0,String arg1){

  return m_attributeNode.isSupported(arg0,arg1);

}

Location: XPathNamespaceImpl.java

Content: 

public String lookupPrefix(String namespaceURI){

  return "";

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#normalize()

 */

public void normalize(){

  m_attributeNode.normalize();

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#removeChild(Node)

 */

public Node removeChild(Node arg0) throws DOMException {

  return null;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#replaceChild(Node,Node)

 */

public Node replaceChild(Node arg0,Node arg1) throws DOMException {

  return null;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#setNodeValue(String)

 */

public void setNodeValue(String arg0) throws DOMException {

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * @see org.w3c.dom.Node#setPrefix(String)

 */

public void setPrefix(String arg0) throws DOMException {

}

Location: XPathNamespaceImpl.java

Content: 

public void setTextContent(String textContent) throws DOMException {

  this.textContent=textContent;

}

Location: XPathNamespaceImpl.java

Content: 

public Object setUserData(String key,Object data,UserDataHandler handler){

  return null;

}

Location: XPathNamespaceImpl.java

Content: 

/** 

 * Constructor for XPathNamespaceImpl.

 */

XPathNamespaceImpl(Node node){

  m_attributeNode=node;

}

