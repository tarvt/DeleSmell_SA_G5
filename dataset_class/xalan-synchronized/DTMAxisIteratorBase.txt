Location: DTMAxisIteratorBase.java

Content: 

/** 

 * Set the flag to include the start node in the iteration.

 * @return This default method returns just returns this DTMAxisIterator, aftersetting the flag. (Returning "this" permits C++-style chaining of method calls into a single expression.)

 */

public DTMAxisIterator includeSelf(){

  _includeSelf=true;

  return this;

}

Location: DTMAxisIteratorBase.java

Content: 

/** 

 * Reset the position to zero. NOTE that this does not change the iteration state, only the position number associated with that state. %REVIEW% Document when this would be used?

 * @return This instance.

 */

protected final DTMAxisIterator resetPosition(){

  _position=0;

  return this;

}

Location: DTMAxisIteratorBase.java

Content: 

/** 

 * Do any final cleanup that is required before returning the node that was passed in, and then return it. The intended use is <br /> <code>return returnNode(node);</code> %REVIEW% If we're calling it purely for side effects, should we really be bothering with a return value? Something like <br /> <code> accept(node); return node; </code> <br /> would probably optimize just about as well and avoid questions about whether what's returned could ever be different from what's passed in.

 * @param node Node handle which iteration is about to yield.

 * @return The node handle passed in.

 */

protected final int returnNode(final int node){

  _position++;

  return node;

}

