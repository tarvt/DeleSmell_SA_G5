Location: NamespaceSupport.java

Content: 

/** 

 * @see org.apache.xerces.xni.NamespaceContext#getAllPrefixes()

 */

public Enumeration getAllPrefixes(){

  int count=0;

  if (fPrefixes.length < (fNamespace.length / 2)) {

    String[] prefixes=new String[fNamespaceSize];

    fPrefixes=prefixes;

  }

  String prefix=null;

  boolean unique=true;

  for (int i=2; i < (fNamespaceSize - 2); i+=2) {

    prefix=fNamespace[i + 2];

    for (int k=0; k < count; k++) {

      if (fPrefixes[k] == prefix) {

        unique=false;

        break;

      }

    }

    if (unique) {

      fPrefixes[count++]=prefix;

    }

    unique=true;

  }

  return new Prefixes(fPrefixes,count);

}

Location: NamespaceSupport.java

Content: 

/** 

 * @see org.apache.xerces.xni.NamespaceContext#getDeclaredPrefixAt(int)

 */

public String getDeclaredPrefixAt(int index){

  return fNamespace[fContext[fCurrentContext] + index * 2];

}

Location: NamespaceSupport.java

Content: 

/** 

 * @see org.apache.xerces.xni.NamespaceContext#getDeclaredPrefixCount()

 */

public int getDeclaredPrefixCount(){

  return (fNamespaceSize - fContext[fCurrentContext]) / 2;

}

Location: NamespaceSupport.java

Content: 

/** 

 * Default constructor. 

 */

public NamespaceSupport(){

}

