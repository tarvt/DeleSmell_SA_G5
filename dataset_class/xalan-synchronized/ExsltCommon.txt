Location: ExsltCommon.java

Content: 

/** 

 * The exsl:object-type function returns a string giving the type of the object passed as the argument. The possible object types are: 'string', 'number', 'boolean', 'node-set', 'RTF', or 'external'. Most XSLT object types can be coerced to each other without error. However, there are certain coercions that raise errors, most importantly treating anything other than a node set as a node set. Authors of utilities such as named templates or user-defined extension functions may wish to give some flexibility in the parameter and argument values that are accepted by the utility; the exsl:object-type function enables them to do so. The Xalan extensions MethodResolver converts 'object-type' to 'objectType'.

 * @param obj The object to be typed.

 * @return objectType 'string', 'number', 'boolean', 'node-set', 'RTF', or'external'.

 * @see <a href="http://www.exslt.org/">EXSLT</a>

 */

public static String objectType(Object obj){

  if (obj instanceof String)   return "string";

 else   if (obj instanceof Boolean)   return "boolean";

 else   if (obj instanceof Number)   return "number";

 else   if (obj instanceof DTMNodeIterator) {

    DTMIterator dtmI=((DTMNodeIterator)obj).getDTMIterator();

    if (dtmI instanceof org.apache.xpath.axes.RTFIterator)     return "RTF";

 else     return "node-set";

  }

 else   return "unknown";

}

