Location: OpMapVector.java

Content: 

/** 

 * Get the nth element.

 * @param i index of object to get

 * @return object at given index

 */

public final int elementAt(int i){

  return m_map[i];

}

Location: OpMapVector.java

Content: 

/** 

 * Construct a OpMapVector, using the given block size.

 * @param blocksize Size of block to allocate

 */

public OpMapVector(int blocksize,int increaseSize,int lengthPos){

  m_blocksize=increaseSize;

  m_mapSize=blocksize;

  m_lengthPos=lengthPos;

  m_map=new int[blocksize];

}

Location: OpMapVector.java

Content: 

/** 

 * Sets the component at the specified index of this vector to be the specified object. The previous component at that position is discarded. The index must be a value greater than or equal to 0 and less than the current size of the vector.

 * @param value object to set

 * @param index Index of where to set the object

 */

public final void setElementAt(int value,int index){

  if (index >= m_mapSize) {

    int oldSize=m_mapSize;

    m_mapSize+=m_blocksize;

    int newMap[]=new int[m_mapSize];

    System.arraycopy(m_map,0,newMap,0,oldSize);

    m_map=newMap;

  }

  m_map[index]=value;

}

Location: OpMapVector.java

Content: 

public final void setToSize(int size){

  int newMap[]=new int[size];

  System.arraycopy(m_map,0,newMap,0,m_map[m_lengthPos]);

  m_mapSize=size;

  m_map=newMap;

}

