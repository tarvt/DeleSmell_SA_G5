Location: Messages.java

Content: 

/** 

 * Creates a message from the specified key and replacement arguments, localized to the given locale.

 * @param msgKey The key for the message text.

 * @param args   The arguments to be used as replacement text in the messagecreated.

 * @return The formatted message string.

 * @xsl.usage internal

 */

public final String createMessage(String msgKey,Object args[]){

  if (m_resourceBundle == null)   m_resourceBundle=loadResourceBundle(m_resourceBundleName);

  if (m_resourceBundle != null) {

    return createMsg(m_resourceBundle,msgKey,args);

  }

 else   return "Could not load the resource bundles: " + m_resourceBundleName;

}

Location: Messages.java

Content: 

/** 

 * Creates a message from the specified key and replacement arguments, localized to the given locale.

 * @param errorCode       The key for the message text.

 * @param fResourceBundle The resource bundle to use.

 * @param msgKey          The message key to use.

 * @param args            The arguments to be used as replacement text in themessage created.

 * @return The formatted message string.

 * @xsl.usage internal

 */

private final String createMsg(ListResourceBundle fResourceBundle,String msgKey,Object args[]){

  String fmsg=null;

  boolean throwex=false;

  String msg=null;

  if (msgKey != null)   msg=fResourceBundle.getString(msgKey);

 else   msgKey="";

  if (msg == null) {

    throwex=true;

    try {

      msg=java.text.MessageFormat.format(MsgKey.BAD_MSGKEY,new Object[]{msgKey,m_resourceBundleName});

    }

 catch (    Exception e) {

      msg="The message key '" + msgKey + "' is not in the message class '"+ m_resourceBundleName+ "'";

    }

  }

 else   if (args != null) {

    try {

      int n=args.length;

      for (int i=0; i < n; i++) {

        if (null == args[i])         args[i]="";

      }

      fmsg=java.text.MessageFormat.format(msg,args);

    }

 catch (    Exception e) {

      throwex=true;

      try {

        fmsg=java.text.MessageFormat.format(MsgKey.BAD_MSGFORMAT,new Object[]{msgKey,m_resourceBundleName});

        fmsg+=" " + msg;

      }

 catch (      Exception formatfailed) {

        fmsg="The format of message '" + msgKey + "' in message class '"+ m_resourceBundleName+ "' failed.";

      }

    }

  }

 else   fmsg=msg;

  if (throwex) {

    throw new RuntimeException(fmsg);

  }

  return fmsg;

}

Location: Messages.java

Content: 

/** 

 * Get the Locale object that is being used.

 * @return non-null reference to Locale object.

 * @xsl.usage internal

 */

private Locale getLocale(){

  return m_locale;

}

Location: Messages.java

Content: 

/** 

 * Get the ListResourceBundle being used by this Messages instance which was previously set by a call to loadResourceBundle(className)

 * @xsl.usage internal

 */

private ListResourceBundle getResourceBundle(){

  return m_resourceBundle;

}

Location: Messages.java

Content: 

/** 

 * Constructor.

 * @param resourceBundle the class name of the ListResourceBundle that theinstance of this class is associated with and will use when creating messages. The class name is without a language suffix. If the value passed is null then loadResourceBundle(errorResourceClass) needs to be called explicitly before any messages are created.

 * @xsl.usage internal

 */

Messages(String resourceBundle){

  m_resourceBundleName=resourceBundle;

}

