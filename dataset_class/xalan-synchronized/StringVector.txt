Location: StringVector.java

Content: 

/** 

 * Append a string onto the vector.

 * @param value Sting to add to the vector

 */

public final void addElement(String value){

  if ((m_firstFree + 1) >= m_mapSize) {

    m_mapSize+=m_blocksize;

    String newMap[]=new String[m_mapSize];

    System.arraycopy(m_map,0,newMap,0,m_firstFree + 1);

    m_map=newMap;

  }

  m_map[m_firstFree]=value;

  m_firstFree++;

}

Location: StringVector.java

Content: 

/** 

 * Tell if the table contains the given string. Ignore case.

 * @param s String to find

 * @return True if the String is in this vector

 */

public final boolean containsIgnoreCase(String s){

  if (null == s)   return false;

  for (int i=0; i < m_firstFree; i++) {

    if (m_map[i].equalsIgnoreCase(s))     return true;

  }

  return false;

}

Location: StringVector.java

Content: 

/** 

 * Tell if the table contains the given string.

 * @param s String to push into the vector

 */

public final void push(String s){

  if ((m_firstFree + 1) >= m_mapSize) {

    m_mapSize+=m_blocksize;

    String newMap[]=new String[m_mapSize];

    System.arraycopy(m_map,0,newMap,0,m_firstFree + 1);

    m_map=newMap;

  }

  m_map[m_firstFree]=s;

  m_firstFree++;

}

Location: StringVector.java

Content: 

/** 

 * Default constructor. Note that the default block size is very small, for small lists.

 */

public StringVector(){

  m_blocksize=8;

  m_mapSize=m_blocksize;

  m_map=new String[m_blocksize];

}

Location: StringVector.java

Content: 

/** 

 * Construct a StringVector, using the given block size.

 * @param blocksize Size of the blocks to allocate

 */

public StringVector(int blocksize){

  m_blocksize=blocksize;

  m_mapSize=blocksize;

  m_map=new String[blocksize];

}

