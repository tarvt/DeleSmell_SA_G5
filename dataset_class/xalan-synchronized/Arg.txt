Location: Arg.java

Content: 

/** 

 * Construct a dummy parameter argument, with no QName and no value (either expression string or value XObject). isVisible defaults to true.

 */

public Arg(){

  m_qname=new QName("");

  ;

  m_val=null;

  m_expression=null;

  m_isVisible=true;

  m_isFromWithParam=false;

}

Location: Arg.java

Content: 

/** 

 * Construct a parameter argument that contains an expression.

 * @param qname           Name of the argument, expressed as a QName object.

 * @param expression      String to be stored as this argument's valueexpression.

 * @param isFromWithParam True if this is a parameter variable.

 */

public Arg(QName qname,String expression,boolean isFromWithParam){

  m_qname=qname;

  m_val=null;

  m_expression=expression;

  m_isFromWithParam=isFromWithParam;

  m_isVisible=!isFromWithParam;

}

Location: Arg.java

Content: 

/** 

 * Construct a parameter argument which has an XObject value. isVisible defaults to true.

 * @param qname Name of the argument, expressed as a QName object.

 * @param val   Value of the argument, expressed as an XObject

 */

public Arg(QName qname,XObject val){

  m_qname=qname;

  m_val=val;

  m_isVisible=true;

  m_isFromWithParam=false;

  m_expression=null;

}

Location: Arg.java

Content: 

/** 

 * Construct a parameter argument.

 * @param qname           Name of the argument, expressed as a QName object.

 * @param val             Value of the argument, expressed as an XObject

 * @param isFromWithParam True if this is a parameter variable.

 */

public Arg(QName qname,XObject val,boolean isFromWithParam){

  m_qname=qname;

  m_val=val;

  m_isFromWithParam=isFromWithParam;

  m_isVisible=!isFromWithParam;

  m_expression=null;

}

Location: Arg.java

Content: 

/** 

 * Get the value for this argument.

 * @return the argument's stored XObject value.

 * @see #setVal(XObject)

 */

public final XObject getVal(){

  return m_val;

}

Location: Arg.java

Content: 

/** 

 * Tell if this variable is a parameter passed with a with-param or as a top-level parameter.

 */

public boolean isFromWithParam(){

  return m_isFromWithParam;

}

Location: Arg.java

Content: 

/** 

 * Tell if this variable is currently visible.

 */

public boolean isVisible(){

  return m_isVisible;

}

Location: Arg.java

Content: 

/** 

 * Set the value expression for this argument.

 * @param expr String containing the expression to be stored as this argument'svalue.

 * @see #getExpression

 */

public void setExpression(String expr){

  m_expression=expr;

}

Location: Arg.java

Content: 

/** 

 * Update visibility status of this variable.

 */

public void setIsVisible(boolean b){

  m_isVisible=b;

}

Location: Arg.java

Content: 

/** 

 * Set the value of this argument.

 * @param val an XObject representing the arguments's value.

 * @see #getVal()

 */

public final void setVal(XObject val){

  m_val=val;

}

