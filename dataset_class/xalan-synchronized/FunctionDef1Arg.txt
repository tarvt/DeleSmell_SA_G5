Location: FunctionDef1Arg.java

Content: 

/** 

 * Tell if the expression is a nodeset expression.

 * @return true if the expression can be represented as a nodeset.

 */

public boolean Arg0IsNodesetExpr(){

  return (null == m_arg0) ? true : m_arg0.isNodesetExpr();

}

Location: FunctionDef1Arg.java

Content: 

/** 

 * Execute the first argument expression that is expected to return a nodeset. If the argument is null, then return the current context node.

 * @param xctxt Runtime XPath context.

 * @return The first node of the executed nodeset, or the current context nodeif the first argument is null.

 * @throws javax.xml.transform.TransformerException if an error occurs whileexecuting the argument expression.

 */

protected int getArg0AsNode(XPathContext xctxt) throws javax.xml.transform.TransformerException {

  return (null == m_arg0) ? xctxt.getCurrentNode() : m_arg0.asNode(xctxt);

}

Location: FunctionDef1Arg.java

Content: 

/** 

 * Execute the first argument expression that is expected to return a number. If the argument is null, then get the number value from the current context node.

 * @param xctxt Runtime XPath context.

 * @return The number value of the first argument, or the number value of thecurrent context node if the first argument is null.

 * @throws javax.xml.transform.TransformerException if an error occurs whileexecuting the argument expression.

 */

protected double getArg0AsNumber(XPathContext xctxt) throws javax.xml.transform.TransformerException {

  if (null == m_arg0) {

    int currentNode=xctxt.getCurrentNode();

    if (DTM.NULL == currentNode)     return 0;

 else {

      DTM dtm=xctxt.getDTM(currentNode);

      XMLString str=dtm.getStringValue(currentNode);

      return str.toDouble();

    }

  }

 else   return m_arg0.execute(xctxt).num();

}

Location: FunctionDef1Arg.java

Content: 

/** 

 * Execute the first argument expression that is expected to return a string. If the argument is null, then get the string value from the current context node.

 * @param xctxt Runtime XPath context.

 * @return The string value of the first argument, or the string value of thecurrent context node if the first argument is null.

 * @throws javax.xml.transform.TransformerException if an error occurs whileexecuting the argument expression.

 */

protected XMLString getArg0AsString(XPathContext xctxt) throws javax.xml.transform.TransformerException {

  if (null == m_arg0) {

    int currentNode=xctxt.getCurrentNode();

    if (DTM.NULL == currentNode)     return XString.EMPTYSTRING;

 else {

      DTM dtm=xctxt.getDTM(currentNode);

      return dtm.getStringValue(currentNode);

    }

  }

 else   return m_arg0.execute(xctxt).xstr();

}

