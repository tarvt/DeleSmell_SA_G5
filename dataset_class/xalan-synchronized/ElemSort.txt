Location: ElemSort.java

Content: 

/** 

 * Get the "case-order" attribute. case-order has the value upper-first or lower-first; this applies when data-type="text", and specifies that upper-case letters should sort before lower-case letters or vice-versa respectively. For example, if lang="en", then A a B b are sorted with case-order="upper-first" and a A b B are sorted with case-order="lower-first". The default value is language dependent.

 * @return The value of the "case-order" attribute

 */

public AVT getCaseOrder(){

  return m_caseorder_avt;

}

Location: ElemSort.java

Content: 

/** 

 * Get the "data-type" attribute. <code>data-type</code> specifies the data type of the strings; the following values are allowed: <ul> <li><code>text</code> specifies that the sort keys should be sorted lexicographically in the culturally correct manner for the language specified by <code>lang</code>.</li> <li><code>number</code> specifies that the sort keys should be converted to numbers and then sorted according to the numeric value; the sort key is converted to a number as if by a call to the <b><a href="http://www.w3.org/TR/xpath#function-number">number</a></b> function; the <code>lang</code> attribute is ignored.</li> <li>A <a href="http://www.w3.org/TR/REC-xml-names#NT-QName">QName</a> with a prefix is expanded into an <a href="http://www.w3.org/TR/xpath#dt-expanded-name">expanded-name</a> as described in <a href="#qname">[<b>2.4 Qualified Names</b>]</a>; the expanded-name identifies the data-type; the behavior in this case is not specified by this document.</li> </ul> <p> The default value is <code>text</code>. </p> <blockquote> <b>NOTE: </b>The XSL Working Group plans that future versions of XSLT will leverage XML Schemas to define further values for this attribute.</blockquote>

 * @return The value of the "data-type" attribute

 */

public AVT getDataType(){

  return m_dataType_avt;

}

Location: ElemSort.java

Content: 

/** 

 * Get the "order" attribute. order specifies whether the strings should be sorted in ascending or descending order; ascending specifies ascending order; descending specifies descending order; the default is ascending.

 * @return The value of the "order" attribute

 */

public AVT getOrder(){

  return m_order_avt;

}

Location: ElemSort.java

Content: 

/** 

 * Set the "case-order" attribute. case-order has the value upper-first or lower-first; this applies when data-type="text", and specifies that upper-case letters should sort before lower-case letters or vice-versa respectively. For example, if lang="en", then A a B b are sorted with case-order="upper-first" and a A b B are sorted with case-order="lower-first". The default value is language dependent.

 * @param v The value to set for the "case-order" attribute

 * @serial

 */

public void setCaseOrder(AVT v){

  m_caseorder_avt=v;

}

Location: ElemSort.java

Content: 

/** 

 * Set the "data-type" attribute. <code>data-type</code> specifies the data type of the strings; the following values are allowed: <ul> <li><code>text</code> specifies that the sort keys should be sorted lexicographically in the culturally correct manner for the language specified by <code>lang</code>.</li> <li><code>number</code> specifies that the sort keys should be converted to numbers and then sorted according to the numeric value; the sort key is converted to a number as if by a call to the <b><a href="http://www.w3.org/TR/xpath#function-number">number</a></b> function; the <code>lang</code> attribute is ignored.</li> <li>A <a href="http://www.w3.org/TR/REC-xml-names#NT-QName">QName</a> with a prefix is expanded into an <a href="http://www.w3.org/TR/xpath#dt-expanded-name">expanded-name</a> as described in <a href="#qname">[<b>2.4 Qualified Names</b>]</a>; the expanded-name identifies the data-type; the behavior in this case is not specified by this document.</li> </ul> <p> The default value is <code>text</code>. </p> <blockquote> <b>NOTE: </b>The XSL Working Group plans that future versions of XSLT will leverage XML Schemas to define further values for this attribute.</blockquote>

 * @param v Value to set for the "data-type" attribute

 */

public void setDataType(AVT v){

  m_dataType_avt=v;

}

Location: ElemSort.java

Content: 

/** 

 * Set the "lang" attribute. lang specifies the language of the sort keys; it has the same range of values as xml:lang [XML]; if no lang value is specified, the language should be determined from the system environment.

 * @param v The value to set for the "lang" attribute

 */

public void setLang(AVT v){

  m_lang_avt=v;

}

Location: ElemSort.java

Content: 

/** 

 * Set the "order" attribute. order specifies whether the strings should be sorted in ascending or descending order; ascending specifies ascending order; descending specifies descending order; the default is ascending.

 * @param v The value to set for the "order" attribute

 */

public void setOrder(AVT v){

  m_order_avt=v;

}

