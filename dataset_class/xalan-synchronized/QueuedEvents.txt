Location: QueuedEvents.java

Content: 

/** 

 * This is only for use of object pooling, so the that it can be reset.

 * @return The serializer

 */

org.apache.xml.serializer.Serializer getSerializer(){

  return m_serializer;

}

Location: QueuedEvents.java

Content: 

/** 

 * Pop element event

 */

void popEvent(){

  m_elemIsPending=false;

  m_attributes.clear();

  m_nsDeclsHaveBeenAdded=false;

  m_name=null;

  m_url=null;

  m_localName=null;

  m_namespaces=null;

  m_eventCount--;

}

Location: QueuedEvents.java

Content: 

/** 

 * Push the document event. This never gets popped.

 */

void pushDocumentEvent(){

  m_docPending=true;

  m_eventCount++;

}

Location: QueuedEvents.java

Content: 

/** 

 * To re-initialize the document and element events

 */

protected void reInitEvents(){

}

Location: QueuedEvents.java

Content: 

/** 

 * This is only for use of object pooling, so that it can be reset.

 * @param s non-null instance of a serializer

 */

void setSerializer(org.apache.xml.serializer.Serializer s){

  m_serializer=s;

}

