Location: XMLStringFactoryImpl.java

Content: 

/** 

 * Get a cheap representation of an empty string.

 * @return An non-null reference to an XMLString that represents "".

 */

public XMLString emptystr(){

  return XString.EMPTYSTRING;

}

Location: XMLStringFactoryImpl.java

Content: 

/** 

 * Get the XMLStringFactory to pass to DTM construction.

 * @return A never-null static reference to a String factory.

 */

public static XMLStringFactory getFactory(){

  return m_xstringfactory;

}

Location: XMLStringFactoryImpl.java

Content: 

/** 

 * Create a XMLString from a FastStringBuffer.

 * @param string FastStringBuffer reference, which must be non-null.

 * @param start  The start position in the array.

 * @param length The number of characters to read from the array.

 * @return An XMLString object that wraps the FastStringBuffer reference.

 */

public XMLString newstr(char[] string,int start,int length){

  return new XStringForChars(string,start,length);

}

Location: XMLStringFactoryImpl.java

Content: 

/** 

 * Create a XMLString from a FastStringBuffer.

 * @param fsb    FastStringBuffer reference, which must be non-null.

 * @param start  The start position in the array.

 * @param length The number of characters to read from the array.

 * @return An XMLString object that wraps the FastStringBuffer reference.

 */

public XMLString newstr(FastStringBuffer fsb,int start,int length){

  return new XStringForFSB(fsb,start,length);

}

Location: XMLStringFactoryImpl.java

Content: 

/** 

 * Create a new XMLString from a Java string.

 * @param string Java String reference, which must be non-null.

 * @return An XMLString object that wraps the String reference.

 */

public XMLString newstr(String string){

  return new XString(string);

}

