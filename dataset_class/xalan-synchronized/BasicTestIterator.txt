Location: BasicTestIterator.java

Content: 

/** 

 * Create a LocPathIterator object.

 * @param nscontext The namespace context for this iterator, should be OK ifnull.

 */

protected BasicTestIterator(){

}

Location: BasicTestIterator.java

Content: 

/** 

 * Create a LocPathIterator object, including creation of step walkers from the opcode list, and call back into the Compiler to create predicate expressions.

 * @param compiler The Compiler which is creating this expression.

 * @param opPos    The position of this iterator in the opcode list from thecompiler.

 * @throws javax.xml.transform.TransformerException

 */

protected BasicTestIterator(Compiler compiler,int opPos,int analysis) throws javax.xml.transform.TransformerException {

  super(compiler,opPos,analysis,false);

  int firstStepPos=OpMap.getFirstChildPos(opPos);

  int whatToShow=compiler.getWhatToShow(firstStepPos);

  if ((0 == (whatToShow & (DTMFilter.SHOW_ATTRIBUTE | DTMFilter.SHOW_NAMESPACE | DTMFilter.SHOW_ELEMENT| DTMFilter.SHOW_PROCESSING_INSTRUCTION))) || (whatToShow == DTMFilter.SHOW_ALL))   initNodeTest(whatToShow);

 else {

    initNodeTest(whatToShow,compiler.getStepNS(firstStepPos),compiler.getStepLocalName(firstStepPos));

  }

  initPredicateInfo(compiler,firstStepPos);

}

Location: BasicTestIterator.java

Content: 

/** 

 * Create a LocPathIterator object, including creation of step walkers from the opcode list, and call back into the Compiler to create predicate expressions.

 * @param compiler          The Compiler which is creating this expression.

 * @param opPos             The position of this iterator in the opcode listfrom the compiler.

 * @param shouldLoadWalkers True if walkers should be loaded, or false if thisis a derived iterator and it doesn't wish to load child walkers.

 * @throws javax.xml.transform.TransformerException

 */

protected BasicTestIterator(Compiler compiler,int opPos,int analysis,boolean shouldLoadWalkers) throws javax.xml.transform.TransformerException {

  super(compiler,opPos,analysis,shouldLoadWalkers);

}

Location: BasicTestIterator.java

Content: 

/** 

 * Create a LocPathIterator object.

 * @param nscontext The namespace context for this iterator, should be OK ifnull.

 */

protected BasicTestIterator(PrefixResolver nscontext){

  super(nscontext);

}

