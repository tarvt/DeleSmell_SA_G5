Location: ElemParam.java

Content: 

/** 

 * This function is called after everything else has been recomposed, and allows the template to set remaining values that may be based on some other property that depends on recomposition.

 */

public void compose(StylesheetRoot sroot) throws TransformerException {

  super.compose(sroot);

  m_qnameID=sroot.getComposeState().getQNameID(m_qname);

  int parentToken=m_parentNode.getXSLToken();

  if (parentToken == Constants.ELEMNAME_TEMPLATE || parentToken == Constants.EXSLT_ELEMNAME_FUNCTION)   ((ElemTemplate)m_parentNode).m_inArgsSize++;

}

Location: ElemParam.java

Content: 

/** 

 * Constructor ElemParam

 */

public ElemParam(){

}

Location: ElemParam.java

Content: 

/** 

 * Copy constructor.

 * @param param Element from an xsl:param

 * @throws TransformerException

 */

public ElemParam(ElemParam param) throws TransformerException {

  super(param);

}

Location: ElemParam.java

Content: 

/** 

 * Execute a variable declaration and push it onto the variable stack.

 * @see <a href="http://www.w3.org/TR/xslt#variables">variables in XSLT

	 *      Specification</a>

 * @param transformer non-null reference to the the current transform-timestate.

 * @throws TransformerException

 */

public void execute(TransformerImpl transformer) throws TransformerException {

  if (transformer.getDebug())   transformer.getTraceManager().fireTraceEvent(this);

  VariableStack vars=transformer.getXPathContext().getVarStack();

  if (!vars.isLocalSet(m_index)) {

    int sourceNode=transformer.getXPathContext().getCurrentNode();

    XObject var=getValue(transformer,sourceNode);

    transformer.getXPathContext().getVarStack().setLocalVariable(m_index,var);

  }

  if (transformer.getDebug())   transformer.getTraceManager().fireTraceEndEvent(this);

}

Location: ElemParam.java

Content: 

/** 

 * Get an int constant identifying the type of element.

 * @see org.apache.xalan.templates.Constants

 * @return The token ID of the element

 */

public int getXSLToken(){

  return Constants.ELEMNAME_PARAMVARIABLE;

}

