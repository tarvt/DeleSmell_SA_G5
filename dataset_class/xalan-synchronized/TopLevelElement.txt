Location: TopLevelElement.java

Content: 

/** 

 * Add a dependency with other top-level elements like variables, parameters or keys.

 */

public void addDependency(TopLevelElement other){

  if (_dependencies == null) {

    _dependencies=new Vector();

  }

  if (!_dependencies.contains(other)) {

    _dependencies.addElement(other);

  }

}

Location: TopLevelElement.java

Content: 

/** 

 * Translate this node into a fresh instruction list. The original instruction list is saved and restored.

 */

public InstructionList compile(ClassGenerator classGen,MethodGenerator methodGen){

  final InstructionList result, save=methodGen.getInstructionList();

  methodGen.setInstructionList(result=new InstructionList());

  translate(classGen,methodGen);

  methodGen.setInstructionList(save);

  return result;

}

Location: TopLevelElement.java

Content: 

/** 

 * Get the list of dependencies with other top-level elements like variables, parameteres or keys.

 */

public Vector getDependencies(){

  return _dependencies;

}

