Location: FilterExprIteratorSimple.java

Content: 

/** 

 * Execute the expression. Meant for reuse by other FilterExpr iterators that are not derived from this object.

 */

public static XNodeSet executeFilterExpr(int context,XPathContext xctxt,PrefixResolver prefixResolver,boolean isTopLevel,int stackFrame,Expression expr) throws org.apache.xml.utils.WrappedRuntimeException {

  PrefixResolver savedResolver=xctxt.getNamespaceContext();

  XNodeSet result=null;

  try {

    xctxt.pushCurrentNode(context);

    xctxt.setNamespaceContext(prefixResolver);

    if (isTopLevel) {

      VariableStack vars=xctxt.getVarStack();

      int savedStart=vars.getStackFrame();

      vars.setStackFrame(stackFrame);

      result=(org.apache.xpath.objects.XNodeSet)expr.execute(xctxt);

      result.setShouldCacheNodes(true);

      vars.setStackFrame(savedStart);

    }

 else     result=(org.apache.xpath.objects.XNodeSet)expr.execute(xctxt);

  }

 catch (  javax.xml.transform.TransformerException se) {

    throw new org.apache.xml.utils.WrappedRuntimeException(se);

  }

 finally {

    xctxt.popCurrentNode();

    xctxt.setNamespaceContext(savedResolver);

  }

  return result;

}

Location: FilterExprIteratorSimple.java

Content: 

/** 

 * Create a FilterExprIteratorSimple object.

 */

public FilterExprIteratorSimple(){

  super(null);

}

Location: FilterExprIteratorSimple.java

Content: 

/** 

 * Create a FilterExprIteratorSimple object.

 */

public FilterExprIteratorSimple(Expression expr){

  super(null);

  m_expr=expr;

}

