Location: DefaultErrorHandler.java

Content: 

/** 

 * Constructor DefaultErrorHandler

 */

public DefaultErrorHandler(){

  this(true);

}

Location: DefaultErrorHandler.java

Content: 

/** 

 * Constructor DefaultErrorHandler

 */

public DefaultErrorHandler(boolean throwExceptionOnError){

  m_throwExceptionOnError=throwExceptionOnError;

}

Location: DefaultErrorHandler.java

Content: 

/** 

 * Constructor DefaultErrorHandler

 */

public DefaultErrorHandler(PrintStream pw){

  m_pw=new PrintWriter(pw,true);

}

Location: DefaultErrorHandler.java

Content: 

/** 

 * Constructor DefaultErrorHandler

 */

public DefaultErrorHandler(PrintWriter pw){

  m_pw=pw;

}

Location: DefaultErrorHandler.java

Content: 

public static void ensureLocationSet(TransformerException exception){

  SourceLocator locator=null;

  Throwable cause=exception;

  do {

    if (cause instanceof SAXParseException) {

      locator=new SAXSourceLocator((SAXParseException)cause);

    }

 else     if (cause instanceof TransformerException) {

      SourceLocator causeLocator=((TransformerException)cause).getLocator();

      if (null != causeLocator)       locator=causeLocator;

    }

    if (cause instanceof TransformerException)     cause=((TransformerException)cause).getCause();

 else     if (cause instanceof SAXException)     cause=((SAXException)cause).getException();

 else     cause=null;

  }

 while (null != cause);

  exception.setLocator(locator);

}

Location: DefaultErrorHandler.java

Content: 

/** 

 * Retrieve <code>java.io.PrintWriter</code> to which errors are being directed.

 * @return The <code>PrintWriter</code> installed via the constructor or thedefault <code>PrintWriter</code>

 */

public PrintWriter getErrorWriter(){

  if (m_pw == null) {

    m_pw=new PrintWriter(System.err,true);

  }

  return m_pw;

}

Location: DefaultErrorHandler.java

Content: 

public static void printLocation(java.io.PrintStream pw,org.xml.sax.SAXParseException exception){

  printLocation(new PrintWriter(pw),exception);

}

Location: DefaultErrorHandler.java

Content: 

public static void printLocation(PrintStream pw,TransformerException exception){

  printLocation(new PrintWriter(pw),exception);

}

Location: DefaultErrorHandler.java

Content: 

public static void printLocation(PrintWriter pw,Throwable exception){

  SourceLocator locator=null;

  Throwable cause=exception;

  do {

    if (cause instanceof SAXParseException) {

      locator=new SAXSourceLocator((SAXParseException)cause);

    }

 else     if (cause instanceof TransformerException) {

      SourceLocator causeLocator=((TransformerException)cause).getLocator();

      if (null != causeLocator)       locator=causeLocator;

    }

    if (cause instanceof TransformerException)     cause=((TransformerException)cause).getCause();

 else     if (cause instanceof WrappedRuntimeException)     cause=((WrappedRuntimeException)cause).getException();

 else     if (cause instanceof SAXException)     cause=((SAXException)cause).getException();

 else     cause=null;

  }

 while (null != cause);

  if (null != locator) {

    String id=(null != locator.getPublicId()) ? locator.getPublicId() : (null != locator.getSystemId()) ? locator.getSystemId() : XMLMessages.createXMLMessage(XMLErrorResources.ER_SYSTEMID_UNKNOWN,null);

    pw.print(id + "; " + XMLMessages.createXMLMessage("line",null)+ locator.getLineNumber()+ "; "+ XMLMessages.createXMLMessage("column",null)+ locator.getColumnNumber()+ "; ");

  }

 else   pw.print("(" + XMLMessages.createXMLMessage(XMLErrorResources.ER_LOCATION_UNKNOWN,null) + ")");

}

