Location: ResourceManager.java

Content: 

/** 

 * Returns the next available multicast address, e.g. "228.1.2.3". This class is a JVM singleton

 * @return

 */

public static String getNextMulticastAddress(){

  return rep.nextAddress();

}

Location: ResourceManager.java

Content: 

public static synchronized short getNextMulticastPort(InetAddress bind_addr) throws Exception {

  short port=mcast_port;

  try {

    DatagramSocket sock=Util.createDatagramSocket(socket_factory,"jgroups.temp.resourcemgr.mcast_sock",bind_addr,port);

    port=(short)sock.getLocalPort();

    socket_factory.close(sock);

    return port;

  }

  finally {

    mcast_port=(short)(port + 1);

  }

}

Location: ResourceManager.java

Content: 

public static synchronized List<Integer> getNextTcpPorts(InetAddress bind_addr,int num_requested_ports) throws Exception {

  int port=tcp_port++;

  List<Integer> retval=new ArrayList<>(num_requested_ports);

  for (int i=0; i < num_requested_ports; i++) {

    port=getNextTCPPort(bind_addr,port);

    retval.add(port);

    tcp_port=++port;

  }

  return retval;

}

Location: ResourceManager.java

Content: 

public static synchronized int getNextTcpPort(InetAddress bind_addr) throws Exception {

  int port=tcp_port++;

  try {

    return getNextTCPPort(bind_addr,port);

  }

  finally {

    tcp_port=++port;

  }

}

Location: ResourceManager.java

Content: 

protected static int getNextTCPPort(InetAddress bind_addr,int start_port) throws Exception {

  try (ServerSocket sock=new ServerSocket()){

    sock.setReuseAddress(false);

    Util.bind(sock,bind_addr,start_port,start_port + 100);

    return sock.getLocalPort();

  }

 }

Location: ResourceManager.java

Content: 

public static String getUniqueClusterName(){

  return getUniqueClusterName(null);

}

Location: ResourceManager.java

Content: 

public static String getUniqueClusterName(String base_name){

  return base_name != null ? base_name + "-" + UUID.randomUUID().toString() : UUID.randomUUID().toString();

}

Location: ResourceManager.java

Content: 

private ResourceManager(){

}

