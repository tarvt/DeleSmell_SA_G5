Location: SaslServerContext.java

Content: 

public void awaitCompletion(long timeout) throws InterruptedException {

  latch.await(timeout,TimeUnit.MILLISECONDS);

}

Location: SaslServerContext.java

Content: 

public String getAuthorizationID(){

  return server.getAuthorizationID();

}

Location: SaslServerContext.java

Content: 

public SaslServerContext(final SaslServerFactory saslServerFactory,final String mech,final String serverName,final CallbackHandler callback_handler,final Map<String,String> props,final Subject subject) throws SaslException {

  this.subject=subject;

  if (this.subject != null) {

    try {

      server=Subject.doAs(this.subject,(PrivilegedExceptionAction<SaslServer>)() -> saslServerFactory.createSaslServer(mech,SASL.SASL_PROTOCOL_NAME,serverName,props,callback_handler));

    }

 catch (    PrivilegedActionException e) {

      throw (SaslException)e.getCause();

    }

  }

 else {

    server=saslServerFactory.createSaslServer(mech,SASL.SASL_PROTOCOL_NAME,serverName,props,callback_handler);

  }

}

