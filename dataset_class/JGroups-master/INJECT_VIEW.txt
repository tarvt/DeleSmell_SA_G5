Location: INJECT_VIEW.java

Content: 

@ManagedOperation(description="Inject a view (example of view string format: A=A/B/C;B=B/C;C=C)") public synchronized void injectView(String newView){

  try {

    log.info("Received request to inject view %s",newView);

    String[] perNode=newView.split(NODE_VIEWS_SEPARATOR);

    String thisNodeAddress=getProtocolStack().getChannel().getAddressAsString();

    for (    String nodeView : perNode) {

      if (nodeView.startsWith(thisNodeAddress)) {

        log.info("[channel: %s] Injecting a new view: %s",thisNodeAddress,nodeView);

        long viewId=getProtocolStack().getChannel().getView().getViewId().getId() + 1;

        List<Address> nodes=new ArrayList<>();

        for (        String nodeName : nodeView.split(VIEW_SEPARATOR)[1].split(NAMES_SEPARATOR)) {

          for (          Map.Entry<Address,String> entry : NameCache.getContents().entrySet()) {

            if (nodeName.equals(entry.getValue())) {

              log.debug("[channel: %s] Found name: <%s> for address: <%s>",entry.getValue(),entry.getKey().toString());

              nodes.add(entry.getKey());

              break;

            }

          }

        }

        View view=new View(nodes.get(0),viewId,nodes);

        GMS gms=getProtocolStack().findProtocol(GMS.class);

        gms.installView(view);

        log.info("[channel: %s] Injection finished of view: %s",thisNodeAddress,nodeView);

      }

    }

  }

 catch (  Exception e) {

    log.warn(e.getMessage(),e);

  }

}

