Location: ParticipantGmsImpl.java

Content: 

@Override protected void coordChanged(Address from,Address to){

  super.coordChanged(from,to);

  if (gms.isLeaving()) {

    log.trace("%s: resending LEAVE request to new coordinator %s (prev coord=%s)",gms.local_addr,to,from);

    sendLeaveMessage(to,gms.local_addr);

  }

}

Location: ParticipantGmsImpl.java

Content: 

public ParticipantGmsImpl(GMS g){

  super(g);

}

Location: ParticipantGmsImpl.java

Content: 

/** 

 * Determines whether this member is the new coordinator given a list of suspected members.  This is computed as follows: the list of currently suspected members (suspected_mbrs) is removed from the current membership. If the first member of the resulting list is equals to the local_addr, then it is true, otherwise false. Example: own address is B, current membership is {A, B, C, D}, suspected members are {A, D}. The resulting list is {B, C}. The first member of {B, C} is B, which is equal to the local_addr. Therefore, true is returned.

 */

boolean wouldIBeCoordinator(Collection<Address> leaving_mbrs){

  List<Address> mbrs=gms.computeNewMembership(gms.members.getMembers(),null,leaving_mbrs,suspected_mbrs);

  if (mbrs.isEmpty())   return false;

  Address new_coord=mbrs.get(0);

  return gms.local_addr.equals(new_coord);

}

