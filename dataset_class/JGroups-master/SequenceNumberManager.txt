Location: SequenceNumberManager.java

Content: 

/** 

 * @return the next sequence number

 */

public long getAndIncrement(){

  return sequenceNumber++;

}

Location: SequenceNumberManager.java

Content: 

/** 

 * updates the sequence number and returns the next, that will be used a propose sequence number 

 * @param otherSequenceNumber   the sequence number received

 * @return                      the next sequence number or the received sequence number, if the received sequencenumber is higher the the actual sequence number

 */

public long updateAndGet(long otherSequenceNumber){

  if (sequenceNumber >= otherSequenceNumber) {

    return sequenceNumber++;

  }

 else {

    sequenceNumber=otherSequenceNumber + 1;

    return otherSequenceNumber;

  }

}

Location: SequenceNumberManager.java

Content: 

/** 

 * updates the sequence number to the maximum between them

 * @param otherSequenceNumber   the sequence number received

 */

public void update(long otherSequenceNumber){

  sequenceNumber=Math.max(sequenceNumber,otherSequenceNumber + 1);

}

