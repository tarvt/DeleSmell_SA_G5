Location: SiteUUID.java

Content: 

protected String printOthers(){

  StringBuilder sb=new StringBuilder();

  if (flags != 0)   sb.append(" flags=" + flags + " ("+ flags+ ")");

  if (keys == null)   return sb.toString();

  for (int i=0; i < keys.length; i++) {

    byte[] key=keys[i];

    if (key == null || Arrays.equals(key,SITE_NAME) || Arrays.equals(key,NAME))     continue;

    byte[] val=values[i];

    Object obj=null;

    try {

      obj=Util.bytesToString(val);

    }

 catch (    Throwable t) {

      obj=val != null ? val.length + " bytes" : null;

    }

    sb.append(", ").append(new AsciiString(key)).append("=").append(obj);

  }

  return sb.toString();

}

Location: SiteUUID.java

Content: 

public String print(boolean detailed){

  String name=getName();

  String retval=name != null ? name : NameCache.get(this);

  return retval + ":" + getSite()+ (detailed ? printOthers() : "");

}

Location: SiteUUID.java

Content: 

public SiteUUID(){

}

Location: SiteUUID.java

Content: 

public SiteUUID(long mostSigBits,long leastSigBits,byte[] name,byte[] site){

  super(mostSigBits,leastSigBits);

  if (name != null)   put(NAME,name);

  put(SITE_NAME,site);

}

Location: SiteUUID.java

Content: 

public SiteUUID(long mostSigBits,long leastSigBits,String name,String site){

  super(mostSigBits,leastSigBits);

  if (name != null)   put(NAME,Util.stringToBytes(name));

  put(SITE_NAME,Util.stringToBytes(site));

}

Location: SiteUUID.java

Content: 

public SiteUUID(UUID uuid,String name,String site){

  super(uuid.getMostSignificantBits(),uuid.getLeastSignificantBits());

  if (name != null)   put(NAME,Util.stringToBytes(name));

  put(SITE_NAME,Util.stringToBytes(site));

}

