Location: Rsp.java

Content: 

public T getValue(){

  return hasException() ? null : (T)value;

}

Location: Rsp.java

Content: 

public void readIn(Rsp<T> other){

  this.flags=other.flags;

  this.value=other.value;

}

Location: Rsp.java

Content: 

public Rsp(){

}

Location: Rsp.java

Content: 

public Rsp(T retval){

  setValue(retval);

}

Location: Rsp.java

Content: 

public Rsp(Throwable t){

  setException(t);

}

Location: Rsp.java

Content: 

public Rsp<T> setException(Throwable t){

  if (t != null) {

    this.value=t;

    setReceived();

    this.flags=Util.setFlag(flags,IS_EXCEPTION);

  }

  return this;

}

Location: Rsp.java

Content: 

public Rsp<T> setReceived(){

  this.flags=Util.setFlag(flags,RECEIVED);

  return this;

}

Location: Rsp.java

Content: 

public boolean setSuspected(){

  boolean changed=!wasSuspected();

  this.flags=Util.setFlag(flags,SUSPECTED);

  return changed;

}

Location: Rsp.java

Content: 

public boolean setUnreachable(){

  boolean changed=!wasUnreachable();

  this.flags=Util.setFlag(flags,UNREACHABLE);

  return changed;

}

Location: Rsp.java

Content: 

public Rsp<T> setValue(T val){

  this.value=val;

  setReceived();

  this.flags=Util.clearFlags(flags,IS_EXCEPTION);

  return this;

}

Location: Rsp.java

Content: 

public boolean wasReceived(){

  return Util.isFlagSet(flags,RECEIVED);

}

Location: Rsp.java

Content: 

public boolean wasSuspected(){

  return Util.isFlagSet(flags,SUSPECTED);

}

Location: Rsp.java

Content: 

public boolean wasUnreachable(){

  return Util.isFlagSet(flags,UNREACHABLE);

}

