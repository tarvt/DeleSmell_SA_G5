Location: ToaHeader.java

Content: 

private static void assertMessageIDNotNull(MessageID messageID){

  Objects.requireNonNull(messageID,"The message ID can't be null.");

}

Location: ToaHeader.java

Content: 

public static ToaHeader createSingleDestinationHeader(MessageID messageID){

  return new ToaHeader(messageID,SINGLE_DESTINATION_MESSAGE);

}

Location: ToaHeader.java

Content: 

public short getMagicId(){

  return 79;

}

Location: ToaHeader.java

Content: 

public MessageID getMessageID(){

  return messageID;

}

Location: ToaHeader.java

Content: 

public long getSequencerNumber(){

  return sequencerNumber;

}

Location: ToaHeader.java

Content: 

public long getViewId(){

  return viewId;

}

Location: ToaHeader.java

Content: 

public static ToaHeader newDataMessageHeader(MessageID messageID,long viewId){

  assertMessageIDNotNull(messageID);

  return new ToaHeader(messageID,DATA_MESSAGE).setViewId(viewId);

}

Location: ToaHeader.java

Content: 

public static ToaHeader newFinalMessageHeader(MessageID messageID,long sequenceNumber){

  assertMessageIDNotNull(messageID);

  return new ToaHeader(messageID,FINAL_MESSAGE).setSequencerNumber(sequenceNumber);

}

Location: ToaHeader.java

Content: 

public static ToaHeader newProposeMessageHeader(MessageID messageID,long sequencerNumber){

  assertMessageIDNotNull(messageID);

  return new ToaHeader(messageID,PROPOSE_MESSAGE).setSequencerNumber(sequencerNumber);

}

Location: ToaHeader.java

Content: 

public ToaHeader setSequencerNumber(long sequencerNumber){

  this.sequencerNumber=sequencerNumber;

  return this;

}

Location: ToaHeader.java

Content: 

private ToaHeader setViewId(long viewId){

  this.viewId=viewId;

  return this;

}

Location: ToaHeader.java

Content: 

public ToaHeader(){

}

Location: ToaHeader.java

Content: 

private ToaHeader(MessageID messageID,byte type){

  this.messageID=messageID;

  this.type=type;

}

Location: ToaHeader.java

Content: 

private static String type2String(byte type){

switch (type) {

case DATA_MESSAGE:

    return "DATA_MESSAGE";

case PROPOSE_MESSAGE:

  return "PROPOSE_MESSAGE";

case FINAL_MESSAGE:

return "FINAL_MESSAGE";

case SINGLE_DESTINATION_MESSAGE:

return "SINGLE_DESTINATION_MESSAGE";

default :

return "UNKNOWN";

}

}

