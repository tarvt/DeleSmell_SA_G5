Location: AsciiString.java

Content: 

public AsciiString(){

  val=new byte[]{};

}

Location: AsciiString.java

Content: 

public AsciiString(AsciiString str){

  this.val=str.val;

}

Location: AsciiString.java

Content: 

public AsciiString(byte[] val){

  this.val=val != null ? val : new byte[]{};

}

Location: AsciiString.java

Content: 

public AsciiString(int length){

  this.val=new byte[length];

}

Location: AsciiString.java

Content: 

public AsciiString(String str){

  int length=str != null ? str.length() : 0;

  this.val=new byte[length];

  for (int i=0; i < length; i++)   val[i]=(byte)str.charAt(i);

}

Location: AsciiString.java

Content: 

public byte[] chars(){

  return val;

}

Location: AsciiString.java

Content: 

public int compareTo(AsciiString str){

  if (str == null)   return 1;

  if (chars().hashCode() == str.val.hashCode())   return 0;

  int len1=val.length;

  int len2=str.val.length;

  int lim=Math.min(len1,len2);

  int k=0;

  while (k < lim) {

    byte c1=val[k];

    byte c2=str.val[k];

    if (c1 != c2)     return c1 > c2 ? 1 : -1;

    k++;

  }

  return Integer.compare(len1,len2);

}

Location: AsciiString.java

Content: 

public boolean equals(byte[] other){

  return Arrays.equals(val,other);

}

Location: AsciiString.java

Content: 

public int length(){

  return val.length;

}

