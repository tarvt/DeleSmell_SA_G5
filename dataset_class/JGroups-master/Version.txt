Location: Version.java

Content: 

public static short[] decode(short version){

  short major=(short)((version & MAJOR_MASK) >> MAJOR_SHIFT);

  short minor=(short)((version & MINOR_MASK) >> MINOR_SHIFT);

  short micro=(short)(version & MICRO_MASK);

  return new short[]{major,minor,micro};

}

Location: Version.java

Content: 

/** 

 * Method copied from http://www.jboss.com/index.html?module=bb&op=viewtopic&t=77231 

 */

public static short encode(int major,int minor,int micro){

  return (short)((major << MAJOR_SHIFT) + (minor << MINOR_SHIFT) + micro);

}

Location: Version.java

Content: 

/** 

 * Checks whether ver is binary compatible with the current version. The rule for binary compatibility is that the major and minor versions have to match, whereas micro versions can differ.

 * @param ver

 * @return

 */

public static boolean isBinaryCompatible(short ver){

  if (version == ver)   return true;

  short tmp_major=(short)((ver & MAJOR_MASK) >> MAJOR_SHIFT);

  short tmp_minor=(short)((ver & MINOR_MASK) >> MINOR_SHIFT);

  return major == tmp_major && minor == tmp_minor;

}

Location: Version.java

Content: 

public static boolean isBinaryCompatible(short ver1,short ver2){

  if (ver1 == ver2)   return true;

  short[] tmp=decode(ver1);

  short tmp_major=tmp[0], tmp_minor=tmp[1];

  tmp=decode(ver2);

  short tmp_major2=tmp[0], tmp_minor2=tmp[1];

  return tmp_major == tmp_major2 && tmp_minor == tmp_minor2;

}

Location: Version.java

Content: 

/** 

 * Compares the specified version number against the current version number.

 * @param v short

 * @return Result of == operator.

 */

public static boolean isSame(short v){

  return version == v;

}

Location: Version.java

Content: 

/** 

 * Returns the catenation of the description and cvs fields.

 * @return String with description

 */

public static String printDescription(){

  return "JGroups " + description;

}

Location: Version.java

Content: 

/** 

 * Returns the version field as a String.

 * @return String with version

 */

public static String printVersion(){

  return string_version;

}

Location: Version.java

Content: 

/** 

 * Method copied from http://www.jboss.com/index.html?module=bb&op=viewtopic&t=77231 

 */

public static String print(short version){

  int major=(version & MAJOR_MASK) >> MAJOR_SHIFT;

  int minor=(version & MINOR_MASK) >> MINOR_SHIFT;

  int micro=(version & MICRO_MASK);

  return major + "." + minor+ "."+ micro;

}

