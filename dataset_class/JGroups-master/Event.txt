Location: Event.java

Content: 

public <T extends Object>T arg(){

  return (T)arg;

}

Location: Event.java

Content: 

public Event(int type){

  this.type=type;

  this.arg=null;

}

Location: Event.java

Content: 

public Event(int type,Object arg){

  this.type=type;

  this.arg=arg;

}

Location: Event.java

Content: 

public <T extends Object>T getArg(){

  return (T)arg;

}

Location: Event.java

Content: 

public static String type2String(int t){

switch (t) {

case CONNECT:

    return "CONNECT";

case DISCONNECT:

  return "DISCONNECT";

case VIEW_CHANGE:

return "VIEW_CHANGE";

case SET_LOCAL_ADDRESS:

return "SET_LOCAL_ADDRESS";

case SUSPECT:

return "SUSPECT";

case BLOCK:

return "BLOCK";

case FIND_MBRS:

return "FIND_MBRS";

case FIND_INITIAL_MBRS:

return "FIND_INITIAL_MBRS";

case FIND_MBRS_ASYNC:

return "FIND_MBRS_ASYNC";

case TMP_VIEW:

return "TMP_VIEW";

case BECOME_SERVER:

return "BECOME_SERVER";

case GET_APPLSTATE:

return "GET_APPLSTATE";

case GET_STATE:

return "GET_STATE";

case GET_STATE_OK:

return "GET_STATE_OK";

case STABLE:

return "STABLE";

case GET_DIGEST:

return "GET_DIGEST";

case SET_DIGEST:

return "SET_DIGEST";

case OVERWRITE_DIGEST:

return "OVERWRITE_DIGEST";

case MERGE:

return "MERGE";

case UNSUSPECT:

return "UNSUSPECT";

case MERGE_DIGEST:

return "MERGE_DIGEST";

case CONFIG:

return "CONFIG";

case SUSPEND_STABLE:

return "SUSPEND_STABLE";

case RESUME_STABLE:

return "RESUME_STABLE";

case SUSPEND:

return "SUSPEND";

case SUSPEND_BUT_FAIL:

return "SUSPEND_BUT_FAIL";

case RESUME:

return "RESUME";

case STATE_TRANSFER_INPUTSTREAM:

return "STATE_TRANSFER_INPUTSTREAM";

case STATE_TRANSFER_OUTPUTSTREAM:

return "STATE_TRANSFER_OUTPUTSTREAM";

case STATE_TRANSFER_INPUTSTREAM_CLOSED:

return "STATE_TRANSFER_INPUTSTREAM_CLOSED";

case UNBLOCK:

return "UNBLOCK";

case CLOSE_BARRIER:

return "CLOSE_BARRIER";

case OPEN_BARRIER:

return "OPEN_BARRIER";

case REBROADCAST:

return "REBROADCAST";

case CONNECT_WITH_STATE_TRANSFER:

return "CONNECT_WITH_STATE_TRANSFER";

case GET_PHYSICAL_ADDRESS:

return "GET_PHYSICAL_ADDRESS";

case GET_LOGICAL_PHYSICAL_MAPPINGS:

return "GET_LOGICAL_PHYSICAL_MAPPINGS";

case ADD_PHYSICAL_ADDRESS:

return "ADD_PHYSICAL_ADDRESS";

case REMOVE_ADDRESS:

return "REMOVE_ADDRESS";

case GET_LOCAL_ADDRESS:

return "GET_LOCAL_ADDRESS";

case CONNECT_USE_FLUSH:

return "CONNECT_USE_FLUSH";

case CONNECT_WITH_STATE_TRANSFER_USE_FLUSH:

return "CONNECT_WITH_STATE_TRANSFER_USE_FLUSH";

case LOCK:

return "LOCK";

case UNLOCK:

return "UNLOCK";

case UNLOCK_ALL:

return "UNLOCK_ALL";

case LOCK_AWAIT:

return "LOCK_AWAIT";

case LOCK_SIGNAL:

return "LOCK_SIGNAL";

case IS_MERGE_IN_PROGRESS:

return "IS_MERGE_IN_PROGRESS";

case GET_PHYSICAL_ADDRESSES:

return "GET_PHYSICAL_ADDRESSES";

case SITE_UNREACHABLE:

return "SITE_UNREACHABLE";

case FORWARD_TO_COORD:

return "FORWARD_TO_COORD";

case PUNCH_HOLE:

return "PUNCH_HOLE";

case CLOSE_HOLE:

return "CLOSE_HOLE";

case GET_VIEW_FROM_COORD:

return "GET_VIEW_FROM_COORD";

case GET_PING_DATA:

return "GET_PING_DATA";

case GET_SECRET_KEY:

return "GET_SECRET_KEY";

case SET_SECRET_KEY:

return "SET_SECRET_KEY";

case UNLOCK_FORCE:

return "UNLOCK_FORCE";

case INSTALL_MERGE_VIEW:

return "INSTALL_MERGE_VIEW";

case USER_DEFINED:

return "USER_DEFINED";

default :

return "UNDEFINED(" + t + ")";

}

}

