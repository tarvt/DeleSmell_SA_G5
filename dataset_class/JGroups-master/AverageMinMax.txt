Location: AverageMinMax.java

Content: 

public String percentiles(){

  if (values == null)   return "n/a";

  Collections.sort(values);

  double stddev=stddev();

  return String.format("stddev: %.2f, 50: %d, 90: %d, 99: %d, 99.9: %d, 99.99: %d, 99.999: %d, 100: %d\n",stddev,p(50),p(90),p(99),p(99.9),p(99.99),p(99.999),p(100));

}

Location: AverageMinMax.java

Content: 

protected long p(double percentile){

  if (values == null)   return -1;

  int size=values.size();

  int index=(int)(size * (percentile / 100.0));

  return values.get(index - 1);

}

Location: AverageMinMax.java

Content: 

protected double stddev(){

  if (values == null)   return -1.0;

  double av=average();

  int size=values.size();

  double variance=values.stream().map(v -> (v - av) * (v - av)).reduce(0.0,(x,y) -> x + y) / size;

  return Math.sqrt(variance);

}

Location: AverageMinMax.java

Content: 

public boolean usePercentiles(){

  return values != null;

}

Location: AverageMinMax.java

Content: 

public AverageMinMax usePercentiles(int capacity){

  values=capacity > 0 ? new ArrayList<>(capacity) : null;

  return this;

}

