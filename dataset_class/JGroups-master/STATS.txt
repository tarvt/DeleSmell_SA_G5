Location: STATS.java

Content: 

@ManagedAttribute public long getReceivedBytes(){

  return received_bytes;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getReceivedMcastBytes(){

  return received_mcast_bytes;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getReceivedMcastMessages(){

  return received_mcasts;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getReceivedMessages(){

  return received_msgs;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getReceivedUnicastBytes(){

  return received_ucast_bytes;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getReceivedUnicastMessages(){

  return received_ucasts;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getSentBytes(){

  return sent_bytes;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getSentMcastBytes(){

  return sent_mcast_bytes;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getSentMcastMessages(){

  return sent_mcasts;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getSentMessages(){

  return sent_msgs;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getSentUnicastBytes(){

  return sent_ucast_bytes;

}

Location: STATS.java

Content: 

@ManagedAttribute public long getSentUnicastMessages(){

  return sent_ucasts;

}

Location: STATS.java

Content: 

@ManagedOperation public String printStats(){

  Map.Entry entry;

  Object key, val;

  StringBuilder sb=new StringBuilder();

  sb.append("sent:\n");

  for (Iterator it=sent.entrySet().iterator(); it.hasNext(); ) {

    entry=(Map.Entry)it.next();

    key=entry.getKey();

    if (key == null)     key="<mcast dest>";

    val=entry.getValue();

    sb.append(key).append(": ").append(val).append("\n");

  }

  sb.append("\nreceived:\n");

  for (Iterator it=received.entrySet().iterator(); it.hasNext(); ) {

    entry=(Map.Entry)it.next();

    key=entry.getKey();

    val=entry.getValue();

    sb.append(key).append(": ").append(val).append("\n");

  }

  return sb.toString();

}

Location: STATS.java

Content: 

private void updateStats(Message msg,short direction){

  int length;

  HashMap map;

  boolean mcast;

  Address dest, src;

  if (msg == null)   return;

  length=msg.getLength();

  dest=msg.getDest();

  src=msg.getSrc();

  mcast=dest == null;

  if (direction == UP) {

    received_msgs++;

    received_bytes+=length;

    if (mcast) {

      received_mcasts++;

      received_mcast_bytes+=length;

    }

 else {

      received_ucasts++;

      received_ucast_bytes+=length;

    }

  }

 else {

    sent_msgs++;

    sent_bytes+=length;

    if (mcast) {

      sent_mcasts++;

      sent_mcast_bytes+=length;

    }

 else {

      sent_ucasts++;

      sent_ucast_bytes+=length;

    }

  }

  Address key=direction == UP ? src : dest;

  map=direction == UP ? received : sent;

  Entry entry=(Entry)map.get(key);

  if (entry == null) {

    entry=new Entry();

    map.put(key,entry);

  }

  entry.msgs++;

  entry.bytes+=length;

  if (mcast) {

    entry.mcasts++;

    entry.mcast_bytes+=length;

  }

 else {

    entry.ucasts++;

    entry.ucast_bytes+=length;

  }

}

