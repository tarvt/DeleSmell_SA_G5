Location: SeqnoComparator.java

Content: 

public int compare(Seqno o1,Seqno o2){

  if (!o1.isDummy() && !o2.isDummy())   return o1.low == o2.low ? 0 : o1.low < o2.low ? -1 : 1;

  if (o1.isDummy()) {

    if (o2 instanceof SeqnoRange)     return _compare2(o1,(SeqnoRange)o2);

    return _compare(o1,o2);

  }

  if (o1 instanceof SeqnoRange)   return _compare3((SeqnoRange)o1,o2);

  return _compare(o1,o2);

}

Location: SeqnoComparator.java

Content: 

private static int _compare2(Seqno o1,SeqnoRange o2){

  return o1.low >= o2.low && o1.low <= o2.high ? 0 : o1.low < o2.low ? -1 : 1;

}

Location: SeqnoComparator.java

Content: 

private static int _compare3(SeqnoRange o1,Seqno o2){

  return o2.low >= o1.low && o2.low <= o1.high ? 0 : o1.low < o2.low ? -1 : 1;

}

Location: SeqnoComparator.java

Content: 

private static int _compare(Seqno o1,Seqno o2){

  return o1.low == o2.low ? 0 : o1.low < o2.low ? -1 : 1;

}

