Location: RequestOptions.java

Content: 

public boolean anycasting(){

  return use_anycasting;

}

Location: RequestOptions.java

Content: 

public RequestOptions anycasting(boolean a){

  this.use_anycasting=a;

  return this;

}

Location: RequestOptions.java

Content: 

public static RequestOptions ASYNC(){

  return new RequestOptions(ResponseMode.GET_NONE,10000);

}

Location: RequestOptions.java

Content: 

public RequestOptions clearFlags(Message.Flag... flags){

  if (flags != null)   for (  Message.Flag flag : flags)   if (flag != null)   this.flags&=~flag.value();

  return this;

}

Location: RequestOptions.java

Content: 

public RequestOptions clearTransientFlags(Message.TransientFlag... flags){

  if (flags != null)   for (  Message.TransientFlag flag : flags)   if (flag != null)   this.transient_flags&=~flag.value();

  return this;

}

Location: RequestOptions.java

Content: 

public Address[] exclusionList(){

  return exclusion_list;

}

Location: RequestOptions.java

Content: 

public RequestOptions exclusionList(Address... mbrs){

  if (mbrs == null || mbrs.length == 0)   return this;

  exclusion_list=mbrs;

  return this;

}

Location: RequestOptions.java

Content: 

public short flags(){

  return flags;

}

Location: RequestOptions.java

Content: 

public boolean flagSet(Message.Flag flag){

  return flag != null && ((flags & flag.value()) == flag.value());

}

Location: RequestOptions.java

Content: 

public RequestOptions flags(Message.Flag... flags){

  if (flags != null)   for (  Message.Flag flag : flags)   if (flag != null)   this.flags|=flag.value();

  return this;

}

Location: RequestOptions.java

Content: 

public boolean getAnycasting(){

  return use_anycasting;

}

Location: RequestOptions.java

Content: 

public Address[] getExclusionList(){

  return exclusion_list;

}

Location: RequestOptions.java

Content: 

public short getFlags(){

  return flags;

}

Location: RequestOptions.java

Content: 

public RspFilter getRspFilter(){

  return rsp_filter;

}

Location: RequestOptions.java

Content: 

public short getTransientFlags(){

  return transient_flags;

}

Location: RequestOptions.java

Content: 

public boolean hasExclusionList(){

  return exclusion_list != null;

}

Location: RequestOptions.java

Content: 

public boolean isFlagSet(Message.Flag flag){

  return flagSet(flag);

}

Location: RequestOptions.java

Content: 

public boolean isUseAnycastAddresses(){

  return use_anycast_addresses;

}

Location: RequestOptions.java

Content: 

public RequestOptions mode(ResponseMode mode){

  this.mode=mode;

  return this;

}

Location: RequestOptions.java

Content: 

public RequestOptions(){

}

Location: RequestOptions.java

Content: 

public RequestOptions(RequestOptions opts){

  this.mode=opts.mode;

  this.timeout=opts.timeout;

  this.use_anycasting=opts.use_anycasting;

  this.rsp_filter=opts.rsp_filter;

  this.flags=opts.flags;

  this.transient_flags=opts.transient_flags;

  this.exclusion_list=opts.exclusion_list;

}

Location: RequestOptions.java

Content: 

public RequestOptions(ResponseMode mode,long timeout){

  this(mode,timeout,false,null);

}

Location: RequestOptions.java

Content: 

public RequestOptions(ResponseMode mode,long timeout,boolean use_anycasting){

  this(mode,timeout,use_anycasting,null);

}

Location: RequestOptions.java

Content: 

public RequestOptions(ResponseMode mode,long timeout,boolean use_anycasting,RspFilter rsp_filter){

  this(mode,timeout,use_anycasting,rsp_filter,(Message.Flag[])null);

}

Location: RequestOptions.java

Content: 

public RequestOptions(ResponseMode mode,long timeout,boolean use_anycasting,RspFilter rsp_filter,Message.Flag... flags){

  this(mode,timeout,use_anycasting,rsp_filter,(short)0);

  flags(flags);

}

Location: RequestOptions.java

Content: 

public RequestOptions(ResponseMode mode,long timeout,boolean use_anycasting,RspFilter rsp_filter,short flags){

  this.mode=mode;

  this.timeout=timeout;

  this.use_anycasting=use_anycasting;

  this.rsp_filter=rsp_filter;

  this.flags=flags;

}

Location: RequestOptions.java

Content: 

public RspFilter rspFilter(){

  return rsp_filter;

}

Location: RequestOptions.java

Content: 

public RequestOptions rspFilter(RspFilter filter){

  this.rsp_filter=filter;

  return this;

}

Location: RequestOptions.java

Content: 

public RequestOptions setAnycasting(boolean a){

  this.use_anycasting=a;

  return this;

}

Location: RequestOptions.java

Content: 

public RequestOptions setFlags(Message.Flag... flags){

  return flags(flags);

}

Location: RequestOptions.java

Content: 

/** 

 * Not recommended as the internal representation of flags might change (e.g. from short to int). Use {@link #setFlags(Message.Flag)} instead 

 */

public RequestOptions setFlags(short flags){

  short tmp=this.flags;

  tmp|=flags;

  this.flags=tmp;

  return this;

}

Location: RequestOptions.java

Content: 

public RequestOptions setMode(ResponseMode mode){

  this.mode=mode;

  return this;

}

Location: RequestOptions.java

Content: 

public RequestOptions setRspFilter(RspFilter filter){

  this.rsp_filter=filter;

  return this;

}

Location: RequestOptions.java

Content: 

public RequestOptions setTransientFlags(Message.TransientFlag... flags){

  return transientFlags(flags);

}

Location: RequestOptions.java

Content: 

/** 

 * Not recommended as the internal representation of flags might change (e.g. from short to int). Use {@link #setTransientFlags(Message.TransientFlag)} instead.

 */

public RequestOptions setTransientFlags(short flags){

  short tmp=this.transient_flags;

  tmp|=flags;

  this.transient_flags=(byte)tmp;

  return this;

}

Location: RequestOptions.java

Content: 

public RequestOptions setUseAnycastAddresses(boolean f){

  use_anycast_addresses=f;

  return this;

}

Location: RequestOptions.java

Content: 

public static RequestOptions SYNC(){

  return new RequestOptions(ResponseMode.GET_ALL,10000);

}

Location: RequestOptions.java

Content: 

public long timeout(){

  return timeout;

}

Location: RequestOptions.java

Content: 

public short transientFlags(){

  return transient_flags;

}

Location: RequestOptions.java

Content: 

public boolean transientFlagSet(Message.TransientFlag flag){

  return flag != null && ((transient_flags & flag.value()) == flag.value());

}

Location: RequestOptions.java

Content: 

public RequestOptions transientFlags(Message.TransientFlag... flags){

  if (flags != null)   for (  Message.TransientFlag flag : flags)   if (flag != null)   this.transient_flags|=flag.value();

  return this;

}

Location: RequestOptions.java

Content: 

public boolean useAnycastAddresses(){

  return use_anycast_addresses;

}

Location: RequestOptions.java

Content: 

public RequestOptions useAnycastAddresses(boolean f){

  use_anycast_addresses=f;

  return this;

}

