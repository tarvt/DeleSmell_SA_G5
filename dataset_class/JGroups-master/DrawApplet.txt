Location: DrawApplet.java

Content: 

public void clearPanel(){

  Rectangle bounds=null;

  if (panel == null || graphics == null)   return;

  bounds=panel.getBounds();

  graphics.clearRect(1,1,bounds.width - 2,bounds.height - 2);

}

Location: DrawApplet.java

Content: 

public void go(){

  try {

    panel=new Panel();

    sub_panel=new Panel();

    resize(200,200);

    add("Center",panel);

    clear_button=new Button("Clear");

    clear_button.setFont(default_font);

    clear_button.addActionListener(this);

    leave_button=new Button("Exit");

    leave_button.setFont(default_font);

    leave_button.addActionListener(this);

    mbr_label=new Label("0 mbr(s)");

    mbr_label.setFont(default_font);

    sub_panel.add("South",clear_button);

    sub_panel.add("South",leave_button);

    sub_panel.add("South",mbr_label);

    add("South",sub_panel);

    panel.addMouseMotionListener(this);

    setVisible(true);

    mbr_label.setText(member_size + " mbrs");

    graphics=panel.getGraphics();

    selectColor();

    graphics.setColor(default_color);

    panel.setBackground(Color.white);

    clear_button.setForeground(Color.blue);

    leave_button.setForeground(Color.blue);

  }

 catch (  Exception e) {

    log.error(e.toString());

  }

}

Location: DrawApplet.java

Content: 

public void paint(Graphics g){

  Rectangle bounds=panel.getBounds();

  if (bounds == null || graphics == null)   return;

  Color old=graphics.getColor();

  graphics.setColor(Color.black);

  graphics.drawRect(0,0,bounds.width - 1,bounds.height - 1);

  graphics.setColor(old);

}

Location: DrawApplet.java

Content: 

private void selectColor(){

  red=Math.abs(random.nextInt() % 255);

  green=Math.abs(random.nextInt() % 255);

  blue=Math.abs(random.nextInt() % 255);

  default_color=new Color(red,green,blue);

}

Location: DrawApplet.java

Content: 

public void sendClearPanelMsg(){

  hongshuai();

  Rectangle bounds=null;

  if (panel == null || graphics == null)   return;

  bounds=panel.getBounds();

  graphics.clearRect(1,1,bounds.width - 2,bounds.height - 2);

  try {

    out.reset();

    outstream=new DataOutputStream(out);

    outstream.writeInt(-13);

    channel.send(new Message(null,out.toByteArray()));

    outstream.flush();

  }

 catch (  Exception ex) {

    log.error(ex.toString());

  }

}

