Location: Topology.java

Content: 

public void addNode(Address member){

  Address tmp;

  for (int i=0; i < members.size(); i++) {

    tmp=members.get(i);

    if (member.equals(tmp))     return;

  }

  members.add(member);

  repaint();

}

Location: Topology.java

Content: 

public void coordinatorChosen(){

  coordinator=true;

  repaint();

}

Location: Topology.java

Content: 

public void drawNode(Graphics g,int x,int y,String label,int style){

  Color old=g.getColor();

  int width, height;

  width=fm.stringWidth(label) + 10;

  height=fm.getHeight() + 5;

  g.setColor(node_color);

  g.fillRect(x,y,width,height);

  g.setColor(old);

  g.drawString(label,x + 5,y + 15);

  g.drawRoundRect(x - 1,y - 1,width + 1,height + 1,10,10);

  if (style == CheckStyle) {

    g.drawRoundRect(x - 2,y - 2,width + 2,height + 2,10,10);

    g.drawRoundRect(x - 3,y - 3,width + 3,height + 3,10,10);

  }

}

Location: Topology.java

Content: 

public void drawTopology(Graphics g){

  int x=20, y=50;

  String label;

  Dimension box=getSize();

  Color old=g.getColor();

  if (coordinator) {

    g.setColor(Color.cyan);

    g.fillRect(11,31,box.width - 21,box.height - 61);

    g.setColor(old);

  }

  g.drawRect(10,30,box.width - 20,box.height - 60);

  g.setFont(myFont);

  for (int i=0; i < members.size(); i++) {

    label=members.get(i).toString();

    drawNode(g,x,y,label,NormalStyle);

    y+=50;

  }

}

Location: Topology.java

Content: 

public Topology(String props,String name){

  this.props=props;

  this.name=name;

  addWindowListener(this);

  fm=getFontMetrics(new Font("Helvetica",Font.PLAIN,12));

  myFont=new Font("Helvetica",Font.PLAIN,12);

}

