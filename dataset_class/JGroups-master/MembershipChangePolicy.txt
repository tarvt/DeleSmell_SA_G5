Location: MembershipChangePolicy.java

Content: 

/** 

 * Compute a new membership based on a number of subviews

 * @param subviews A list of membership lists, e.g. [{A,B,C}, {M,N,O,P}, {X,Y,Z}]. This is a merge between3 subviews. Guaranteed to be non-null (but may be empty)

 * @return The new membership. The first element of the list is the (old or existing) coordinator.<em>There cannot be any duplicate members</em>

 */

List<Address> getNewMembership(final Collection<Collection<Address>> subviews);

Location: MembershipChangePolicy.java

Content: 

/** 

 * Computes a new membership based on existing, joining, leaving and suspected members. The first element of the new membership will be the coordinator.

 * @param current_members The list of current members. Guaranteed to be non-null (but may be empty)

 * @param joiners The joining members. Guaranteed to be non-null (but may be empty)

 * @param leavers Members that are leaving. Guaranteed to be non-null (but may be empty)

 * @param suspects Members which are suspected. Guaranteed to be non-null (but may be empty)

 * @return The new membership. The first element of the list is the (old or existing) coordinator.<em>There cannot be any duplicate members</em>

 */

List<Address> getNewMembership(final Collection<Address> current_members,final Collection<Address> joiners,final Collection<Address> leavers,final Collection<Address> suspects);

