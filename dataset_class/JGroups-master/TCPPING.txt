Location: TCPPING.java

Content: 

@ManagedOperation public <T extends TCPPING>T clearDynamicHostList(){

  dynamic_hosts.clear();

  return (T)this;

}

Location: TCPPING.java

Content: 

public void discoveryRequestReceived(Address sender,String logical_name,PhysicalAddress physical_addr){

  super.discoveryRequestReceived(sender,logical_name,physical_addr);

  if (physical_addr != null && !initial_hosts.contains(physical_addr))   dynamic_hosts.addIfAbsent(physical_addr);

}

Location: TCPPING.java

Content: 

@ManagedAttribute public String getDynamicHostList(){

  return dynamic_hosts.toString();

}

Location: TCPPING.java

Content: 

/** 

 * Returns the list of initial hosts as configured by the user via XML. Note that the returned list is mutable, so careful with changes !

 * @return List<Address> list of initial hosts. This variable is only set after the channel has been created andset Properties() has been called

 */

public Collection<PhysicalAddress> getInitialHosts(){

  return initial_hosts;

}

Location: TCPPING.java

Content: 

public int getPortRange(){

  return port_range;

}

Location: TCPPING.java

Content: 

public <T extends TCPPING>T initialHosts(Collection<InetSocketAddress> h){

  setInitialHosts(h);

  return (T)this;

}

Location: TCPPING.java

Content: 

public <T extends TCPPING>T portRange(int r){

  this.port_range=r;

  return (T)this;

}

Location: TCPPING.java

Content: 

public <T extends TCPPING>T setInitialHosts2(Collection<PhysicalAddress> hosts){

  if (hosts == null || hosts.isEmpty())   return (T)this;

  initial_hosts=hosts;

  return (T)this;

}

Location: TCPPING.java

Content: 

public <T extends TCPPING>T setInitialHosts(Collection<InetSocketAddress> hosts){

  if (hosts == null || hosts.isEmpty())   return (T)this;

  initial_hosts=hosts.stream().map(h -> new IpAddress(h.getAddress(),h.getPort())).collect(Collectors.toList());

  return (T)this;

}

Location: TCPPING.java

Content: 

public <T extends TCPPING>T setPortRange(int port_range){

  this.port_range=port_range;

  return (T)this;

}

Location: TCPPING.java

Content: 

public TCPPING(){

}

