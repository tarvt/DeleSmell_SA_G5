Location: FlagsUUID.java

Content: 

public <T extends FlagsUUID>T addContents(T other){

  flags|=other.flags;

  return (T)this;

}

Location: FlagsUUID.java

Content: 

public <T extends FlagsUUID>T clearFlag(short flag){

  flags&=~flag;

  return (T)this;

}

Location: FlagsUUID.java

Content: 

public FlagsUUID(){

  super();

}

Location: FlagsUUID.java

Content: 

protected FlagsUUID(byte[] data){

  super(data);

}

Location: FlagsUUID.java

Content: 

public FlagsUUID(long mostSigBits,long leastSigBits){

  super(mostSigBits,leastSigBits);

}

Location: FlagsUUID.java

Content: 

public <T extends FlagsUUID>FlagsUUID(T other){

  super(other.mostSigBits,other.leastSigBits);

  flags=other.flags;

}

Location: FlagsUUID.java

Content: 

public boolean isFlagSet(short flag){

  return (flags & flag) == flag;

}

Location: FlagsUUID.java

Content: 

public static FlagsUUID randomUUID(String name){

  FlagsUUID retval=new FlagsUUID(generateRandomBytes());

  if (name != null)   NameCache.add(retval,name);

  return retval;

}

Location: FlagsUUID.java

Content: 

public <T extends FlagsUUID>T setFlag(short flag){

  flags|=flag;

  return (T)this;

}

