Location: ForkConfig.java

Content: 

private ForkConfig(){

  throw new InstantiationError("Must not instantiate this class");

}

Location: ForkConfig.java

Content: 

protected static void parseForkStack(final Map<String,List<ProtocolConfiguration>> map,Node root) throws Exception {

  NodeList children=root.getChildNodes();

  if (children == null || children.getLength() == 0)   return;

  NamedNodeMap attributes=root.getAttributes();

  String fork_stack_id=attributes.getNamedItem(ID).getNodeValue();

  if (map.containsKey(fork_stack_id))   throw new IllegalStateException("duplicate fork-stack ID: \"" + fork_stack_id + "\"");

  for (int i=0; i < children.getLength(); i++) {

    Node node=children.item(i);

    if (node.getNodeType() != Node.ELEMENT_NODE)     continue;

    List<ProtocolConfiguration> protocols=XmlConfigurator.parseProtocols((Element)node);

    map.put(fork_stack_id,protocols);

  }

}

Location: ForkConfig.java

Content: 

/** 

 * Parses the input and returns a map of fork-stack IDs and lists of ProtocolConfigurations

 */

public static Map<String,List<ProtocolConfiguration>> parse(InputStream input) throws Exception {

  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();

  factory.setValidating(false);

  DocumentBuilder builder=factory.newDocumentBuilder();

  Document document=builder.parse(input);

  Element root=document.getDocumentElement();

  return parse(root);

}

