Location: AddressedDNSResolver.java

Content: 

AddressedDNSResolver(DirContext context){

  super(context);

}

Location: AddressedDNSResolver.java

Content: 

public AddressedDNSResolver(String dnsContextFactory,String dnsAddress) throws NamingException {

  super(dnsContextFactory,dnsAddress);

}

Location: AddressedDNSResolver.java

Content: 

@Override protected List<Address> resolveAEntries(String dnsQuery){

  List<Address> addresses=new ArrayList<>();

  try {

    Attributes attributes=getDnsContext().getAttributes(dnsQuery,new String[]{DNSRecordType.A.toString()});

    if (attributes != null && attributes.getAll().hasMoreElements()) {

      NamingEnumeration<?> namingEnumeration=attributes.get(DNSRecordType.A.toString()).getAll();

      while (namingEnumeration.hasMoreElements()) {

        try {

          addresses.add(new IpAddress(namingEnumeration.nextElement().toString()));

        }

 catch (        Exception e) {

          log.trace("non critical DNS resolution error",e);

        }

      }

    }

  }

 catch (  NamingException ex) {

    log.trace("no DNS records for query %s, ex: %a",dnsQuery,ex);

  }

  return addresses;

}

