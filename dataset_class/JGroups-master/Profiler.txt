Location: Profiler.java

Content: 

public Map<String,String> handleProbe(String... keys){

  Map<String,String> map=null;

  for (  String key : keys) {

    if (Objects.equals(key,name + ".reset"))     avg.clear();

 else     if (Objects.equals(key,name)) {

      if (map == null)       map=new HashMap<>();

      map.put(name,String.format("cnt: min/avg/max = %d: %d / %.2f / %d %s",avg.count(),avg.min(),avg.average(),avg.max(),toString(unit)));

    }

  }

  return map;

}

Location: Profiler.java

Content: 

public long max(){

  return avg.max();

}

Location: Profiler.java

Content: 

public long min(){

  return avg.min();

}

Location: Profiler.java

Content: 

/** 

 * Creates a Profiler instance which will reply to key 'name'.

 * @param name The name under which the profiler will register itself

 * @param unit The unit of measurement - only nanos, micros and millis are supported

 */

public Profiler(String name,TimeUnit unit){

  this.name=name;

  this.unit=unit;

}

Location: Profiler.java

Content: 

public String[] supportedKeys(){

  return new String[]{name,name + ".reset"};

}

Location: Profiler.java

Content: 

protected static String toString(TimeUnit unit){

switch (unit) {

case SECONDS:

    return "s";

case MILLISECONDS:

  return "ms";

case MICROSECONDS:

return "us";

case NANOSECONDS:

return "ns";

}

return unit.toString();

}

