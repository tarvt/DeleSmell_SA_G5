Location: SuppressLog.java

Content: 

public SuppressCache<T> getCache(){

  return cache;

}

Location: SuppressLog.java

Content: 

/** 

 * Logs a message from a given member if is hasn't been logged for timeout ms

 * @param level The level, either warn or error

 * @param key The key into the SuppressCache

 * @param timeout The timeout

 * @param args The arguments to the message key

 */

public void log(Level level,T key,long timeout,Object... args){

  SuppressCache.Value val=cache.putIfAbsent(key,timeout);

  if (val == null)   return;

  String message=val.count() == 1 ? String.format(message_format,args) : String.format(message_format,args) + " " + String.format(suppress_format,val.count(),key,val.age());

switch (level) {

case error:

    log.error(message);

  break;

case warn:

log.warn(message);

break;

case trace:

log.trace(message);

break;

}

}

Location: SuppressLog.java

Content: 

public void removeExpired(long timeout){

  cache.removeExpired(timeout);

}

Location: SuppressLog.java

Content: 

public SuppressLog(Log log,String message_key,String suppress_msg){

  this.log=log;

  cache=new SuppressCache<>();

  message_format=Util.getMessage(message_key);

  suppress_format=Util.getMessage(suppress_msg);

}

