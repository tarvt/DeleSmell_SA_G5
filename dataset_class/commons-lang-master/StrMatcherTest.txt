Location: StrMatcherTest.java

Content: 

@Test public void testCharMatcher_char(){

  final StrMatcher matcher=StrMatcher.charMatcher('c');

  assertEquals(0,matcher.isMatch(BUFFER2,0));

  assertEquals(0,matcher.isMatch(BUFFER2,1));

  assertEquals(1,matcher.isMatch(BUFFER2,2));

  assertEquals(0,matcher.isMatch(BUFFER2,3));

  assertEquals(0,matcher.isMatch(BUFFER2,4));

  assertEquals(0,matcher.isMatch(BUFFER2,5));

}

Location: StrMatcherTest.java

Content: 

@Test public void testCharSetMatcher_charArray(){

  final StrMatcher matcher=StrMatcher.charSetMatcher("ace".toCharArray());

  assertEquals(1,matcher.isMatch(BUFFER2,0));

  assertEquals(0,matcher.isMatch(BUFFER2,1));

  assertEquals(1,matcher.isMatch(BUFFER2,2));

  assertEquals(0,matcher.isMatch(BUFFER2,3));

  assertEquals(1,matcher.isMatch(BUFFER2,4));

  assertEquals(0,matcher.isMatch(BUFFER2,5));

  assertSame(StrMatcher.noneMatcher(),StrMatcher.charSetMatcher());

  assertSame(StrMatcher.noneMatcher(),StrMatcher.charSetMatcher((char[])null));

  assertTrue(StrMatcher.charSetMatcher("a".toCharArray()) instanceof StrMatcher.CharMatcher);

}

Location: StrMatcherTest.java

Content: 

@Test public void testCharSetMatcher_String(){

  final StrMatcher matcher=StrMatcher.charSetMatcher("ace");

  assertEquals(1,matcher.isMatch(BUFFER2,0));

  assertEquals(0,matcher.isMatch(BUFFER2,1));

  assertEquals(1,matcher.isMatch(BUFFER2,2));

  assertEquals(0,matcher.isMatch(BUFFER2,3));

  assertEquals(1,matcher.isMatch(BUFFER2,4));

  assertEquals(0,matcher.isMatch(BUFFER2,5));

  assertSame(StrMatcher.noneMatcher(),StrMatcher.charSetMatcher(""));

  assertSame(StrMatcher.noneMatcher(),StrMatcher.charSetMatcher((String)null));

  assertTrue(StrMatcher.charSetMatcher("a") instanceof StrMatcher.CharMatcher);

}

Location: StrMatcherTest.java

Content: 

@Test public void testCommaMatcher(){

  final StrMatcher matcher=StrMatcher.commaMatcher();

  assertSame(matcher,StrMatcher.commaMatcher());

  assertEquals(0,matcher.isMatch(BUFFER1,0));

  assertEquals(1,matcher.isMatch(BUFFER1,1));

  assertEquals(0,matcher.isMatch(BUFFER1,2));

}

Location: StrMatcherTest.java

Content: 

@Test public void testDoubleQuoteMatcher(){

  final StrMatcher matcher=StrMatcher.doubleQuoteMatcher();

  assertSame(matcher,StrMatcher.doubleQuoteMatcher());

  assertEquals(0,matcher.isMatch(BUFFER1,11));

  assertEquals(1,matcher.isMatch(BUFFER1,12));

}

Location: StrMatcherTest.java

Content: 

@Test public void testMatcherIndices(){

  final StrMatcher matcher=StrMatcher.stringMatcher("bc");

  assertEquals(2,matcher.isMatch(BUFFER2,1,1,BUFFER2.length));

  assertEquals(2,matcher.isMatch(BUFFER2,1,0,3));

  assertEquals(0,matcher.isMatch(BUFFER2,1,0,2));

}

Location: StrMatcherTest.java

Content: 

@Test public void testNoneMatcher(){

  final StrMatcher matcher=StrMatcher.noneMatcher();

  assertSame(matcher,StrMatcher.noneMatcher());

  assertEquals(0,matcher.isMatch(BUFFER1,0));

  assertEquals(0,matcher.isMatch(BUFFER1,1));

  assertEquals(0,matcher.isMatch(BUFFER1,2));

  assertEquals(0,matcher.isMatch(BUFFER1,3));

  assertEquals(0,matcher.isMatch(BUFFER1,4));

  assertEquals(0,matcher.isMatch(BUFFER1,5));

  assertEquals(0,matcher.isMatch(BUFFER1,6));

  assertEquals(0,matcher.isMatch(BUFFER1,7));

  assertEquals(0,matcher.isMatch(BUFFER1,8));

  assertEquals(0,matcher.isMatch(BUFFER1,9));

  assertEquals(0,matcher.isMatch(BUFFER1,10));

  assertEquals(0,matcher.isMatch(BUFFER1,11));

  assertEquals(0,matcher.isMatch(BUFFER1,12));

}

Location: StrMatcherTest.java

Content: 

@Test public void testQuoteMatcher(){

  final StrMatcher matcher=StrMatcher.quoteMatcher();

  assertSame(matcher,StrMatcher.quoteMatcher());

  assertEquals(0,matcher.isMatch(BUFFER1,10));

  assertEquals(1,matcher.isMatch(BUFFER1,11));

  assertEquals(1,matcher.isMatch(BUFFER1,12));

}

Location: StrMatcherTest.java

Content: 

@Test public void testSingleQuoteMatcher(){

  final StrMatcher matcher=StrMatcher.singleQuoteMatcher();

  assertSame(matcher,StrMatcher.singleQuoteMatcher());

  assertEquals(0,matcher.isMatch(BUFFER1,10));

  assertEquals(1,matcher.isMatch(BUFFER1,11));

  assertEquals(0,matcher.isMatch(BUFFER1,12));

}

Location: StrMatcherTest.java

Content: 

@Test public void testSpaceMatcher(){

  final StrMatcher matcher=StrMatcher.spaceMatcher();

  assertSame(matcher,StrMatcher.spaceMatcher());

  assertEquals(0,matcher.isMatch(BUFFER1,4));

  assertEquals(1,matcher.isMatch(BUFFER1,5));

  assertEquals(0,matcher.isMatch(BUFFER1,6));

}

Location: StrMatcherTest.java

Content: 

@Test public void testSplitMatcher(){

  final StrMatcher matcher=StrMatcher.splitMatcher();

  assertSame(matcher,StrMatcher.splitMatcher());

  assertEquals(0,matcher.isMatch(BUFFER1,2));

  assertEquals(1,matcher.isMatch(BUFFER1,3));

  assertEquals(0,matcher.isMatch(BUFFER1,4));

  assertEquals(1,matcher.isMatch(BUFFER1,5));

  assertEquals(0,matcher.isMatch(BUFFER1,6));

  assertEquals(1,matcher.isMatch(BUFFER1,7));

  assertEquals(1,matcher.isMatch(BUFFER1,8));

  assertEquals(1,matcher.isMatch(BUFFER1,9));

  assertEquals(0,matcher.isMatch(BUFFER1,10));

}

Location: StrMatcherTest.java

Content: 

@Test public void testStringMatcher_String(){

  final StrMatcher matcher=StrMatcher.stringMatcher("bc");

  assertEquals(0,matcher.isMatch(BUFFER2,0));

  assertEquals(2,matcher.isMatch(BUFFER2,1));

  assertEquals(0,matcher.isMatch(BUFFER2,2));

  assertEquals(0,matcher.isMatch(BUFFER2,3));

  assertEquals(0,matcher.isMatch(BUFFER2,4));

  assertEquals(0,matcher.isMatch(BUFFER2,5));

  assertSame(StrMatcher.noneMatcher(),StrMatcher.stringMatcher(""));

  assertSame(StrMatcher.noneMatcher(),StrMatcher.stringMatcher(null));

}

Location: StrMatcherTest.java

Content: 

@Test public void testTabMatcher(){

  final StrMatcher matcher=StrMatcher.tabMatcher();

  assertSame(matcher,StrMatcher.tabMatcher());

  assertEquals(0,matcher.isMatch(BUFFER1,2));

  assertEquals(1,matcher.isMatch(BUFFER1,3));

  assertEquals(0,matcher.isMatch(BUFFER1,4));

}

Location: StrMatcherTest.java

Content: 

@Test public void testTrimMatcher(){

  final StrMatcher matcher=StrMatcher.trimMatcher();

  assertSame(matcher,StrMatcher.trimMatcher());

  assertEquals(0,matcher.isMatch(BUFFER1,2));

  assertEquals(1,matcher.isMatch(BUFFER1,3));

  assertEquals(0,matcher.isMatch(BUFFER1,4));

  assertEquals(1,matcher.isMatch(BUFFER1,5));

  assertEquals(0,matcher.isMatch(BUFFER1,6));

  assertEquals(1,matcher.isMatch(BUFFER1,7));

  assertEquals(1,matcher.isMatch(BUFFER1,8));

  assertEquals(1,matcher.isMatch(BUFFER1,9));

  assertEquals(1,matcher.isMatch(BUFFER1,10));

}

