Location: FailableIntConsumer.java

Content: 

/** 

 * Accepts the consumer.

 * @param value the parameter for the consumable to accept

 * @throws E Thrown when the consumer fails.

 */

void accept(int value) throws E ;

Location: FailableIntConsumer.java

Content: 

/** 

 * Returns a composed  {@code FailableIntConsumer} like {@link IntConsumer#andThen(IntConsumer)}.

 * @param after the operation to perform after this one.

 * @return a composed {@code FailableLongConsumer} like {@link IntConsumer#andThen(IntConsumer)}.

 * @throws NullPointerException if {@code after} is null

 */

default FailableIntConsumer<E> andThen(final FailableIntConsumer<E> after){

  Objects.requireNonNull(after);

  return (  final int t) -> {

    accept(t);

    after.accept(t);

  }

;

}

