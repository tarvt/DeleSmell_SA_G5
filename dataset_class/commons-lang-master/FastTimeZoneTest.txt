Location: FastTimeZoneTest.java

Content: 

@Test public void testBareGmt(){

  assertEquals(FastTimeZone.getGmtTimeZone(),FastTimeZone.getTimeZone(TimeZones.GMT_ID));

}

Location: FastTimeZoneTest.java

Content: 

@Test public void testGetGmtTimeZone(){

  assertEquals(0,FastTimeZone.getGmtTimeZone().getRawOffset());

}

Location: FastTimeZoneTest.java

Content: 

@Test public void testGmtPrefix(){

  assertEquals(HOURS_23,FastTimeZone.getGmtTimeZone("GMT+23:00").getRawOffset());

  assertEquals(-HOURS_23,FastTimeZone.getGmtTimeZone("GMT-23:00").getRawOffset());

}

Location: FastTimeZoneTest.java

Content: 

@Test public void testHoursColonMinutes(){

  assertEquals(HOURS_23,FastTimeZone.getGmtTimeZone("23:00").getRawOffset());

  assertEquals(HOURS_2,FastTimeZone.getGmtTimeZone("2:00").getRawOffset());

  assertEquals(MINUTES_59,FastTimeZone.getGmtTimeZone("00:59").getRawOffset());

  assertEquals(MINUTES_5,FastTimeZone.getGmtTimeZone("00:5").getRawOffset());

  assertEquals(HOURS_23 + MINUTES_59,FastTimeZone.getGmtTimeZone("23:59").getRawOffset());

  assertEquals(HOURS_2 + MINUTES_5,FastTimeZone.getGmtTimeZone("2:5").getRawOffset());

}

Location: FastTimeZoneTest.java

Content: 

@Test public void testHoursMinutes(){

  assertEquals(HOURS_23,FastTimeZone.getGmtTimeZone("2300").getRawOffset());

  assertEquals(HOURS_2,FastTimeZone.getGmtTimeZone("0200").getRawOffset());

  assertEquals(MINUTES_59,FastTimeZone.getGmtTimeZone("0059").getRawOffset());

  assertEquals(MINUTES_5,FastTimeZone.getGmtTimeZone("0005").getRawOffset());

  assertEquals(HOURS_23 + MINUTES_59,FastTimeZone.getGmtTimeZone("2359").getRawOffset());

  assertEquals(HOURS_2 + MINUTES_5,FastTimeZone.getGmtTimeZone("0205").getRawOffset());

}

Location: FastTimeZoneTest.java

Content: 

@Test public void testOlson(){

  assertEquals(TimeZone.getTimeZone("America/New_York"),FastTimeZone.getTimeZone("America/New_York"));

}

Location: FastTimeZoneTest.java

Content: 

@Test public void testSign(){

  assertEquals(HOURS_23,FastTimeZone.getGmtTimeZone("+23:00").getRawOffset());

  assertEquals(HOURS_2,FastTimeZone.getGmtTimeZone("+2:00").getRawOffset());

  assertEquals(-HOURS_23,FastTimeZone.getGmtTimeZone("-23:00").getRawOffset());

  assertEquals(-HOURS_2,FastTimeZone.getGmtTimeZone("-2:00").getRawOffset());

}

Location: FastTimeZoneTest.java

Content: 

@Test public void testUTC(){

  assertEquals(FastTimeZone.getGmtTimeZone(),FastTimeZone.getTimeZone("UTC"));

}

Location: FastTimeZoneTest.java

Content: 

@Test public void testZ(){

  assertEquals(FastTimeZone.getGmtTimeZone(),FastTimeZone.getTimeZone("Z"));

}

Location: FastTimeZoneTest.java

Content: 

@Test public void testZeroOffsetsReturnSingleton(){

  assertEquals(FastTimeZone.getGmtTimeZone(),FastTimeZone.getTimeZone("+0"));

  assertEquals(FastTimeZone.getGmtTimeZone(),FastTimeZone.getTimeZone("-0"));

}

