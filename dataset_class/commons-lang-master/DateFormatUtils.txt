Location: DateFormatUtils.java

Content: 

/** 

 * <p>DateFormatUtils instances should NOT be constructed in standard programming.</p> <p>This constructor is public to permit tools that require a JavaBean instance to operate.</p>

 */

public DateFormatUtils(){

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern using the UTC time zone.</p>

 * @param date  the date to format, not null

 * @param pattern  the pattern to use to format the date, not null

 * @return the formatted date

 */

public static String formatUTC(final Date date,final String pattern){

  return format(date,pattern,UTC_TIME_ZONE,null);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern using the UTC time zone.</p>

 * @param date  the date to format, not null

 * @param pattern  the pattern to use to format the date, not null

 * @param locale  the locale to use, may be {@code null}

 * @return the formatted date

 */

public static String formatUTC(final Date date,final String pattern,final Locale locale){

  return format(date,pattern,UTC_TIME_ZONE,locale);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern using the UTC time zone.</p>

 * @param millis  the date to format expressed in milliseconds

 * @param pattern  the pattern to use to format the date, not null

 * @return the formatted date

 */

public static String formatUTC(final long millis,final String pattern){

  return format(new Date(millis),pattern,UTC_TIME_ZONE,null);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern using the UTC time zone.</p>

 * @param millis  the date to format expressed in milliseconds

 * @param pattern  the pattern to use to format the date, not null

 * @param locale  the locale to use, may be {@code null}

 * @return the formatted date

 */

public static String formatUTC(final long millis,final String pattern,final Locale locale){

  return format(new Date(millis),pattern,UTC_TIME_ZONE,locale);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a calendar into a specific pattern.</p>

 * @param calendar  the calendar to format, not null

 * @param pattern  the pattern to use to format the calendar, not null

 * @return the formatted calendar

 * @see FastDateFormat#format(Calendar)

 * @since 2.4

 */

public static String format(final Calendar calendar,final String pattern){

  return format(calendar,pattern,null,null);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a calendar into a specific pattern in a locale.</p>

 * @param calendar  the calendar to format, not null

 * @param pattern  the pattern to use to format the calendar, not null

 * @param locale  the locale to use, may be {@code null}

 * @return the formatted calendar

 * @see FastDateFormat#format(Calendar)

 * @since 2.4

 */

public static String format(final Calendar calendar,final String pattern,final Locale locale){

  return format(calendar,pattern,null,locale);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a calendar into a specific pattern in a time zone.</p>

 * @param calendar  the calendar to format, not null

 * @param pattern  the pattern to use to format the calendar, not null

 * @param timeZone  the time zone  to use, may be {@code null}

 * @return the formatted calendar

 * @see FastDateFormat#format(Calendar)

 * @since 2.4

 */

public static String format(final Calendar calendar,final String pattern,final TimeZone timeZone){

  return format(calendar,pattern,timeZone,null);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a calendar into a specific pattern in a time zone  and locale.</p>

 * @param calendar  the calendar to format, not null

 * @param pattern  the pattern to use to format the calendar, not null

 * @param timeZone  the time zone  to use, may be {@code null}

 * @param locale  the locale to use, may be {@code null}

 * @return the formatted calendar

 * @see FastDateFormat#format(Calendar)

 * @since 2.4

 */

public static String format(final Calendar calendar,final String pattern,final TimeZone timeZone,final Locale locale){

  final FastDateFormat df=FastDateFormat.getInstance(pattern,timeZone,locale);

  return df.format(calendar);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern.</p>

 * @param date  the date to format, not null

 * @param pattern  the pattern to use to format the date, not null

 * @return the formatted date

 */

public static String format(final Date date,final String pattern){

  return format(date,pattern,null,null);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern in a locale.</p>

 * @param date  the date to format, not null

 * @param pattern  the pattern to use to format the date, not null

 * @param locale  the locale to use, may be {@code null}

 * @return the formatted date

 */

public static String format(final Date date,final String pattern,final Locale locale){

  return format(date,pattern,null,locale);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern in a time zone.</p>

 * @param date  the date to format, not null

 * @param pattern  the pattern to use to format the date, not null

 * @param timeZone  the time zone  to use, may be {@code null}

 * @return the formatted date

 */

public static String format(final Date date,final String pattern,final TimeZone timeZone){

  return format(date,pattern,timeZone,null);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern in a time zone  and locale.</p>

 * @param date  the date to format, not null

 * @param pattern  the pattern to use to format the date, not null, not null

 * @param timeZone  the time zone  to use, may be {@code null}

 * @param locale  the locale to use, may be {@code null}

 * @return the formatted date

 */

public static String format(final Date date,final String pattern,final TimeZone timeZone,final Locale locale){

  final FastDateFormat df=FastDateFormat.getInstance(pattern,timeZone,locale);

  return df.format(date);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern.</p>

 * @param millis  the date to format expressed in milliseconds

 * @param pattern  the pattern to use to format the date, not null

 * @return the formatted date

 */

public static String format(final long millis,final String pattern){

  return format(new Date(millis),pattern,null,null);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern in a locale.</p>

 * @param millis  the date to format expressed in milliseconds

 * @param pattern  the pattern to use to format the date, not null

 * @param locale  the locale to use, may be {@code null}

 * @return the formatted date

 */

public static String format(final long millis,final String pattern,final Locale locale){

  return format(new Date(millis),pattern,null,locale);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern in a time zone.</p>

 * @param millis  the time expressed in milliseconds

 * @param pattern  the pattern to use to format the date, not null

 * @param timeZone  the time zone  to use, may be {@code null}

 * @return the formatted date

 */

public static String format(final long millis,final String pattern,final TimeZone timeZone){

  return format(new Date(millis),pattern,timeZone,null);

}

Location: DateFormatUtils.java

Content: 

/** 

 * <p>Formats a date/time into a specific pattern in a time zone  and locale.</p>

 * @param millis  the date to format expressed in milliseconds

 * @param pattern  the pattern to use to format the date, not null

 * @param timeZone  the time zone  to use, may be {@code null}

 * @param locale  the locale to use, may be {@code null}

 * @return the formatted date

 */

public static String format(final long millis,final String pattern,final TimeZone timeZone,final Locale locale){

  return format(new Date(millis),pattern,timeZone,locale);

}

