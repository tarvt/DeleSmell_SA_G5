Location: CompositeFormatTest.java

Content: 

/** 

 * Ensures that the parse/format separation is correctly maintained.

 */

@Test public void testCompositeFormat(){

  final Format parser=new Format(){

    private static final long serialVersionUID=1L;

    @Override public StringBuffer format(    final Object obj,    final StringBuffer toAppendTo,    final FieldPosition pos){

      throw new UnsupportedOperationException("Not implemented");

    }

    @Override public Object parseObject(    final String source,    final ParsePosition pos){

      return null;

    }

  }

;

  final Format formatter=new Format(){

    private static final long serialVersionUID=1L;

    @Override public StringBuffer format(    final Object obj,    final StringBuffer toAppendTo,    final FieldPosition pos){

      return null;

    }

    @Override public Object parseObject(    final String source,    final ParsePosition pos){

      throw new UnsupportedOperationException("Not implemented");

    }

  }

;

  final CompositeFormat composite=new CompositeFormat(parser,formatter);

  composite.parseObject("",null);

  composite.format(new Object(),new StringBuffer(),null);

  assertEquals(parser,composite.getParser(),"Parser get method incorrectly implemented");

  assertEquals(formatter,composite.getFormatter(),"Formatter get method incorrectly implemented");

}

Location: CompositeFormatTest.java

Content: 

@Test public void testUsage() throws Exception {

  final Format f1=new SimpleDateFormat("MMddyyyy",Locale.ENGLISH);

  final Format f2=new SimpleDateFormat("MMMM d, yyyy",Locale.ENGLISH);

  final CompositeFormat c=new CompositeFormat(f1,f2);

  final String testString="January 3, 2005";

  assertEquals(testString,c.format(c.parseObject("01032005")));

  assertEquals(testString,c.reformat("01032005"));

}

