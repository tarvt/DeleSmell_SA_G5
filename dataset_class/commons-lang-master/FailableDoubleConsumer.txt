Location: FailableDoubleConsumer.java

Content: 

/** 

 * Accepts the consumer.

 * @param value the parameter for the consumable to accept

 * @throws E Thrown when the consumer fails.

 */

void accept(double value) throws E ;

Location: FailableDoubleConsumer.java

Content: 

/** 

 * Returns a composed  {@code FailableDoubleConsumer} like {@link DoubleConsumer#andThen(DoubleConsumer)}.

 * @param after the operation to perform after this one.

 * @return a composed {@code FailableDoubleConsumer} like {@link DoubleConsumer#andThen(DoubleConsumer)}.

 * @throws NullPointerException when {@code after} is null.

 */

default FailableDoubleConsumer<E> andThen(final FailableDoubleConsumer<E> after){

  Objects.requireNonNull(after);

  return (  final double t) -> {

    accept(t);

    after.accept(t);

  }

;

}

