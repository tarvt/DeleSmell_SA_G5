Location: NumericEntityUnescaper.java

Content: 

/** 

 * Whether the passed in option is currently set.

 * @param option to check state of

 * @return whether the option is set

 */

public boolean isSet(final OPTION option){

  return options != null && options.contains(option);

}

Location: NumericEntityUnescaper.java

Content: 

/** 

 * Create a UnicodeUnescaper. The constructor takes a list of options, only one type of which is currently available (whether to allow, error or ignore the semicolon on the end of a numeric entity to being missing). For example, to support numeric entities without a ';': new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.semiColonOptional) and to throw an IllegalArgumentException when they're missing: new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.errorIfNoSemiColon) Note that the default behavior is to ignore them.

 * @param options to apply to this unescaper

 */

public NumericEntityUnescaper(final OPTION... options){

  if (options.length > 0) {

    this.options=EnumSet.copyOf(Arrays.asList(options));

  }

 else {

    this.options=EnumSet.copyOf(Collections.singletonList(OPTION.semiColonRequired));

  }

}

