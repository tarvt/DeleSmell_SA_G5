Location: CloneFailedExceptionTest.java

Content: 

@Test public void testThrowingExceptionWithCause(){

  assertThrows(CloneFailedException.class,() -> {

    throw new CloneFailedException(generateCause());

  }

);

}

Location: CloneFailedExceptionTest.java

Content: 

@Test public void testThrowingExceptionWithMessage(){

  assertThrows(CloneFailedException.class,() -> {

    throw new CloneFailedException(EXCEPTION_MESSAGE);

  }

);

}

Location: CloneFailedExceptionTest.java

Content: 

@Test public void testThrowingInformativeException(){

  assertThrows(CloneFailedException.class,() -> {

    throw new CloneFailedException(EXCEPTION_MESSAGE,generateCause());

  }

);

}

Location: CloneFailedExceptionTest.java

Content: 

@Test public void testWithCauseAndMessage(){

  final Exception exception=new CloneFailedException(EXCEPTION_MESSAGE,generateCause());

  assertNotNull(exception);

  assertEquals(EXCEPTION_MESSAGE,exception.getMessage(),WRONG_EXCEPTION_MESSAGE);

  final Throwable cause=exception.getCause();

  assertNotNull(cause);

  assertEquals(CAUSE_MESSAGE,cause.getMessage(),WRONG_CAUSE_MESSAGE);

}

Location: CloneFailedExceptionTest.java

Content: 

@Test public void testWithoutCause(){

  final Exception exception=new CloneFailedException(EXCEPTION_MESSAGE);

  assertNotNull(exception);

  assertEquals(EXCEPTION_MESSAGE,exception.getMessage(),WRONG_EXCEPTION_MESSAGE);

  final Throwable cause=exception.getCause();

  assertNull(cause);

}

Location: CloneFailedExceptionTest.java

Content: 

@Test public void testWithoutMessage(){

  final Exception exception=new CloneFailedException(generateCause());

  assertNotNull(exception);

  assertNotNull(exception.getMessage());

  final Throwable cause=exception.getCause();

  assertNotNull(cause);

  assertEquals(CAUSE_MESSAGE,cause.getMessage(),WRONG_CAUSE_MESSAGE);

}

