Location: ThresholdCircuitBreaker.java

Content: 

/** 

 * Gets the threshold.

 * @return the threshold

 */

public long getThreshold(){

  return threshold;

}

Location: ThresholdCircuitBreaker.java

Content: 

/** 

 * {@inheritDoc}<p>If the threshold is zero, the circuit breaker will be in a permanent <em>open</em> state.</p>

 */

@Override public boolean incrementAndCheckState(final Long increment){

  if (threshold == 0) {

    open();

  }

  final long used=this.used.addAndGet(increment);

  if (used > threshold) {

    open();

  }

  return checkState();

}

Location: ThresholdCircuitBreaker.java

Content: 

/** 

 * <p>Creates a new instance of  {@code ThresholdCircuitBreaker} and initializes the threshold.</p>

 * @param threshold the threshold.

 */

public ThresholdCircuitBreaker(final long threshold){

  this.used=new AtomicLong(INITIAL_COUNT);

  this.threshold=threshold;

}

