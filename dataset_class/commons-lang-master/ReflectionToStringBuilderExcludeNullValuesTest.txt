Location: ReflectionToStringBuilderExcludeNullValuesTest.java

Content: 

@Test public void test_ConstructorOption(){

  ReflectionToStringBuilder builder=new ReflectionToStringBuilder(BOTH_NON_NULL,null,null,null,false,false,true);

  assertTrue(builder.isExcludeNullValues());

  String toString=builder.toString();

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  assertTrue(toString.contains(STRING_FIELD_NAME));

  builder=new ReflectionToStringBuilder(FIRST_NULL,null,null,null,false,false,true);

  toString=builder.toString();

  assertFalse(toString.contains(INTEGER_FIELD_NAME));

  assertTrue(toString.contains(STRING_FIELD_NAME));

  builder=new ReflectionToStringBuilder(SECOND_NULL,null,null,null,false,false,true);

  toString=builder.toString();

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  assertFalse(toString.contains(STRING_FIELD_NAME));

  builder=new ReflectionToStringBuilder(BOTH_NULL,null,null,null,false,false,true);

  toString=builder.toString();

  assertFalse(toString.contains(INTEGER_FIELD_NAME));

  assertFalse(toString.contains(STRING_FIELD_NAME));

}

Location: ReflectionToStringBuilderExcludeNullValuesTest.java

Content: 

@Test public void test_ConstructorOptionNormal(){

  final ReflectionToStringBuilder builder=new ReflectionToStringBuilder(BOTH_NULL,null,null,null,false,false,false);

  assertFalse(builder.isExcludeNullValues());

  String toString=builder.toString();

  assertTrue(toString.contains(STRING_FIELD_NAME));

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  ReflectionToStringBuilder oldBuilder=new ReflectionToStringBuilder(BOTH_NULL);

  toString=oldBuilder.toString();

  assertTrue(toString.contains(STRING_FIELD_NAME));

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  oldBuilder=new ReflectionToStringBuilder(BOTH_NULL,null,null,null,false,false);

  toString=oldBuilder.toString();

  assertTrue(toString.contains(STRING_FIELD_NAME));

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  oldBuilder=new ReflectionToStringBuilder(BOTH_NULL,null,null);

  toString=oldBuilder.toString();

  assertTrue(toString.contains(STRING_FIELD_NAME));

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

}

Location: ReflectionToStringBuilderExcludeNullValuesTest.java

Content: 

@Test public void test_ConstructorOption_ExcludeNull(){

  ReflectionToStringBuilder builder=new ReflectionToStringBuilder(BOTH_NULL,null,null,null,false,false,false);

  builder.setExcludeNullValues(true);

  assertTrue(builder.isExcludeNullValues());

  String toString=builder.toString();

  assertFalse(toString.contains(STRING_FIELD_NAME));

  assertFalse(toString.contains(INTEGER_FIELD_NAME));

  builder=new ReflectionToStringBuilder(BOTH_NULL,null,null,null,false,false,true);

  toString=builder.toString();

  assertFalse(toString.contains(STRING_FIELD_NAME));

  assertFalse(toString.contains(INTEGER_FIELD_NAME));

  final ReflectionToStringBuilder oldBuilder=new ReflectionToStringBuilder(BOTH_NULL);

  oldBuilder.setExcludeNullValues(true);

  assertTrue(oldBuilder.isExcludeNullValues());

  toString=oldBuilder.toString();

  assertFalse(toString.contains(STRING_FIELD_NAME));

  assertFalse(toString.contains(INTEGER_FIELD_NAME));

}

Location: ReflectionToStringBuilderExcludeNullValuesTest.java

Content: 

@Test public void test_excludeNull(){

  String toString=ReflectionToStringBuilder.toString(BOTH_NON_NULL,null,false,false,true,null);

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  assertTrue(toString.contains(STRING_FIELD_NAME));

  toString=ReflectionToStringBuilder.toString(FIRST_NULL,null,false,false,true,null);

  assertFalse(toString.contains(INTEGER_FIELD_NAME));

  assertTrue(toString.contains(STRING_FIELD_NAME));

  toString=ReflectionToStringBuilder.toString(SECOND_NULL,null,false,false,true,null);

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  assertFalse(toString.contains(STRING_FIELD_NAME));

  toString=ReflectionToStringBuilder.toString(BOTH_NULL,null,false,false,true,null);

  assertFalse(toString.contains(INTEGER_FIELD_NAME));

  assertFalse(toString.contains(STRING_FIELD_NAME));

}

Location: ReflectionToStringBuilderExcludeNullValuesTest.java

Content: 

@Test public void test_NonExclude(){

  String toString=ReflectionToStringBuilder.toString(BOTH_NON_NULL,null,false,false,false,null);

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  assertTrue(toString.contains(STRING_FIELD_NAME));

  toString=ReflectionToStringBuilder.toString(FIRST_NULL,null,false,false,false,null);

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  assertTrue(toString.contains(STRING_FIELD_NAME));

  toString=ReflectionToStringBuilder.toString(SECOND_NULL,null,false,false,false,null);

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  assertTrue(toString.contains(STRING_FIELD_NAME));

  toString=ReflectionToStringBuilder.toString(BOTH_NULL,null,false,false,false,null);

  assertTrue(toString.contains(INTEGER_FIELD_NAME));

  assertTrue(toString.contains(STRING_FIELD_NAME));

}

