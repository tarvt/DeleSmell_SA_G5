Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a  {@code Calendar} object.</p>The TimeZone set on the Calendar is only used to adjust the time offset. The TimeZone specified during the construction of the Parser will determine the TimeZone used in the formatted string.

 * @param calendar  the calendar to format.

 * @return the formatted string

 */

String format(Calendar calendar);

Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a  {@code Calendar} object into the supplied {@code Appendable}.</p> The TimeZone set on the Calendar is only used to adjust the time offset. The TimeZone specified during the construction of the Parser will determine the TimeZone used in the formatted string.

 * @param calendar  the calendar to format

 * @param buf  the buffer to format into

 * @param < B > the Appendable class type, usually StringBuilder or StringBuffer.

 * @return the specified string buffer

 * @since 3.5

 */

<B extends Appendable>B format(Calendar calendar,B buf);

Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a  {@code Calendar} object into the supplied {@code StringBuffer}.</p> The TimeZone set on the Calendar is only used to adjust the time offset. The TimeZone specified during the construction of the Parser will determine the TimeZone used in the formatted string.

 * @param calendar  the calendar to format

 * @param buf  the buffer to format into

 * @return the specified string buffer

 * @deprecated Use {{@link #format(Calendar,Appendable)}.

 */

@Deprecated StringBuffer format(Calendar calendar,StringBuffer buf);

Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a  {@code Date} object using a {@code GregorianCalendar}.</p>

 * @param date  the date to format

 * @return the formatted string

 */

String format(Date date);

Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a  {@code Date} object into thesupplied  {@code Appendable} using a {@code GregorianCalendar}.</p>

 * @param date  the date to format

 * @param buf  the buffer to format into

 * @param < B > the Appendable class type, usually StringBuilder or StringBuffer.

 * @return the specified string buffer

 * @since 3.5

 */

<B extends Appendable>B format(Date date,B buf);

Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a  {@code Date} object into thesupplied  {@code StringBuffer} using a {@code GregorianCalendar}.</p>

 * @param date  the date to format

 * @param buf  the buffer to format into

 * @return the specified string buffer

 * @deprecated Use {{@link #format(Date,Appendable)}.

 */

@Deprecated StringBuffer format(Date date,StringBuffer buf);

Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a millisecond  {@code long} value.</p>

 * @param millis  the millisecond value to format

 * @return the formatted string

 * @since 2.1

 */

String format(long millis);

Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a millisecond  {@code long} value into thesupplied  {@code Appendable}.</p>

 * @param millis  the millisecond value to format

 * @param buf  the buffer to format into

 * @param < B > the Appendable class type, usually StringBuilder or StringBuffer.

 * @return the specified string buffer

 * @since 3.5

 */

<B extends Appendable>B format(long millis,B buf);

Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a millisecond  {@code long} value into thesupplied  {@code StringBuffer}.</p>

 * @param millis  the millisecond value to format

 * @param buf  the buffer to format into

 * @return the specified string buffer

 * @deprecated Use {{@link #format(long,Appendable)}.

 */

@Deprecated StringBuffer format(long millis,StringBuffer buf);

Location: DatePrinter.java

Content: 

/** 

 * <p>Formats a  {@code Date},  {@code Calendar} or{@code Long} (milliseconds) object.</p>

 * @param obj  the object to format

 * @param toAppendTo  the buffer to append to

 * @param pos  the position - ignored

 * @return the buffer passed in

 * @see java.text.DateFormat#format(Object,StringBuffer,FieldPosition)

 */

StringBuffer format(Object obj,StringBuffer toAppendTo,FieldPosition pos);

