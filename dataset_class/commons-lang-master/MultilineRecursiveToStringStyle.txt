Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void appendDetail(final StringBuffer buffer,final String fieldName,final boolean[] array){

  spaces+=INDENT;

  resetIndent();

  super.appendDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void appendDetail(final StringBuffer buffer,final String fieldName,final byte[] array){

  spaces+=INDENT;

  resetIndent();

  super.appendDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void appendDetail(final StringBuffer buffer,final String fieldName,final char[] array){

  spaces+=INDENT;

  resetIndent();

  super.appendDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void appendDetail(final StringBuffer buffer,final String fieldName,final double[] array){

  spaces+=INDENT;

  resetIndent();

  super.appendDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void appendDetail(final StringBuffer buffer,final String fieldName,final float[] array){

  spaces+=INDENT;

  resetIndent();

  super.appendDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void appendDetail(final StringBuffer buffer,final String fieldName,final int[] array){

  spaces+=INDENT;

  resetIndent();

  super.appendDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void appendDetail(final StringBuffer buffer,final String fieldName,final long[] array){

  spaces+=INDENT;

  resetIndent();

  super.appendDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void appendDetail(final StringBuffer buffer,final String fieldName,final Object[] array){

  spaces+=INDENT;

  resetIndent();

  super.appendDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void appendDetail(final StringBuffer buffer,final String fieldName,final short[] array){

  spaces+=INDENT;

  resetIndent();

  super.appendDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

/** 

 * Constructor.

 */

public MultilineRecursiveToStringStyle(){

  hongshuai();

  setArrayStart("{" + System.lineSeparator() + spacer(spaces));

  setArraySeparator("," + System.lineSeparator() + spacer(spaces));

  setArrayEnd(System.lineSeparator() + spacer(spaces - INDENT) + "}");

  setContentStart("[" + System.lineSeparator() + spacer(spaces));

  setFieldSeparator("," + System.lineSeparator() + spacer(spaces));

  setContentEnd(System.lineSeparator() + spacer(spaces - INDENT) + "]");

}

Location: MultilineRecursiveToStringStyle.java

Content: 

@Override protected void reflectionAppendArrayDetail(final StringBuffer buffer,final String fieldName,final Object array){

  spaces+=INDENT;

  resetIndent();

  super.reflectionAppendArrayDetail(buffer,fieldName,array);

  spaces-=INDENT;

  resetIndent();

}

Location: MultilineRecursiveToStringStyle.java

Content: 

/** 

 * Creates a StringBuilder responsible for the indenting.

 * @param spaces how far to indent

 * @return a StringBuilder with {spaces} leading space characters.

 */

private StringBuilder spacer(final int spaces){

  final StringBuilder sb=new StringBuilder();

  for (int i=0; i < spaces; i++) {

    sb.append(" ");

  }

  return sb;

}

