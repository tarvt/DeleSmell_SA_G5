Location: ArrayUtilsSetTest.java

Content: 

@Test public void testSetAll_IntFunction(){

  final IntFunction<?> nullIntFunction=null;

  assertNull(ArrayUtils.setAll(null,nullIntFunction));

  assertArrayEquals(null,ArrayUtils.setAll(null,nullIntFunction));

  assertArrayEquals(ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY,ArrayUtils.setAll(ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY,nullIntFunction));

  assertArrayEquals(ArrayUtils.EMPTY_OBJECT_ARRAY,ArrayUtils.setAll(ArrayUtils.EMPTY_OBJECT_ARRAY,nullIntFunction));

  final Integer[] array=new Integer[10];

  final Integer[] array2=ArrayUtils.setAll(array,Integer::valueOf);

  assertSame(array,array2);

  for (int i=0; i < array.length; i++) {

    assertEquals(i,array[i].intValue());

  }

}

Location: ArrayUtilsSetTest.java

Content: 

@Test public void testSetAll_Suppiler(){

  final Supplier<?> nullSupplier=null;

  assertNull(ArrayUtils.setAll(null,nullSupplier));

  assertArrayEquals(null,ArrayUtils.setAll(null,nullSupplier));

  assertArrayEquals(ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY,ArrayUtils.setAll(ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY,nullSupplier));

  assertArrayEquals(ArrayUtils.EMPTY_OBJECT_ARRAY,ArrayUtils.setAll(ArrayUtils.EMPTY_OBJECT_ARRAY,nullSupplier));

  final String[] array=new String[10];

  final String[] array2=ArrayUtils.setAll(array,() -> StringUtils.EMPTY);

  assertSame(array,array2);

  for (  final String s : array) {

    assertEquals(StringUtils.EMPTY,s);

  }

}

