Location: ThresholdCircuitBreakerTest.java

Content: 

/** 

 * Tests that closing a  {@code ThresholdCircuitBreaker} resets the internal counter.

 */

@Test public void testClosingThresholdCircuitBreaker(){

  final ThresholdCircuitBreaker circuit=new ThresholdCircuitBreaker(threshold);

  circuit.incrementAndCheckState(9L);

  circuit.close();

  assertFalse(circuit.incrementAndCheckState(9L),"Internal counter was not reset back to zero");

}

Location: ThresholdCircuitBreakerTest.java

Content: 

/** 

 * Tests that we can get the threshold value correctly.

 */

@Test public void testGettingThreshold(){

  final ThresholdCircuitBreaker circuit=new ThresholdCircuitBreaker(threshold);

  assertEquals(Long.valueOf(threshold),Long.valueOf(circuit.getThreshold()),"Wrong value of threshold");

}

Location: ThresholdCircuitBreakerTest.java

Content: 

/** 

 * Tests that the threshold is working as expected when incremented and no exception is thrown.

 */

@Test public void testThreshold(){

  final ThresholdCircuitBreaker circuit=new ThresholdCircuitBreaker(threshold);

  circuit.incrementAndCheckState(9L);

  assertFalse(circuit.incrementAndCheckState(1L),"Circuit opened before reaching the threshold");

}

Location: ThresholdCircuitBreakerTest.java

Content: 

/** 

 * Tests that exceeding the threshold raises an exception.

 */

@Test public void testThresholdCircuitBreakingException(){

  final ThresholdCircuitBreaker circuit=new ThresholdCircuitBreaker(threshold);

  circuit.incrementAndCheckState(9L);

  assertTrue(circuit.incrementAndCheckState(2L),"The circuit was supposed to be open after increment above the threshold");

}

Location: ThresholdCircuitBreakerTest.java

Content: 

/** 

 * Test that when threshold is zero, the circuit breaker is always open.

 */

@Test public void testThresholdEqualsZero(){

  final ThresholdCircuitBreaker circuit=new ThresholdCircuitBreaker(zeroThreshold);

  assertTrue(circuit.incrementAndCheckState(0L),"When the threshold is zero, the circuit is supposed to be always open");

}

