Location: RegExUtilsTest.java

Content: 

@Test public void testRemoveAll_StringPattern(){

  assertNull(RegExUtils.removeAll(null,Pattern.compile("")));

  assertEquals("any",RegExUtils.removeAll("any",(Pattern)null));

  assertEquals("any",RegExUtils.removeAll("any",Pattern.compile("")));

  assertEquals("",RegExUtils.removeAll("any",Pattern.compile(".*")));

  assertEquals("",RegExUtils.removeAll("any",Pattern.compile(".+")));

  assertEquals("",RegExUtils.removeAll("any",Pattern.compile(".?")));

  assertEquals("A\nB",RegExUtils.removeAll("A<__>\n<__>B",Pattern.compile("<.*>")));

  assertEquals("AB",RegExUtils.removeAll("A<__>\n<__>B",Pattern.compile("(?s)<.*>")));

  assertEquals("ABC123",RegExUtils.removeAll("ABCabc123abc",Pattern.compile("[a-z]")));

  assertEquals("AB",RegExUtils.removeAll("A<__>\n<__>B",Pattern.compile("<.*>",Pattern.DOTALL)));

  assertEquals("AB",RegExUtils.removeAll("A<__>\\n<__>B",Pattern.compile("<.*>")));

  assertEquals("",RegExUtils.removeAll("<A>x\\ny</A>",Pattern.compile("<A>.*</A>")));

  assertEquals("",RegExUtils.removeAll("<A>\nxy\n</A>",Pattern.compile("<A>.*</A>",Pattern.DOTALL)));

}

Location: RegExUtilsTest.java

Content: 

@Test public void testRemoveFirst_StringPattern(){

  assertNull(RegExUtils.removeFirst(null,Pattern.compile("")));

  assertEquals("any",RegExUtils.removeFirst("any",(Pattern)null));

  assertEquals("any",RegExUtils.removeFirst("any",Pattern.compile("")));

  assertEquals("",RegExUtils.removeFirst("any",Pattern.compile(".*")));

  assertEquals("",RegExUtils.removeFirst("any",Pattern.compile(".+")));

  assertEquals("bc",RegExUtils.removeFirst("abc",Pattern.compile(".?")));

  assertEquals("A\n<__>B",RegExUtils.removeFirst("A<__>\n<__>B",Pattern.compile("<.*>")));

  assertEquals("AB",RegExUtils.removeFirst("A<__>\n<__>B",Pattern.compile("(?s)<.*>")));

  assertEquals("ABCbc123",RegExUtils.removeFirst("ABCabc123",Pattern.compile("[a-z]")));

  assertEquals("ABC123abc",RegExUtils.removeFirst("ABCabc123abc",Pattern.compile("[a-z]+")));

}

Location: RegExUtilsTest.java

Content: 

@Test public void testReplaceAll_StringPatternString(){

  assertNull(RegExUtils.replaceAll(null,Pattern.compile(""),""));

  assertEquals("any",RegExUtils.replaceAll("any",(Pattern)null,""));

  assertEquals("any",RegExUtils.replaceAll("any",Pattern.compile(""),null));

  assertEquals("zzz",RegExUtils.replaceAll("",Pattern.compile(""),"zzz"));

  assertEquals("zzz",RegExUtils.replaceAll("",Pattern.compile(".*"),"zzz"));

  assertEquals("",RegExUtils.replaceAll("",Pattern.compile(".+"),"zzz"));

  assertEquals("ZZaZZbZZcZZ",RegExUtils.replaceAll("abc",Pattern.compile(""),"ZZ"));

  assertEquals("z\nz",RegExUtils.replaceAll("<__>\n<__>",Pattern.compile("<.*>"),"z"));

  assertEquals("z",RegExUtils.replaceAll("<__>\n<__>",Pattern.compile("(?s)<.*>"),"z"));

  assertEquals("z",RegExUtils.replaceAll("<__>\n<__>",Pattern.compile("<.*>",Pattern.DOTALL),"z"));

  assertEquals("z",RegExUtils.replaceAll("<__>\\n<__>",Pattern.compile("<.*>"),"z"));

  assertEquals("X",RegExUtils.replaceAll("<A>\nxy\n</A>",Pattern.compile("<A>.*</A>",Pattern.DOTALL),"X"));

  assertEquals("ABC___123",RegExUtils.replaceAll("ABCabc123",Pattern.compile("[a-z]"),"_"));

  assertEquals("ABC_123",RegExUtils.replaceAll("ABCabc123",Pattern.compile("[^A-Z0-9]+"),"_"));

  assertEquals("ABC123",RegExUtils.replaceAll("ABCabc123",Pattern.compile("[^A-Z0-9]+"),""));

  assertEquals("Lorem_ipsum_dolor_sit",RegExUtils.replaceAll("Lorem ipsum  dolor   sit",Pattern.compile("( +)([a-z]+)"),"_$2"));

}

Location: RegExUtilsTest.java

Content: 

@Test public void testReplaceFirst_StringPatternString(){

  assertNull(RegExUtils.replaceFirst(null,Pattern.compile(""),""));

  assertEquals("any",RegExUtils.replaceFirst("any",(Pattern)null,""));

  assertEquals("any",RegExUtils.replaceFirst("any",Pattern.compile(""),null));

  assertEquals("zzz",RegExUtils.replaceFirst("",Pattern.compile(""),"zzz"));

  assertEquals("zzz",RegExUtils.replaceFirst("",Pattern.compile(".*"),"zzz"));

  assertEquals("",RegExUtils.replaceFirst("",Pattern.compile(".+"),"zzz"));

  assertEquals("ZZabc",RegExUtils.replaceFirst("abc",Pattern.compile(""),"ZZ"));

  assertEquals("z\n<__>",RegExUtils.replaceFirst("<__>\n<__>",Pattern.compile("<.*>"),"z"));

  assertEquals("z",RegExUtils.replaceFirst("<__>\n<__>",Pattern.compile("(?s)<.*>"),"z"));

  assertEquals("ABC_bc123",RegExUtils.replaceFirst("ABCabc123",Pattern.compile("[a-z]"),"_"));

  assertEquals("ABC_123abc",RegExUtils.replaceFirst("ABCabc123abc",Pattern.compile("[^A-Z0-9]+"),"_"));

  assertEquals("ABC123abc",RegExUtils.replaceFirst("ABCabc123abc",Pattern.compile("[^A-Z0-9]+"),""));

  assertEquals("Lorem_ipsum  dolor   sit",RegExUtils.replaceFirst("Lorem ipsum  dolor   sit",Pattern.compile("( +)([a-z]+)"),"_$2"));

}

