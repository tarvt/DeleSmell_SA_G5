Location: UncheckedFuture.java

Content: 

/** 

 * Maps the given instances as unchecked.

 * @param < T > The result type returned by the Futures' {@link #get()} and {@link #get(long,TimeUnit)} methods.

 * @param futures The Futures to uncheck.

 * @return a new stream.

 */

static <T>Stream<UncheckedFuture<T>> map(final Collection<Future<T>> futures){

  return futures.stream().map(UncheckedFuture::on);

}

Location: UncheckedFuture.java

Content: 

/** 

 * Maps the given instances as unchecked.

 * @param < T > The result type returned by the Futures' {@link #get()} and {@link #get(long,TimeUnit)} methods.

 * @param futures The Futures to uncheck.

 * @return a new collection.

 */

static <T>Collection<UncheckedFuture<T>> on(final Collection<Future<T>> futures){

  return map(futures).collect(Collectors.toList());

}

Location: UncheckedFuture.java

Content: 

/** 

 * Creates a new instance on the given Future.

 * @param < T > The result type returned by this Future's {@link #get()} and {@link #get(long,TimeUnit)} methods.

 * @param future The Future to uncheck.

 * @return a new instance.

 */

static <T>UncheckedFuture<T> on(final Future<T> future){

  return new UncheckedFutureImpl<>(future);

}

