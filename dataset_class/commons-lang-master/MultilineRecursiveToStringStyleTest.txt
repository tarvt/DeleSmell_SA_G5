Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void boolArray(){

  final WithArrays wa=new WithArrays();

  wa.boolArray=new boolean[]{true,false,true};

  final String exp=getClassPrefix(wa) + "[" + BR+ "  boolArray={"+ BR+ "    true,"+ BR+ "    false,"+ BR+ "    true"+ BR+ "  },"+ BR+ "  charArray=<null>,"+ BR+ "  doubleArray=<null>,"+ BR+ "  intArray=<null>,"+ BR+ "  longArray=<null>,"+ BR+ "  stringArray=<null>"+ BR+ "]";

  assertEquals(exp,toString(wa));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void charArray(){

  final WithArrays wa=new WithArrays();

  wa.charArray=new char[]{'a','A'};

  final String exp=getClassPrefix(wa) + "[" + BR+ "  boolArray=<null>,"+ BR+ "  charArray={"+ BR+ "    a,"+ BR+ "    A"+ BR+ "  },"+ BR+ "  doubleArray=<null>,"+ BR+ "  intArray=<null>,"+ BR+ "  longArray=<null>,"+ BR+ "  stringArray=<null>"+ BR+ "]";

  assertEquals(exp,toString(wa));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void doubleArray(){

  final WithArrays wa=new WithArrays();

  wa.doubleArray=new double[]{1,2};

  final String exp=getClassPrefix(wa) + "[" + BR+ "  boolArray=<null>,"+ BR+ "  charArray=<null>,"+ BR+ "  doubleArray={"+ BR+ "    1.0,"+ BR+ "    2.0"+ BR+ "  },"+ BR+ "  intArray=<null>,"+ BR+ "  longArray=<null>,"+ BR+ "  stringArray=<null>"+ BR+ "]";

  assertEquals(exp,toString(wa));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

private String getClassPrefix(final Object object){

  return object.getClass().getName() + "@" + Integer.toHexString(System.identityHashCode(object));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void intArray(){

  final WithArrays wa=new WithArrays();

  wa.intArray=new int[]{1,2};

  final String exp=getClassPrefix(wa) + "[" + BR+ "  boolArray=<null>,"+ BR+ "  charArray=<null>,"+ BR+ "  doubleArray=<null>,"+ BR+ "  intArray={"+ BR+ "    1,"+ BR+ "    2"+ BR+ "  },"+ BR+ "  longArray=<null>,"+ BR+ "  stringArray=<null>"+ BR+ "]";

  assertEquals(exp,toString(wa));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void longArray(){

  final WithArrays wa=new WithArrays();

  wa.longArray=new long[]{1L,2L};

  final String exp=getClassPrefix(wa) + "[" + BR+ "  boolArray=<null>,"+ BR+ "  charArray=<null>,"+ BR+ "  doubleArray=<null>,"+ BR+ "  intArray=<null>,"+ BR+ "  longArray={"+ BR+ "    1,"+ BR+ "    2"+ BR+ "  },"+ BR+ "  stringArray=<null>"+ BR+ "]";

  assertEquals(exp,toString(wa));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void nestedAndArray(){

  final Account acc=new Account();

  final Transaction tx1=new Transaction("2014.10.14",100);

  final Transaction tx2=new Transaction("2014.10.15",50);

  acc.transactions.add(tx1);

  acc.transactions.add(tx2);

  final String expected=getClassPrefix(acc) + "[" + BR+ "  owner=<null>,"+ BR+ "  transactions="+ getClassPrefix(acc.transactions)+ "{"+ BR+ "    "+ getClassPrefix(tx1)+ "["+ BR+ "      amount=100.0,"+ BR+ "      date=2014.10.14"+ BR+ "    ],"+ BR+ "    "+ getClassPrefix(tx2)+ "["+ BR+ "      amount=50.0,"+ BR+ "      date=2014.10.15"+ BR+ "    ]"+ BR+ "  }"+ BR+ "]";

  assertEquals(expected,toString(acc));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void nestedElements(){

  final Customer customer=new Customer("Douglas Adams");

  final Bank bank=new Bank("ASF Bank");

  customer.bank=bank;

  final String exp=getClassPrefix(customer) + "[" + BR+ "  accounts=<null>,"+ BR+ "  bank="+ getClassPrefix(bank)+ "["+ BR+ "    name=ASF Bank"+ BR+ "  ],"+ BR+ "  name=Douglas Adams"+ BR+ "]";

  assertEquals(exp,toString(customer));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void noArray(){

  final WithArrays wa=new WithArrays();

  final String exp=getClassPrefix(wa) + "[" + BR+ "  boolArray=<null>,"+ BR+ "  charArray=<null>,"+ BR+ "  doubleArray=<null>,"+ BR+ "  intArray=<null>,"+ BR+ "  longArray=<null>,"+ BR+ "  stringArray=<null>"+ BR+ "]";

  assertEquals(exp,toString(wa));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void simpleObject(){

  final Transaction tx=new Transaction("2014.10.15",100);

  final String expected=getClassPrefix(tx) + "[" + BR+ "  amount=100.0,"+ BR+ "  date=2014.10.15"+ BR+ "]";

  assertEquals(expected,toString(tx));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void stringArray(){

  final WithArrays wa=new WithArrays();

  wa.stringArray=new String[]{"a","A"};

  final String exp=getClassPrefix(wa) + "[" + BR+ "  boolArray=<null>,"+ BR+ "  charArray=<null>,"+ BR+ "  doubleArray=<null>,"+ BR+ "  intArray=<null>,"+ BR+ "  longArray=<null>,"+ BR+ "  stringArray={"+ BR+ "    a,"+ BR+ "    A"+ BR+ "  }"+ BR+ "]";

  assertEquals(exp,toString(wa));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

@Test public void testLANG1319(){

  final String[] stringArray={"1","2"};

  final String exp=getClassPrefix(stringArray) + "[" + BR+ "  {"+ BR+ "    1,"+ BR+ "    2"+ BR+ "  }"+ BR+ "]";

  assertEquals(exp,toString(stringArray));

}

Location: MultilineRecursiveToStringStyleTest.java

Content: 

private String toString(final Object object){

  return new ReflectionToStringBuilder(object,new MultilineRecursiveToStringStyle()).toString();

}

