Location: MutablePair.java

Content: 

/** 

 * Create a new pair instance of two nulls.

 */

public MutablePair(){

}

Location: MutablePair.java

Content: 

/** 

 * Create a new pair instance.

 * @param left  the left value, may be null

 * @param right  the right value, may be null

 */

public MutablePair(final L left,final R right){

  this.left=left;

  this.right=right;

}

Location: MutablePair.java

Content: 

/** 

 * <p>Creates a mutable pair of two objects inferring the generic types.</p> <p>This factory allows the pair to be created using inference to obtain the generic types.</p>

 * @param < L > the left element type

 * @param < R > the right element type

 * @param left  the left element, may be null

 * @param right  the right element, may be null

 * @return a pair formed from the two parameters, not null

 */

public static <L,R>MutablePair<L,R> of(final L left,final R right){

  return new MutablePair<>(left,right);

}

Location: MutablePair.java

Content: 

/** 

 * <p>Creates a mutable pair from an existing pair.</p> <p>This factory allows the pair to be created using inference to obtain the generic types.</p>

 * @param < L > the left element type

 * @param < R > the right element type

 * @param pair the existing pair.

 * @return a pair formed from the two parameters, not null

 */

public static <L,R>MutablePair<L,R> of(final Map.Entry<L,R> pair){

  final L left;

  final R right;

  if (pair != null) {

    left=pair.getKey();

    right=pair.getValue();

  }

 else {

    left=null;

    right=null;

  }

  return new MutablePair<>(left,right);

}

Location: MutablePair.java

Content: 

/** 

 * Sets the left element of the pair.

 * @param left  the new value of the left element, may be null

 */

public void setLeft(final L left){

  this.left=left;

}

Location: MutablePair.java

Content: 

/** 

 * Sets the right element of the pair.

 * @param right  the new value of the right element, may be null

 */

public void setRight(final R right){

  this.right=right;

}

Location: MutablePair.java

Content: 

/** 

 * Sets the  {@code Map.Entry} value.This sets the right element of the pair.

 * @param value  the right value to set, not null

 * @return the old value for the right element

 */

@Override public R setValue(final R value){

  final R result=getRight();

  setRight(value);

  return result;

}

