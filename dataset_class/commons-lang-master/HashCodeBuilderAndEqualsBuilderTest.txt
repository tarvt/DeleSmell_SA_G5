Location: HashCodeBuilderAndEqualsBuilderTest.java

Content: 

/** 

 * Asserts that if  {@code lhs} equals {@code rhs}then their hash codes MUST be identical.

 * @param lhs The Left-Hand-Side of the equals test

 * @param rhs The Right-Hand-Side of the equals test

 * @param testTransients whether to test transient fields

 */

private void assertEqualsAndHashCodeContract(final Object lhs,final Object rhs,final boolean testTransients){

  if (EqualsBuilder.reflectionEquals(lhs,rhs,testTransients)) {

    assertEquals(HashCodeBuilder.reflectionHashCode(lhs,testTransients),HashCodeBuilder.reflectionHashCode(rhs,testTransients));

    assertEquals(HashCodeBuilder.reflectionHashCode(lhs,testTransients),HashCodeBuilder.reflectionHashCode(rhs,testTransients));

    assertEquals(HashCodeBuilder.reflectionHashCode(lhs,testTransients),HashCodeBuilder.reflectionHashCode(rhs,testTransients));

  }

}

Location: HashCodeBuilderAndEqualsBuilderTest.java

Content: 

@Test public void testFixture(){

  testFixture(false);

}

Location: HashCodeBuilderAndEqualsBuilderTest.java

Content: 

@Test public void testFixtureWithTransients(){

  testFixture(true);

}

Location: HashCodeBuilderAndEqualsBuilderTest.java

Content: 

private void testFixture(final boolean testTransients){

  assertEqualsAndHashCodeContract(new TestFixture(2,'c',"Test",(short)2),new TestFixture(2,'c',"Test",(short)2),testTransients);

  assertEqualsAndHashCodeContract(new AllTransientFixture(2,'c',"Test",(short)2),new AllTransientFixture(2,'c',"Test",(short)2),testTransients);

  assertEqualsAndHashCodeContract(new SubTestFixture(2,'c',"Test",(short)2,"Same"),new SubTestFixture(2,'c',"Test",(short)2,"Same"),testTransients);

  assertEqualsAndHashCodeContract(new SubAllTransientFixture(2,'c',"Test",(short)2,"Same"),new SubAllTransientFixture(2,'c',"Test",(short)2,"Same"),testTransients);

}

Location: HashCodeBuilderAndEqualsBuilderTest.java

Content: 

@Test public void testInteger(){

  testInteger(false);

}

Location: HashCodeBuilderAndEqualsBuilderTest.java

Content: 

@Test public void testIntegerWithTransients(){

  testInteger(true);

}

Location: HashCodeBuilderAndEqualsBuilderTest.java

Content: 

private void testInteger(final boolean testTransients){

  final Integer i1=Integer.valueOf(12345);

  final Integer i2=Integer.valueOf(12345);

  assertEqualsAndHashCodeContract(i1,i2,testTransients);

}

