Location: FailableConsumer.java

Content: 

/** 

 * Accepts the consumer.

 * @param object the parameter for the consumable to accept

 * @throws E Thrown when the consumer fails.

 */

void accept(T object) throws E ;

Location: FailableConsumer.java

Content: 

/** 

 * Returns a composed  {@code Consumer} like {@link Consumer#andThen(Consumer)}.

 * @param after the operation to perform after this operation

 * @return a composed {@code Consumer} like {@link Consumer#andThen(Consumer)}.

 * @throws NullPointerException when {@code after} is null

 */

default FailableConsumer<T,E> andThen(final FailableConsumer<? super T,E> after){

  Objects.requireNonNull(after);

  return (  final T t) -> {

    accept(t);

    after.accept(t);

  }

;

}

