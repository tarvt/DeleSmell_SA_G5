Location: MutableBoolean.java

Content: 

/** 

 * Returns the value of this MutableBoolean as a boolean.

 * @return the boolean value represented by this object.

 */

public boolean booleanValue(){

  return value;

}

Location: MutableBoolean.java

Content: 

/** 

 * Compares this mutable to another in ascending order.

 * @param other  the other mutable to compare to, not null

 * @return negative if this is less, zero if equal, positive if greaterwhere false is less than true

 */

@Override public int compareTo(final MutableBoolean other){

  return BooleanUtils.compare(this.value,other.value);

}

Location: MutableBoolean.java

Content: 

/** 

 * Checks if the current value is  {@code false}.

 * @return {@code true} if the current value is {@code false}

 * @since 2.5

 */

public boolean isFalse(){

  return !value;

}

Location: MutableBoolean.java

Content: 

/** 

 * Checks if the current value is  {@code true}.

 * @return {@code true} if the current value is {@code true}

 * @since 2.5

 */

public boolean isTrue(){

  return value;

}

Location: MutableBoolean.java

Content: 

/** 

 * Constructs a new MutableBoolean with the default value of false.

 */

public MutableBoolean(){

}

Location: MutableBoolean.java

Content: 

/** 

 * Constructs a new MutableBoolean with the specified value.

 * @param value  the initial value to store, not null

 * @throws NullPointerException if the object is null

 */

public MutableBoolean(final Boolean value){

  this.value=value.booleanValue();

}

Location: MutableBoolean.java

Content: 

/** 

 * Sets the value to false.

 * @since 3.3

 */

public void setFalse(){

  this.value=false;

}

Location: MutableBoolean.java

Content: 

/** 

 * Sets the value to true.

 * @since 3.3

 */

public void setTrue(){

  this.value=true;

}

Location: MutableBoolean.java

Content: 

/** 

 * Sets the value from any Boolean instance.

 * @param value  the value to set, not null

 * @throws NullPointerException if the object is null

 */

@Override public void setValue(final Boolean value){

  this.value=value.booleanValue();

}

Location: MutableBoolean.java

Content: 

/** 

 * Gets this mutable as an instance of Boolean.

 * @return a Boolean instance containing the value from this mutable, never null

 * @since 2.5

 */

public Boolean toBoolean(){

  return Boolean.valueOf(booleanValue());

}

