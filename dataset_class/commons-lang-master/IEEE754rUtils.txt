Location: IEEE754rUtils.java

Content: 

/** 

 * <p>Gets the maximum of two  {@code double} values.</p><p>NaN is only returned if all numbers are NaN as per IEEE-754r. </p>

 * @param a  value 1

 * @param b  value 2

 * @return  the largest of the values

 */

public static double max(final double a,final double b){

  if (Double.isNaN(a)) {

    return b;

  }

  if (Double.isNaN(b)) {

    return a;

  }

  return Math.max(a,b);

}

Location: IEEE754rUtils.java

Content: 

/** 

 * <p>Gets the maximum of two  {@code float} values.</p><p>NaN is only returned if all numbers are NaN as per IEEE-754r. </p>

 * @param a  value 1

 * @param b  value 2

 * @return  the largest of the values

 */

public static float max(final float a,final float b){

  if (Float.isNaN(a)) {

    return b;

  }

  if (Float.isNaN(b)) {

    return a;

  }

  return Math.max(a,b);

}

Location: IEEE754rUtils.java

Content: 

/** 

 * <p>Gets the minimum of two  {@code double} values.</p><p>NaN is only returned if all numbers are NaN as per IEEE-754r. </p>

 * @param a  value 1

 * @param b  value 2

 * @return  the smallest of the values

 */

public static double min(final double a,final double b){

  if (Double.isNaN(a)) {

    return b;

  }

  if (Double.isNaN(b)) {

    return a;

  }

  return Math.min(a,b);

}

Location: IEEE754rUtils.java

Content: 

/** 

 * <p>Gets the minimum of two  {@code float} values.</p><p>NaN is only returned if all numbers are NaN as per IEEE-754r. </p>

 * @param a  value 1

 * @param b  value 2

 * @return  the smallest of the values

 */

public static float min(final float a,final float b){

  if (Float.isNaN(a)) {

    return b;

  }

  if (Float.isNaN(b)) {

    return a;

  }

  return Math.min(a,b);

}

