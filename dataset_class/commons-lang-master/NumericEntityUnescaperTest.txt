Location: NumericEntityUnescaperTest.java

Content: 

@Test public void testOutOfBounds(){

  final NumericEntityUnescaper neu=new NumericEntityUnescaper();

  assertEquals("Test &",neu.translate("Test &"),"Failed to ignore when last character is &");

  assertEquals("Test &#",neu.translate("Test &#"),"Failed to ignore when last character is &");

  assertEquals("Test &#x",neu.translate("Test &#x"),"Failed to ignore when last character is &");

  assertEquals("Test &#X",neu.translate("Test &#X"),"Failed to ignore when last character is &");

}

Location: NumericEntityUnescaperTest.java

Content: 

@Test public void testSupplementaryUnescaping(){

  final NumericEntityUnescaper neu=new NumericEntityUnescaper();

  final String input="&#68642;";

  final String expected="\uD803\uDC22";

  final String result=neu.translate(input);

  assertEquals(expected,result,"Failed to unescape numeric entities supplementary characters");

}

Location: NumericEntityUnescaperTest.java

Content: 

@Test public void testUnfinishedEntity(){

  NumericEntityUnescaper neu=new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.semiColonOptional);

  String input="Test &#x30 not test";

  String expected="Test \u0030 not test";

  String result=neu.translate(input);

  assertEquals(expected,result,"Failed to support unfinished entities (i.e. missing semicolon)");

  neu=new NumericEntityUnescaper();

  input="Test &#x30 not test";

  expected=input;

  result=neu.translate(input);

  assertEquals(expected,result,"Failed to ignore unfinished entities (i.e. missing semicolon)");

  final NumericEntityUnescaper failingNeu=new NumericEntityUnescaper(NumericEntityUnescaper.OPTION.errorIfNoSemiColon);

  final String failingInput="Test &#x30 not test";

  assertThrows(IllegalArgumentException.class,() -> failingNeu.translate(failingInput));

}

