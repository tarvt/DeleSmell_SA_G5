Location: ConstantInitializerTest.java

Content: 

/** 

 * Helper method for testing equals() and hashCode().

 * @param obj the object to compare with the test instance

 * @param expected the expected result

 */

private void checkEquals(final Object obj,final boolean expected){

  assertEquals(expected,init.equals(obj),"Wrong result of equals");

  if (obj != null) {

    assertEquals(expected,obj.equals(init),"Not symmetric");

    if (expected) {

      assertEquals(init.hashCode(),obj.hashCode(),"Different hash codes");

    }

  }

}

Location: ConstantInitializerTest.java

Content: 

/** 

 * Tests equals() if the expected result is false.

 */

@Test public void testEqualsFalse(){

  ConstantInitializer<Integer> init2=new ConstantInitializer<>(null);

  checkEquals(init2,false);

  init2=new ConstantInitializer<>(VALUE + 1);

  checkEquals(init2,false);

}

Location: ConstantInitializerTest.java

Content: 

/** 

 * Tests equals() if the expected result is true.

 */

@Test public void testEqualsTrue(){

  checkEquals(init,true);

  ConstantInitializer<Integer> init2=new ConstantInitializer<>(Integer.valueOf(VALUE.intValue()));

  checkEquals(init2,true);

  init=new ConstantInitializer<>(null);

  init2=new ConstantInitializer<>(null);

  checkEquals(init2,true);

}

Location: ConstantInitializerTest.java

Content: 

/** 

 * Tests equals() with objects of other classes.

 */

@Test public void testEqualsWithOtherObjects(){

  checkEquals(null,false);

  checkEquals(this,false);

  checkEquals(new ConstantInitializer<>("Test"),false);

}

Location: ConstantInitializerTest.java

Content: 

/** 

 * Tests whether the correct object is returned.

 */

@Test public void testGetObject(){

  assertEquals(VALUE,init.getObject(),"Wrong object");

}

Location: ConstantInitializerTest.java

Content: 

/** 

 * Tests the string representation if the managed object is null.

 */

@Test public void testToStringNull(){

  final String s=new ConstantInitializer<>(null).toString();

  assertTrue(s.indexOf("object = null") > 0,"Object not found: " + s);

}

