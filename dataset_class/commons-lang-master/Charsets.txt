Location: Charsets.java

Content: 

/** 

 * Returns the given  {@code charset} or the default Charset if {@code charset} is null.

 * @param charsetName a Charset or null.

 * @return the given {@code charset} or the default Charset if {@code charset} is null.

 */

static String toCharsetName(final String charsetName){

  return charsetName == null ? Charset.defaultCharset().name() : charsetName;

}

Location: Charsets.java

Content: 

/** 

 * Returns the given  {@code charset} or the default Charset if {@code charset} is null.

 * @param charset a Charset or null.

 * @return the given {@code charset} or the default Charset if {@code charset} is null.

 */

static Charset toCharset(final Charset charset){

  return charset == null ? Charset.defaultCharset() : charset;

}

Location: Charsets.java

Content: 

/** 

 * Returns the given  {@code charset} or the default Charset if {@code charset} is null.

 * @param charsetName a Charset or null.

 * @return the given {@code charset} or the default Charset if {@code charset} is null.

 * @throws UnsupportedCharsetException If no support for the named charset is available in this instance of the Javavirtual machine

 */

static Charset toCharset(final String charsetName){

  return charsetName == null ? Charset.defaultCharset() : Charset.forName(charsetName);

}

