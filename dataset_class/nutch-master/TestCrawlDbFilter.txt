Location: TestCrawlDbFilter.java

Content: 

/** 

 * Test url404Purging

 * @throws Exception

 */

@Test public void testUrl404Purging() throws Exception {

  ArrayList<URLCrawlDatum> list=new ArrayList<URLCrawlDatum>();

  list.add(new URLCrawlDatum(new Text("http://www.example.com"),new CrawlDatum(CrawlDatum.STATUS_DB_GONE,0,0.0f)));

  list.add(new URLCrawlDatum(new Text("http://www.example1.com"),new CrawlDatum(CrawlDatum.STATUS_DB_FETCHED,0,0.0f)));

  list.add(new URLCrawlDatum(new Text("http://www.example2.com"),new CrawlDatum(CrawlDatum.STATUS_DB_UNFETCHED,0,0.0f)));

  dbDir=new Path(testdir,"crawldb");

  newCrawlDb=new Path(testdir,"newcrawldb");

  CrawlDBTestUtil.createCrawlDb(conf,fs,dbDir,list);

  conf.setBoolean(CrawlDb.CRAWLDB_PURGE_404,true);

  conf.setBoolean(CrawlDbFilter.URL_NORMALIZING,true);

  conf.setBoolean(CrawlDbFilter.URL_FILTERING,false);

  conf.setInt("urlnormalizer.loop.count",2);

  Job job=NutchJob.getInstance(conf);

  job.setJobName("Test CrawlDbFilter");

  Path current=new Path(dbDir,"current");

  if (FileSystem.get(conf).exists(current)) {

    FileInputFormat.addInputPath(job,current);

  }

  job.setInputFormatClass(SequenceFileInputFormat.class);

  job.setMapperClass(CrawlDbFilter.class);

  job.setReducerClass(CrawlDbReducer.class);

  FileOutputFormat.setOutputPath(job,newCrawlDb);

  job.setOutputFormatClass(MapFileOutputFormat.class);

  job.setOutputKeyClass(Text.class);

  job.setOutputValueClass(CrawlDatum.class);

  job.setJarByClass(CrawlDbFilter.class);

  job.waitForCompletion(true);

  Path fetchlist=new Path(new Path(newCrawlDb,"part-r-00000"),"data");

  ArrayList<URLCrawlDatum> l=readContents(fetchlist);

  Assert.assertEquals(2,l.size());

}

