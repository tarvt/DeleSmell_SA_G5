Location: DomainSuffixes.java

Content: 

void addDomainSuffix(DomainSuffix tld){

  domains.put(tld.getDomain(),tld);

}

Location: DomainSuffixes.java

Content: 

/** 

 * private ctor 

 */

private DomainSuffixes(){

  String file="domain-suffixes.xml";

  InputStream input=this.getClass().getClassLoader().getResourceAsStream(file);

  try {

    new DomainSuffixesReader().read(this,input);

  }

 catch (  Exception ex) {

    LOG.warn(StringUtils.stringifyException(ex));

  }

}

Location: DomainSuffixes.java

Content: 

/** 

 * Singleton instance, lazy instantination

 * @return returns the domain suffix instance

 */

public static DomainSuffixes getInstance(){

  if (instance == null) {

    instance=new DomainSuffixes();

  }

  return instance;

}

Location: DomainSuffixes.java

Content: 

/** 

 * Return the  {@link DomainSuffix} object for the extension, if extension is atop level domain returned object will be an instance of {@link TopLevelDomain}

 * @param extension of the domain

 * @return {@link DomainSuffix}

 */

public DomainSuffix get(String extension){

  return domains.get(extension);

}

Location: DomainSuffixes.java

Content: 

/** 

 * Return whether the extension is a registered domain entry

 * @param extension a String extension

 * @return true if input is a registered domain entry, false otherwise

 */

public boolean isDomainSuffix(String extension){

  return domains.containsKey(extension);

}

