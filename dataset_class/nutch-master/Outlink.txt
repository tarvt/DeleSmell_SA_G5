Location: Outlink.java

Content: 

public String getToUrl(){

  return toUrl;

}

Location: Outlink.java

Content: 

public Outlink(){

}

Location: Outlink.java

Content: 

public Outlink(String toUrl,String anchor) throws MalformedURLException {

  this.toUrl=toUrl;

  if (anchor == null)   anchor="";

  this.anchor=anchor;

  md=null;

}

Location: Outlink.java

Content: 

public void setMetadata(MapWritable md){

  this.md=md;

}

Location: Outlink.java

Content: 

/** 

 * Skips over one Outlink in the input.

 * @param in the {@link DataInput} tuple stream holding thetoUrl and archor pair.

 * @throws IOException if there is an error processing the {@link DataInput}

 */

public static void skip(DataInput in) throws IOException {

  Text.skip(in);

  Text.skip(in);

  boolean hasMD=in.readBoolean();

  if (hasMD) {

    MapWritable metadata=new org.apache.hadoop.io.MapWritable();

    metadata.readFields(in);

    ;

  }

}

