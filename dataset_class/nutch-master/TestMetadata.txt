Location: TestMetadata.java

Content: 

/** 

 * Test to ensure that only non-null values get written when the {@link Metadata} object is written using a Writeable.

 * @since NUTCH-406

 */

@Test public void testWriteNonNull(){

  Metadata met=new Metadata();

  met.add(CONTENTTYPE,null);

  met.add(CONTENTTYPE,"text/bogus");

  met.add(CONTENTTYPE,"text/bogus2");

  met=writeRead(met);

  Assert.assertNotNull(met);

  Assert.assertEquals(met.size(),1);

  boolean hasBogus=false, hasBogus2=false;

  String[] values=met.getValues(CONTENTTYPE);

  Assert.assertNotNull(values);

  Assert.assertEquals(values.length,2);

  for (int i=0; i < values.length; i++) {

    if (values[i].equals("text/bogus")) {

      hasBogus=true;

    }

    if (values[i].equals("text/bogus2")) {

      hasBogus2=true;

    }

  }

  Assert.assertTrue(hasBogus && hasBogus2);

}

Location: TestMetadata.java

Content: 

private Metadata writeRead(Metadata meta){

  Metadata readed=new Metadata();

  try {

    ByteArrayOutputStream out=new ByteArrayOutputStream();

    meta.write(new DataOutputStream(out));

    readed.readFields(new DataInputStream(new ByteArrayInputStream(out.toByteArray())));

  }

 catch (  IOException ioe) {

    Assert.fail(ioe.toString());

  }

  return readed;

}

