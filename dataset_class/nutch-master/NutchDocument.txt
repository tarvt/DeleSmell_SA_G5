Location: NutchDocument.java

Content: 

public void add(String name,Object value){

  NutchField field=fields.get(name);

  if (field == null) {

    field=new NutchField(value);

    fields.put(name,field);

  }

 else {

    field.add(value);

  }

}

Location: NutchDocument.java

Content: 

@Override public NutchDocument clone() throws CloneNotSupportedException {

  NutchDocument clonedDocument=(NutchDocument)super.clone();

  clonedDocument.fields=new HashMap<>();

  for (  Entry<String,NutchField> field : this.fields.entrySet()) {

    clonedDocument.fields.put(field.getKey(),field.getValue().clone());

  }

  return clonedDocument;

}

Location: NutchDocument.java

Content: 

public Metadata getDocumentMeta(){

  return documentMeta;

}

Location: NutchDocument.java

Content: 

public Collection<String> getFieldNames(){

  return fields.keySet();

}

Location: NutchDocument.java

Content: 

public Object getFieldValue(String name){

  NutchField field=fields.get(name);

  if (field == null) {

    return null;

  }

  if (field.getValues().size() == 0) {

    return null;

  }

  return field.getValues().get(0);

}

Location: NutchDocument.java

Content: 

public NutchField getField(String name){

  return fields.get(name);

}

Location: NutchDocument.java

Content: 

public float getWeight(){

  return weight;

}

Location: NutchDocument.java

Content: 

public NutchDocument(){

  fields=new HashMap<>();

  documentMeta=new Metadata();

  weight=1.0f;

}

Location: NutchDocument.java

Content: 

public NutchField removeField(String name){

  return fields.remove(name);

}

Location: NutchDocument.java

Content: 

public void setWeight(float weight){

  this.weight=weight;

}

