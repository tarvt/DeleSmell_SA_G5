Location: TestURLUtil.java

Content: 

@Test public void testChooseRepr() throws Exception {

  String aDotCom="http://www.a.com";

  String bDotCom="http://www.b.com";

  String aSubDotCom="http://www.news.a.com";

  String aQStr="http://www.a.com?y=1";

  String aPath="http://www.a.com/xyz/index.html";

  String aPath2="http://www.a.com/abc/page.html";

  String aPath3="http://www.news.a.com/abc/page.html";

  Assert.assertEquals(bDotCom,URLUtil.chooseRepr(aDotCom,bDotCom,true));

  Assert.assertEquals(bDotCom,URLUtil.chooseRepr(aDotCom,bDotCom,false));

  Assert.assertEquals(aDotCom,URLUtil.chooseRepr(aDotCom,aQStr,false));

  Assert.assertEquals(aDotCom,URLUtil.chooseRepr(aDotCom,aPath,false));

  Assert.assertEquals(aDotCom,URLUtil.chooseRepr(aPath,aDotCom,false));

  Assert.assertEquals(aPath2,URLUtil.chooseRepr(aPath,aPath2,false));

  Assert.assertEquals(aDotCom,URLUtil.chooseRepr(aDotCom,aPath,true));

  Assert.assertEquals(aDotCom,URLUtil.chooseRepr(aPath,aDotCom,true));

  Assert.assertEquals(aPath2,URLUtil.chooseRepr(aPath,aPath2,true));

  Assert.assertEquals(aPath,URLUtil.chooseRepr(aPath,aPath3,true));

  Assert.assertEquals(aDotCom,URLUtil.chooseRepr(aDotCom,aSubDotCom,true));

}

Location: TestURLUtil.java

Content: 

@Test public void testFileProtocol() throws Exception {

  Assert.assertEquals("file:/path/file.html",URLUtil.toASCII("file:/path/file.html"));

  Assert.assertEquals("file:/path/file.html",URLUtil.toUNICODE("file:/path/file.html"));

}

Location: TestURLUtil.java

Content: 

@Test public void testGetDomainName() throws Exception {

  URL url=null;

  url=new URL("http://lucene.apache.org/nutch");

  Assert.assertEquals("apache.org",URLUtil.getDomainName(url));

  url=new URL("http://en.wikipedia.org/wiki/Java_coffee");

  Assert.assertEquals("wikipedia.org",URLUtil.getDomainName(url));

  url=new URL("http://140.211.11.130/foundation/contributing.html");

  Assert.assertEquals("140.211.11.130",URLUtil.getDomainName(url));

  url=new URL("http://www.example.co.uk:8080/index.html");

  Assert.assertEquals("example.co.uk",URLUtil.getDomainName(url));

  url=new URL("http://com");

  Assert.assertEquals("com",URLUtil.getDomainName(url));

  url=new URL("http://www.example.co.uk.com");

  Assert.assertEquals("uk.com",URLUtil.getDomainName(url));

  url=new URL("http://example.com.nn");

  Assert.assertEquals("nn",URLUtil.getDomainName(url));

  url=new URL("http://");

  Assert.assertEquals("",URLUtil.getDomainName(url));

  url=new URL("http://www.edu.tr.xyz");

  Assert.assertEquals("xyz",URLUtil.getDomainName(url));

  url=new URL("http://www.example.c.se");

  Assert.assertEquals("example.c.se",URLUtil.getDomainName(url));

  url=new URL("http://www.example.plc.co.im");

  Assert.assertEquals("example.plc.co.im",URLUtil.getDomainName(url));

  url=new URL("http://www.example.2000.hu");

  Assert.assertEquals("example.2000.hu",URLUtil.getDomainName(url));

  url=new URL("http://www.example.商業.tw");

  Assert.assertEquals("example.商業.tw",URLUtil.getDomainName(url));

}

Location: TestURLUtil.java

Content: 

@Test public void testGetDomainSuffix() throws Exception {

  URL url=null;

  url=new URL("http://lucene.apache.org/nutch");

  Assert.assertEquals("org",URLUtil.getDomainSuffix(url).getDomain());

  url=new URL("http://140.211.11.130/foundation/contributing.html");

  Assert.assertNull(URLUtil.getDomainSuffix(url));

  url=new URL("http://www.example.co.uk:8080/index.html");

  Assert.assertEquals("co.uk",URLUtil.getDomainSuffix(url).getDomain());

  url=new URL("http://com");

  Assert.assertEquals("com",URLUtil.getDomainSuffix(url).getDomain());

  url=new URL("http://www.example.co.uk.com");

  Assert.assertEquals("com",URLUtil.getDomainSuffix(url).getDomain());

  url=new URL("http://example.com.nn");

  Assert.assertNull(URLUtil.getDomainSuffix(url));

  url=new URL("http://");

  Assert.assertNull(URLUtil.getDomainSuffix(url));

  url=new URL("http://www.edu.tr.xyz");

  Assert.assertNull(URLUtil.getDomainSuffix(url));

  url=new URL("http://subdomain.example.edu.tr");

  Assert.assertEquals("edu.tr",URLUtil.getDomainSuffix(url).getDomain());

  url=new URL("http://subdomain.example.presse.fr");

  Assert.assertEquals("presse.fr",URLUtil.getDomainSuffix(url).getDomain());

  url=new URL("http://subdomain.example.presse.tr");

  Assert.assertEquals("tr",URLUtil.getDomainSuffix(url).getDomain());

  url=new URL("http://www.example.plc.co.im");

  Assert.assertEquals("plc.co.im",URLUtil.getDomainSuffix(url).getDomain());

  url=new URL("http://www.example.2000.hu");

  Assert.assertEquals("2000.hu",URLUtil.getDomainSuffix(url).getDomain());

  url=new URL("http://www.example.商業.tw");

  Assert.assertEquals("商業.tw",URLUtil.getDomainSuffix(url).getDomain());

}

Location: TestURLUtil.java

Content: 

@Test public void testGetHostSegments() throws Exception {

  URL url;

  String[] segments;

  url=new URL("http://subdomain.example.edu.tr");

  segments=URLUtil.getHostSegments(url);

  Assert.assertEquals("subdomain",segments[0]);

  Assert.assertEquals("example",segments[1]);

  Assert.assertEquals("edu",segments[2]);

  Assert.assertEquals("tr",segments[3]);

  url=new URL("http://");

  segments=URLUtil.getHostSegments(url);

  Assert.assertEquals(1,segments.length);

  Assert.assertEquals("",segments[0]);

  url=new URL("http://140.211.11.130/foundation/contributing.html");

  segments=URLUtil.getHostSegments(url);

  Assert.assertEquals(1,segments.length);

  Assert.assertEquals("140.211.11.130",segments[0]);

  url=new URL("http://www.example.商業.tw");

  segments=URLUtil.getHostSegments(url);

  Assert.assertEquals("www",segments[0]);

  Assert.assertEquals("example",segments[1]);

  Assert.assertEquals("商業",segments[2]);

  Assert.assertEquals("tw",segments[3]);

}

Location: TestURLUtil.java

Content: 

@Test public void testResolveURL() throws Exception {

  URL u436=new URL("http://a/b/c/d;p?q#f");

  Assert.assertEquals("http://a/b/c/d;p?q#f",u436.toString());

  URL abs=URLUtil.resolveURL(u436,"?y");

  Assert.assertEquals("http://a/b/c/d;p?y",abs.toString());

  URL u566=new URL("http://www.fleurie.org/entreprise.asp");

  abs=URLUtil.resolveURL(u566,"?id_entrep=111");

  Assert.assertEquals("http://www.fleurie.org/entreprise.asp?id_entrep=111",abs.toString());

  URL base=new URL(baseString);

  Assert.assertEquals("base url parsing",baseString,base.toString());

  for (int i=0; i < targets.length; i++) {

    URL u=URLUtil.resolveURL(base,targets[i][0]);

    Assert.assertEquals(targets[i][1],targets[i][1],u.toString());

  }

}

Location: TestURLUtil.java

Content: 

@Test public void testToASCII() throws Exception {

  Assert.assertEquals("http://www.xn--evir-zoa.com",URLUtil.toASCII("http://www.çevir.com"));

  Assert.assertEquals("http://xn--uni-tbingen-xhb.de/",URLUtil.toASCII("http://uni-tübingen.de/"));

  Assert.assertEquals("http://www.medizin.xn--uni-tbingen-xhb.de:8080/search.php?q=abc#p1",URLUtil.toASCII("http://www.medizin.uni-tübingen.de:8080/search.php?q=abc#p1"));

}

Location: TestURLUtil.java

Content: 

@Test public void testToUNICODE() throws Exception {

  Assert.assertEquals("http://www.çevir.com",URLUtil.toUNICODE("http://www.xn--evir-zoa.com"));

  Assert.assertEquals("http://uni-tübingen.de/",URLUtil.toUNICODE("http://xn--uni-tbingen-xhb.de/"));

  Assert.assertEquals("http://www.medizin.uni-tübingen.de:8080/search.php?q=abc#p1",URLUtil.toUNICODE("http://www.medizin.xn--uni-tbingen-xhb.de:8080/search.php?q=abc#p1"));

}

