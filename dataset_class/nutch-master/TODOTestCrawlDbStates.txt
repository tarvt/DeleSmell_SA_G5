Location: TODOTestCrawlDbStates.java

Content: 

/** 

 * NUTCH-1564 AdaptiveFetchSchedule: sync_delta forces immediate re-fetch for documents not modified <p> Problem: documents not modified for a longer time are fetched in every cycle because of an error in the SYNC_DELTA calculation of {@link AdaptiveFetchSchedule}. <br> The next fetch time should always be in the future, never in the past. </p>

 */

@Test public void testAdaptiveFetchScheduleSyncDelta(){

  LOG.info("NUTCH-1564 test SYNC_DELTA calculation of AdaptiveFetchSchedule");

  Context context=CrawlDBTestUtil.createContext();

  Configuration conf=context.getConfiguration();

  conf.setLong("db.fetch.interval.default",172800);

  conf.setLong("db.fetch.schedule.adaptive.min_interval",86400);

  conf.setLong("db.fetch.schedule.adaptive.max_interval",604800);

  conf.setLong("db.fetch.interval.max",604800);

  conf.set("db.fetch.schedule.class","org.apache.nutch.crawl.AdaptiveFetchSchedule");

  ContinuousCrawlTestUtil crawlUtil=new CrawlTestFetchScheduleNotModifiedFetchTime(context);

  crawlUtil.setInterval(FetchSchedule.SECONDS_PER_DAY / 3);

  try {

    if (!crawlUtil.run(100)) {

      fail("failed: sync_delta calculation with AdaptiveFetchSchedule");

    }

  }

 catch (  IOException e) {

    e.printStackTrace();

  }

}

Location: TODOTestCrawlDbStates.java

Content: 

/** 

 * NUTCH-578: a fetch_retry should result in a db_gone if db.fetch.retry.max is reached. Retry counter has to be reset appropriately.

 */

@Test public void testCrawlDbReducerPageRetrySchedule(){

  LOG.info("NUTCH-578: test long running continuous crawl with fetch_retry");

  ContinuousCrawlTestUtil crawlUtil=new ContinuousCrawlTestFetchRetry();

  try {

    if (!crawlUtil.run(150)) {

      fail("fetch_retry did not result in a db_gone if retry counter > maxRetries (NUTCH-578)");

    }

  }

 catch (  IOException e) {

    e.printStackTrace();

  }

}

