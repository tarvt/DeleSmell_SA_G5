Location: TestCCParseFilter.java

Content: 

public void pageTest(File file,String url,String license,String location,String type) throws Exception {

  String contentType="text/html";

  InputStream in=new FileInputStream(file);

  ByteArrayOutputStream out=new ByteArrayOutputStream((int)file.length());

  byte[] buffer=new byte[1024];

  int i;

  while ((i=in.read(buffer)) != -1) {

    out.write(buffer,0,i);

  }

  in.close();

  byte[] bytes=out.toByteArray();

  Configuration conf=NutchConfiguration.create();

  Content content=new Content(url,url,bytes,contentType,new Metadata(),conf);

  Parse parse=new ParseUtil(conf).parse(content).get(content.getUrl());

  Metadata metadata=parse.getData().getParseMeta();

  Assert.assertEquals(license,metadata.get("License-Url"));

  Assert.assertEquals(location,metadata.get("License-Location"));

  Assert.assertEquals(type,metadata.get("Work-Type"));

}

Location: TestCCParseFilter.java

Content: 

@Test public void testPages() throws Exception {

  pageTest(new File(testDir,"anchor.html"),"http://foo.com/","http://creativecommons.org/licenses/by-nc-sa/1.0","a",null);

  pageTest(new File(testDir,"rel.html"),"http://foo.com/","http://creativecommons.org/licenses/by-nc/2.0","rel",null);

  pageTest(new File(testDir,"rdf.html"),"http://foo.com/","http://creativecommons.org/licenses/by-nc/1.0","rdf","text");

}

