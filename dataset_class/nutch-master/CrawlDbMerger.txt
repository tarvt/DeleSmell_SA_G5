Location: CrawlDbMerger.java

Content: 

public CrawlDbMerger(){

}

Location: CrawlDbMerger.java

Content: 

public CrawlDbMerger(Configuration conf){

  setConf(conf);

}

Location: CrawlDbMerger.java

Content: 

public static Job createMergeJob(Configuration conf,Path output,boolean normalize,boolean filter) throws IOException {

  Path newCrawlDb=new Path(output,"merge-" + Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));

  Job job=NutchJob.getInstance(conf);

  conf=job.getConfiguration();

  job.setJobName("crawldb merge " + output);

  job.setInputFormatClass(SequenceFileInputFormat.class);

  job.setJarByClass(CrawlDbMerger.class);

  job.setMapperClass(CrawlDbFilter.class);

  conf.setBoolean(CrawlDbFilter.URL_FILTERING,filter);

  conf.setBoolean(CrawlDbFilter.URL_NORMALIZING,normalize);

  job.setReducerClass(Merger.class);

  FileOutputFormat.setOutputPath(job,newCrawlDb);

  job.setOutputFormatClass(MapFileOutputFormat.class);

  job.setOutputKeyClass(Text.class);

  job.setOutputValueClass(CrawlDatum.class);

  return job;

}

Location: CrawlDbMerger.java

Content: 

public void merge(Path output,Path[] dbs,boolean normalize,boolean filter) throws Exception {

  Path lock=CrawlDb.lock(getConf(),output,false);

  SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

  long start=System.currentTimeMillis();

  LOG.info("CrawlDb merge: starting at {}",sdf.format(start));

  Job job=createMergeJob(getConf(),output,normalize,filter);

  for (int i=0; i < dbs.length; i++) {

    LOG.info("Adding {}",dbs[i]);

    FileInputFormat.addInputPath(job,new Path(dbs[i],CrawlDb.CURRENT_NAME));

  }

  Path outPath=FileOutputFormat.getOutputPath(job);

  FileSystem fs=outPath.getFileSystem(getConf());

  try {

    boolean success=job.waitForCompletion(true);

    if (!success) {

      String message="CrawlDbMerger job did not succeed, job status:" + job.getStatus().getState() + ", reason: "+ job.getStatus().getFailureInfo();

      LOG.error(message);

      NutchJob.cleanupAfterFailure(outPath,lock,fs);

      throw new RuntimeException(message);

    }

    CrawlDb.install(job,output);

  }

 catch (  IOException|InterruptedException|ClassNotFoundException e) {

    LOG.error("CrawlDbMerge job failed: {}",e.getMessage());

    NutchJob.cleanupAfterFailure(outPath,lock,fs);

    throw e;

  }

  long end=System.currentTimeMillis();

  LOG.info("CrawlDb merge: finished at " + sdf.format(end) + ", elapsed: "+ TimingUtil.elapsedTime(start,end));

}

