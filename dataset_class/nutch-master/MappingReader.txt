Location: MappingReader.java

Content: 

/** 

 * Converts the tag "mapping" to a  {@link Map} instance.

 * @param mappingElement The tag "mapping" wrapped into an {@link Element} instance.

 * @return The {@link Map} instance with the actions for mapping the fields.

 */

static Map<Actions,Map<String,List<String>>> parseMapping(Element mappingElement){

  Map<Actions,Map<String,List<String>>> parsedMapping=new HashMap<>();

  Node node=mappingElement.getElementsByTagName("rename").item(0);

  if (node != null) {

    NodeList fieldList=((Element)node).getElementsByTagName("field");

    Map<String,List<String>> fieldsMap=new HashMap<>();

    for (int j=0; j < fieldList.getLength(); j++) {

      Element field=(Element)fieldList.item(j);

      fieldsMap.put(field.getAttribute("source"),Collections.singletonList(field.getAttribute("dest")));

    }

    parsedMapping.put(Actions.RENAME,fieldsMap);

  }

  node=mappingElement.getElementsByTagName("copy").item(0);

  if (node != null) {

    NodeList fieldList=((Element)node).getElementsByTagName("field");

    Map<String,List<String>> fieldsMap=new HashMap<>();

    for (int j=0; j < fieldList.getLength(); j++) {

      Element field=(Element)fieldList.item(j);

      fieldsMap.put(field.getAttribute("source"),Arrays.asList(field.getAttribute("dest").split(",")));

    }

    parsedMapping.put(Actions.COPY,fieldsMap);

  }

  node=mappingElement.getElementsByTagName("remove").item(0);

  if (node != null) {

    NodeList fieldList=((Element)node).getElementsByTagName("field");

    Map<String,List<String>> fieldsMap=new HashMap<>();

    for (int j=0; j < fieldList.getLength(); j++) {

      Element field=(Element)fieldList.item(j);

      fieldsMap.put(field.getAttribute("source"),null);

    }

    parsedMapping.put(Actions.REMOVE,fieldsMap);

  }

  return parsedMapping;

}

