Location: TestMimeUtil.java

Content: 

private String getMimeType(String url,byte[] bytes,String contentType,boolean useMagic){

  Configuration conf=NutchConfiguration.create();

  conf.setBoolean("mime.type.magic",useMagic);

  MimeUtil mimeUtil=new MimeUtil(conf);

  return mimeUtil.autoResolveContentType(contentType,url,bytes);

}

Location: TestMimeUtil.java

Content: 

private String getMimeType(String url,File file,String contentType,boolean useMagic) throws IOException {

  return getMimeType(url,Files.toByteArray(file),contentType,useMagic);

}

Location: TestMimeUtil.java

Content: 

/** 

 * test binary file formats (real files) 

 */

public void testBinaryFiles() throws IOException {

  for (  String[] testPage : binaryFiles) {

    File dataFile=new File(sampleDir,testPage[1]);

    String mimeType=getMimeType(urlPrefix + testPage[1],dataFile,testPage[2],false);

    assertEquals("",testPage[0],mimeType);

  }

}

Location: TestMimeUtil.java

Content: 

/** 

 * use only MIME magic (detection from content bytes) 

 */

public void testOnlyMimeMagic(){

  for (  String[] testPage : textBasedFormats) {

    String mimeType=getMimeType(urlPrefix,testPage[3].getBytes(defaultCharset),"",true);

    assertEquals("",testPage[0],mimeType);

  }

}

Location: TestMimeUtil.java

Content: 

/** 

 * use HTTP Content-Type, URL pattern, and MIME magic 

 */

public void testWithMimeMagic(){

  for (  String[] testPage : textBasedFormats) {

    String mimeType=getMimeType(urlPrefix,testPage[3].getBytes(defaultCharset),testPage[2],true);

    assertEquals("",testPage[0],mimeType);

  }

}

Location: TestMimeUtil.java

Content: 

/** 

 * use only HTTP Content-Type (if given) and URL pattern 

 */

public void testWithoutMimeMagic(){

  for (  String[] testPage : textBasedFormats) {

    if (testPage.length > 4 && "requires-mime-magic".equals(testPage[4])) {

      continue;

    }

    String mimeType=getMimeType(urlPrefix + testPage[1],testPage[3].getBytes(defaultCharset),testPage[2],false);

    assertEquals("",testPage[0],mimeType);

  }

}

