Location: HTMLMetaTags.java

Content: 

/** 

 * @return the <code>baseHref</code>, if set, or<code>null</code> otherwise.

 */

public URL getBaseHref(){

  return baseHref;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * @return all collected values of the general meta tags. Property names aretag names, property values are "content" values.

 */

public Metadata getGeneralTags(){

  return generalTags;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * @return all collected values of the "http-equiv" meta tags. Property namesare tag names, property values are "content" values.

 */

public Properties getHttpEquivTags(){

  return httpEquivTags;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Get the current value of <code>noCache</code>.

 * @return true if no cache is desired, false otherwise

 */

public boolean getNoCache(){

  return noCache;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Get the current value of <code>noFollow</code>.

 * @return true if no follow is desired, false otherwise

 */

public boolean getNoFollow(){

  return noFollow;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Get the current value of <code>noIndex</code>.

 * @return true if no index is desired, false otherwise

 */

public boolean getNoIndex(){

  return noIndex;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Get the current value of <code>refresh</code>.

 * @return true if refresh is desired, false otherwise

 */

public boolean getRefresh(){

  return refresh;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * @return the <code>refreshHref</code>, if set, or<code>null</code> otherwise. The value may be invalid if {@link #getRefresh()} returns <code>false</code>.

 */

public URL getRefreshHref(){

  return refreshHref;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * @return the current value of <code>refreshTime</code>. The value may be invalid if  {@link #getRefresh()} returns<code>false</code>.

 */

public int getRefreshTime(){

  return refreshTime;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets all boolean values to <code>false</code>. Clears all other tags.

 */

public void reset(){

  noIndex=false;

  noFollow=false;

  noCache=false;

  refresh=false;

  refreshTime=0;

  baseHref=null;

  refreshHref=null;

  generalTags.clear();

  httpEquivTags.clear();

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets the <code>baseHref</code>.

 * @param baseHref value to set

 */

public void setBaseHref(URL baseHref){

  this.baseHref=baseHref;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets <code>noCache</code> to <code>false</code>.

 */

public void setCache(){

  noCache=false;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets <code>noFollow</code> to <code>false</code>.

 */

public void setFollow(){

  noFollow=false;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets <code>noIndex</code> to <code>false</code>.

 */

public void setIndex(){

  noIndex=false;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets <code>noCache</code> to <code>true</code>.

 */

public void setNoCache(){

  noCache=true;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets <code>noFollow</code> to <code>true</code>.

 */

public void setNoFollow(){

  noFollow=true;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets <code>noIndex</code> to <code>true</code>.

 */

public void setNoIndex(){

  noIndex=true;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets the <code>refreshHref</code>.

 * @param refreshHref value to set

 */

public void setRefreshHref(URL refreshHref){

  this.refreshHref=refreshHref;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets the <code>refreshTime</code>.

 * @param refreshTime value to set

 */

public void setRefreshTime(int refreshTime){

  this.refreshTime=refreshTime;

}

Location: HTMLMetaTags.java

Content: 

/** 

 * Sets <code>refresh</code> to the supplied value.

 * @param refresh value to set

 */

public void setRefresh(boolean refresh){

  this.refresh=refresh;

}

