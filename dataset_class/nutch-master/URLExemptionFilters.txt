Location: URLExemptionFilters.java

Content: 

/** 

 * Run all defined filters. Assume logical AND. An URL is exempted when all the filters accept it to pass through

 * @param fromUrl the source url which generated the outlink

 * @param toUrl the destination url which needs to be checked for exemption

 * @return true is exempted, false otherwise

 */

public boolean isExempted(String fromUrl,String toUrl){

  if (filters.length < 1) {

    return false;

  }

  boolean exempted=fromUrl != null && toUrl != null;

  for (int i=0; i < this.filters.length && exempted; i++) {

    exempted=this.filters[i].filter(fromUrl,toUrl);

  }

  return exempted;

}

Location: URLExemptionFilters.java

Content: 

public URLExemptionFilters(Configuration conf){

  Extension[] extensions=PluginRepository.get(conf).getExtensionPoint(URLExemptionFilter.X_POINT_ID).getExtensions();

  filters=new URLExemptionFilter[extensions.length];

  for (int i=0; i < extensions.length; i++) {

    try {

      filters[i]=(URLExemptionFilter)extensions[i].getExtensionInstance();

    }

 catch (    PluginRuntimeException e) {

      throw new IllegalStateException(e);

    }

  }

  LOG.info("Found {} extensions at point:'{}'",filters.length,URLExemptionFilter.X_POINT_ID);

}

