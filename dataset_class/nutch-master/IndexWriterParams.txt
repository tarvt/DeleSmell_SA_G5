Location: IndexWriterParams.java

Content: 

public boolean getBoolean(String name,boolean defaultValue){

  String value;

  if ((value=this.get(name)) != null && !"".equals(value)) {

    return Boolean.parseBoolean(value);

  }

  return defaultValue;

}

Location: IndexWriterParams.java

Content: 

public int getInt(String name,int defaultValue){

  String value;

  if ((value=this.get(name)) != null && !"".equals(value)) {

    return Integer.parseInt(value);

  }

  return defaultValue;

}

Location: IndexWriterParams.java

Content: 

public long getLong(String name,long defaultValue){

  String value;

  if ((value=this.get(name)) != null && !"".equals(value)) {

    return Long.parseLong(value);

  }

  return defaultValue;

}

Location: IndexWriterParams.java

Content: 

public String[] getStrings(String name){

  String value=this.get(name);

  return StringUtils.getStrings(value);

}

Location: IndexWriterParams.java

Content: 

public String[] getStrings(String name,String... defaultValue){

  String value;

  if ((value=this.get(name)) != null && !"".equals(value)) {

    return StringUtils.getStrings(value);

  }

  return defaultValue;

}

Location: IndexWriterParams.java

Content: 

/** 

 * Constructs a new <code>HashMap</code> with the same mappings as the specified <code>Map</code>.  The <code>HashMap</code> is created with default load factor (0.75) and an initial capacity sufficient to hold the mappings in the specified <code>Map</code>.

 * @param m the map whose mappings are to be placed in this map

 * @throws NullPointerException if the specified map is null

 */

public IndexWriterParams(Map<? extends String,? extends String> m){

  super(m);

}

