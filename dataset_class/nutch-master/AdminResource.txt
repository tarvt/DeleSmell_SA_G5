Location: AdminResource.java

Content: 

/** 

 * Get the status of the Nutch Server 

 * @return {@link NutchServerInfo} for the running service

 */

@GET @Path(value="/") public NutchServerInfo getServerStatus(){

  NutchServerInfo serverInfo=new NutchServerInfo();

  serverInfo.setConfiguration(configManager.list());

  serverInfo.setStartDate(new Date(server.getStarted()));

  serverInfo.setJobs(jobManager.list(null,State.ANY));

  serverInfo.setRunningJobs(jobManager.list(null,State.RUNNING));

  return serverInfo;

}

Location: AdminResource.java

Content: 

private void scheduleServerStop(){

  LOG.info("Shutting down server in {} sec",DELAY_SEC);

  Thread thread=new Thread(){

    public void run(){

      try {

        Thread.sleep(DELAY_SEC * 1000);

      }

 catch (      InterruptedException e) {

        Thread.currentThread().interrupt();

      }

      server.stop();

      LOG.info("Service stopped.");

    }

  }

;

  thread.setDaemon(true);

  thread.start();

  LOG.info("Service shutting down...");

}

Location: AdminResource.java

Content: 

/** 

 * Stop the Nutch server

 * @param force If set to true, it will kill any running jobs

 * @return a message indicating shutdown status

 */

@GET @Path(value="/stop") public String stopServer(@QueryParam("force") boolean force){

  if (!server.canStop(force)) {

    return "Jobs still running -- Cannot stop server now";

  }

  scheduleServerStop();

  return "Stopping in server on port " + server.getPort();

}

