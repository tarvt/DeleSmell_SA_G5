Location: LinkDatum.java

Content: 

public String getAnchor(){

  return anchor;

}

Location: LinkDatum.java

Content: 

public byte getLinkType(){

  return linkType;

}

Location: LinkDatum.java

Content: 

public float getScore(){

  return score;

}

Location: LinkDatum.java

Content: 

/** 

 * Default constructor, no url, timestamp, score, or link type.

 */

public LinkDatum(){

}

Location: LinkDatum.java

Content: 

/** 

 * Creates a LinkDatum with a given url. Timestamp is set to current time.

 * @param url The link url.

 */

public LinkDatum(String url){

  this(url,"",System.currentTimeMillis());

}

Location: LinkDatum.java

Content: 

/** 

 * Creates a LinkDatum with a url and an anchor text. Timestamp is set to current time.

 * @param url The link url.

 * @param anchor The link anchor text.

 */

public LinkDatum(String url,String anchor){

  this(url,anchor,System.currentTimeMillis());

}

Location: LinkDatum.java

Content: 

public LinkDatum(String url,String anchor,long timestamp){

  this.url=url;

  this.anchor=anchor;

  this.timestamp=timestamp;

}

Location: LinkDatum.java

Content: 

public void setAnchor(String anchor){

  this.anchor=anchor;

}

Location: LinkDatum.java

Content: 

public void setLinkType(byte linkType){

  this.linkType=linkType;

}

Location: LinkDatum.java

Content: 

public void setScore(float score){

  this.score=score;

}

Location: LinkDatum.java

Content: 

public void setTimestamp(long timestamp){

  this.timestamp=timestamp;

}

Location: LinkDatum.java

Content: 

public void write(DataOutput out) throws IOException {

  Text.writeString(out,url);

  Text.writeString(out,anchor != null ? anchor : "");

  out.writeFloat(score);

  out.writeLong(timestamp);

  out.writeByte(linkType);

}

