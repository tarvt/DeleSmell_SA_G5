Location: SegmentPart.java

Content: 

/** 

 * Create SegmentPart from a FileSplit.

 * @param split a {@link FileSplit} segment part

 * @return a {@link SegmentPart} resultant from a {@link FileSplit}.

 * @throws IOException if there is a fatal error locating the split  

 */

public static SegmentPart get(FileSplit split) throws IOException {

  return get(split.getPath().toString());

}

Location: SegmentPart.java

Content: 

/** 

 * Create SegmentPart from a String in format "segmentName/partName".

 * @param string input String

 * @return parsed instance of SegmentPart

 * @throws IOException if "/" is missing.

 */

public static SegmentPart parse(String string) throws IOException {

  int idx=string.indexOf('/');

  if (idx == -1) {

    throw new IOException("Invalid SegmentPart: '" + string + "'");

  }

  String segment=string.substring(0,idx);

  String part=string.substring(idx + 1);

  return new SegmentPart(segment,part);

}

Location: SegmentPart.java

Content: 

public SegmentPart(){

}

Location: SegmentPart.java

Content: 

public SegmentPart(String segmentName,String partName){

  this.segmentName=segmentName;

  this.partName=partName;

}

