Location: CrawlDbUpdateTestDriver.java

Content: 

protected CrawlDbUpdateTestDriver(T updateReducer,Configuration conf){

  reducer=updateReducer;

  configuration=conf;

}

Location: CrawlDbUpdateTestDriver.java

Content: 

/** 

 * see  {@link #update(List)}

 */

public List<CrawlDatum> update(CrawlDatum... values){

  return update(Arrays.asList(values));

}

Location: CrawlDbUpdateTestDriver.java

Content: 

/** 

 * run {@link CrawlDbReducer#reduce(Text,Iterator,OutputCollector,Reporter)}and return the CrawlDatum(s) which would have been written into CrawlDb

 * @param dbDatum previous CrawlDatum in CrawlDb

 * @param fetchDatum CrawlDatum resulting from fetching

 * @return list of resulting CrawlDatum(s) in CrawlDb

 */

public List<CrawlDatum> update(CrawlDatum dbDatum,CrawlDatum fetchDatum){

  List<CrawlDatum> values=new ArrayList<CrawlDatum>();

  if (dbDatum != null)   values.add(dbDatum);

  if (fetchDatum != null)   values.add(fetchDatum);

  return update(values);

}

Location: CrawlDbUpdateTestDriver.java

Content: 

/** 

 * run {@link CrawlDbReducer#reduce(Text,Iterator,OutputCollector,Reporter)}and return the CrawlDatum(s) which would have been written into CrawlDb

 * @param values list of input CrawlDatums

 * @return list of resulting CrawlDatum(s) in CrawlDb

 */

public List<CrawlDatum> update(List<CrawlDatum> values){

  List<CrawlDatum> result=new ArrayList<CrawlDatum>(0);

  if (values == null || values.size() == 0) {

    return result;

  }

  Collections.shuffle(values);

  reduceDriver=ReduceDriver.newReduceDriver(reducer);

  reduceDriver.getConfiguration().addResource(configuration);

  reduceDriver.withInput(dummyURL,values);

  List<Pair<Text,CrawlDatum>> reduceResult;

  try {

    reduceResult=reduceDriver.run();

    for (    Pair<Text,CrawlDatum> p : reduceResult) {

      if (p.getFirst().equals(dummyURL)) {

        result.add(p.getSecond());

      }

    }

  }

 catch (  IOException e) {

    LOG.error(StringUtils.stringifyException(e));

    return result;

  }

  return result;

}

