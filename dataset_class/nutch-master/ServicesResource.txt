Location: ServicesResource.java

Content: 

@POST @Path("/commoncrawldump") public Response commoncrawlDump(ServiceConfig serviceConfig){

  String crawlId=serviceConfig.getCrawlId();

  String outputDir=crawlId + File.separator + "dump"+ File.separator+ "commoncrawl-"+ sdf.format(System.currentTimeMillis());

  Map<String,Object> args=serviceConfig.getArgs();

  args.put("outputDir",outputDir);

  if (!args.containsKey(Nutch.ARG_SEGMENTDIR)) {

    args.put("segment",crawlId + File.separator + "segments");

  }

  serviceConfig.setArgs(args);

  ServiceWorker worker=new ServiceWorker(serviceConfig,new CommonCrawlDataDumper());

  worker.run();

  return Response.ok(outputDir).type(MediaType.TEXT_PLAIN).build();

}

Location: ServicesResource.java

Content: 

@GET @Path("/commoncrawldump/{crawlId}") public Response listDumpPaths(@PathParam("crawlId") String crawlId){

  File dumpFilePath=new File(crawlId + File.separator + "dump/");

  File dumpFileList[]=dumpFilePath.listFiles();

  List<String> fileNames=new ArrayList<>();

  if (dumpFileList != null) {

    for (    File f : dumpFileList) {

      fileNames.add(f.getPath());

    }

  }

  ServiceInfo info=new ServiceInfo();

  info.setDumpPaths(fileNames);

  return Response.ok().entity(info).type(MediaType.APPLICATION_JSON).build();

}

