Location: HttpDateFormat.java

Content: 

public static Date toDate(String dateString) throws ParseException {

  return Date.from(toZonedDateTime(dateString).toInstant());

}

Location: HttpDateFormat.java

Content: 

public static long toLong(String dateString) throws ParseException {

  return toZonedDateTime(dateString).toInstant().toEpochMilli();

}

Location: HttpDateFormat.java

Content: 

public static String toString(Calendar cal){

  return FORMAT.format(cal.toInstant());

}

Location: HttpDateFormat.java

Content: 

/** 

 * Get the HTTP format of the specified date.

 * @param date a {@link java.util.Date} for conversion

 * @return the String HTTP representation of the date

 */

public static String toString(Date date){

  return FORMAT.format(date.toInstant());

}

Location: HttpDateFormat.java

Content: 

public static String toString(long millis){

  return FORMAT.format(Instant.ofEpochMilli(millis));

}

Location: HttpDateFormat.java

Content: 

public static ZonedDateTime toZonedDateTime(String dateString) throws ParseException {

  try {

    return PARSE_FORMAT.parse(dateString,ZonedDateTime::from);

  }

 catch (  DateTimeParseException ex) {

    throw new ParseException(ex.getMessage(),0);

  }

}

