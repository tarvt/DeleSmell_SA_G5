Location: Main.java

Content: 

public void ChangeColor(int x,int y,Color color){

  if (Game.TypesActive[6])   color=Color.BLACK;

  labels[x][y].setBackground(color);

}

Location: Main.java

Content: 

public void Clear(Color color){

  for (int x=0; x < Settings.Width; x++) {

    for (int y=0; y < Settings.Height; y++)     ChangeColor(x,y,color);

  }

}

Location: Main.java

Content: 

public void EndGame(boolean toMenu){

  if (!toMenu) {

    NewGame();

    return;

  }

  setOpen(false);

  infoWindow.setOpen(false);

  new Menu();

}

Location: Main.java

Content: 

@Override public void keyPressed(KeyEvent e){

}

Location: Main.java

Content: 

@Override public void keyReleased(KeyEvent e){

}

Location: Main.java

Content: 

@Override public void keyTyped(KeyEvent e){

  Game.HandleKeyInput(e.getKeyChar());

  if (StopGame)   EndGame(true);

  infoWindow.Refresh();

}

Location: Main.java

Content: 

public Main(boolean setOpen){

  window=new JFrame(title());

  window.setLocation(ResourceManager.ScreenWidth / 2 - 350,ResourceManager.ScreenHeight / 2 - 350);

  window.setSize(700,700);

  window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

  window.addMouseListener(this);

  window.addKeyListener(this);

  window.setAlwaysOnTop(true);

  NewGame();

  infoWindow=new InfoWindow(this);

  setOpen(setOpen);

  infoWindow.Refresh();

}

Location: Main.java

Content: 

public static void main(String[] args){

  Settings.LoadSettings();

  ResourceManager.LoadResources();

  new Main(true);

}

Location: Main.java

Content: 

public void mouseClicked(MouseEvent e){

  String name=e.getComponent().getName();

  String[] split=name.split(",");

  if (split.length == 2) {

    int x=Integer.parseInt(split[0]);

    int y=Integer.parseInt(split[1]);

    Game.HandleMouseInput(e.getButton(),x,y);

  }

  if (StopGame)   EndGame(true);

  infoWindow.Refresh();

}

Location: Main.java

Content: 

@Override public void mouseEntered(MouseEvent e){

}

Location: Main.java

Content: 

@Override public void mouseExited(MouseEvent e){

}

Location: Main.java

Content: 

@Override public void mousePressed(MouseEvent e){

}

Location: Main.java

Content: 

@Override public void mouseReleased(MouseEvent e){

}

Location: Main.java

Content: 

public void NewGame(){

  Game=new Game(this);

  Game.Load();

}

Location: Main.java

Content: 

public void SetMapBounds(int w,int h){

  if (labels != null) {

    for (int y=0; y < labelHeight; y++) {

      for (int x=0; x < labelWidth; x++)       window.remove(labels[x][y]);

    }

  }

  labelWidth=w;

  labelHeight=h;

  window.setLayout(new GridLayout(w,h));

  window.setSize(700,(int)(700 * h / (float)w));

  labels=new Label[w][h];

  for (int y=0; y < h; y++) {

    for (int x=0; x < w; x++) {

      Label label=new Label();

      label.setName(x + "," + y);

      label.addMouseListener(this);

      window.add(label);

      labels[x][y]=label;

    }

  }

}

Location: Main.java

Content: 

String title(){

  String title;

switch (Settings.PlayerCount) {

case 4:

    title="BLUE, GREEN, CYAN and MAGENTA BLOCK";

  break;

case 3:

title="BLUE, GREEN and CYAN BLOCK";

break;

case 2:

title="BLUE and GREEN BLOCK";

break;

case 1:

title="Poor, poor alone BLUE BLOCK";

break;

default :

title="8752897457 BLOCKS?!";

break;

}

return title + " || On Github! https://github.com/abc013/Blue-Block";

}

