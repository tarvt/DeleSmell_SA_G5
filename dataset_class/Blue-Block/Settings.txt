Location: Settings.java

Content: 

public static void CheckSettings(){

  Width=Math.min(MaxWidth,Math.max(MinWidth,Width));

  Height=Math.min(MaxHeight,Math.max(MinHeight,Height));

  if (Width != Height) {

    Height=Width;

    System.out.println("Unable to use width and height when not equal because Java. Fallback to width: " + Width);

  }

  PowerupCount=Math.min(MaxPowerupCount,PowerupCount);

  PlayerCount=Math.min(MaxPlayerCount,PlayerCount);

}

Location: Settings.java

Content: 

public static void LoadSettings(){

  ArrayList<String> lines=new ArrayList<String>();

  try {

    FileReader fr=new FileReader("settings.txt");

    BufferedReader br=new BufferedReader(fr);

    while (br.ready())     lines.add(br.readLine());

    fr.close();

    br.close();

    System.out.println("Loaded settings!");

  }

 catch (  IOException e) {

    System.out.println("Failed to load Settings! Fallback to default values.");

    return;

  }

  for (  String line : lines) {

    String[] tuple=line.split(":");

switch (tuple[0]) {

case "Height":

      Height=Integer.parseInt(tuple[1].trim());

    break;

case "Width":

  Width=Integer.parseInt(tuple[1].trim());

break;

case "PlayerCount":

PlayerCount=Integer.parseInt(tuple[1].trim());

break;

case "PowerupCount":

PowerupCount=Integer.parseInt(tuple[1].trim());

break;

case "EnableMouse":

EnableMouse=Boolean.parseBoolean(tuple[1].trim());

break;

case "EnablePlayerKills":

EnablePlayerKills=Boolean.parseBoolean(tuple[1].trim());

break;

default :

System.out.println("Unknown line in settings: " + line);

break;

}

}

CheckSettings();

}

